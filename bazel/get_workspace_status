#!/bin/bash

# This file was imported from
# https://github.com/envoyproxy/envoy/blob/master/bazel/get_workspace_status

# This script will be run bazel when building process starts to
# generate key-value information that represents the status of the
# workspace. The output should be like
#
# KEY1 VALUE1
# KEY2 VALUE2
#
# If the script exits with non-zero code, it's considered as a failure
# and the output will be discarded.

# If this SOURCE_VERSION file exists then it must have been placed here by a
# distribution doing a non-git, source build.
# Distributions would be expected to echo the commit/tag as BUILD_SCM_REVISION.
if [[ -f "SOURCE_VERSION" && -f "GIT_COMMIT" ]];
then
    echo "BUILD_SCM_REVISION $(cat GIT_COMMIT)"
    echo "STABLE_BUILD_SCM_REVISION $(cat GIT_COMMIT)"
    echo "STABLE_BUILD_TAG $(cat SOURCE_VERSION)"
    echo "BUILD_SCM_STATUS Distribution"
    exit 0
fi

# The code below presents an implementation that works for git repository.
git_rev=$(git rev-parse HEAD)
if [[ $? != 0 ]];
then
    exit 1
fi
echo "BUILD_SCM_REVISION ${git_rev}"
echo "STABLE_BUILD_SCM_REVISION ${git_rev}"


# Check whether there are any uncommitted changes.
git diff-index --quiet HEAD --
if [[ $? == 0 ]];
then
    tree_status="Clean"
else
    tree_status="Modified"
fi
echo "BUILD_SCM_STATUS ${tree_status}"
echo "STABLE_BUILD_SCM_STATUS ${tree_status}"

echo "BUILD_TAG ${git_rev}-${tree_status}"
echo "STABLE_BUILD_TAG ${git_rev}-${tree_status}"
