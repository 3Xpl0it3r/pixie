{
  "exclude": [
    "(/testdata/)",
    "(\\.gen\\.go$)",
    "(\\.gitmodules$)",
    "(\\.idea/)",
    "(\\.patch$)",
    "(\\.pb\\.go$)",
    "(\\.pbtxt$)",
    "(\\.sublime-project$)",
    "(^chef/site-cookbooks/)",
    "(^credentials/dev_infra/)",
    "(^credentials\/.*\\.yaml)",
    "(^docs/customer/)",
    "(^experimental/users/)",
    "(^src/stirling/bpf_tools/bcc_bpf/system-headers)",
    "(^src/stirling/mysql/testing/.*\\.json$)",
    "(^src/ui/offline_package_cache)",
    "(^src/ui/src/segment.js$)",
    "(^src/ui/src/types/generated/)",
    "(^src/ui/packages/pixie-api/src/types/generated/)",
    "(^third_party)",
    "(c_cpp_properties.json$)",
    "(Doxyfile$)",
    "(go\\.mod$)",
    "(go\\.sum$)",
    "(spinnaker/hal/)"
  ],
  "linters": {
    "build-linter": {
      "type": "script-and-regex",
      "include": [
        "(^third_party/.*\\.bzl$)",
        "(^third_party/BUILD\\.bazel$)",
        "(BUILD\\.bazel$)",
        "(\\.bzl$)"
      ],
      "script-and-regex.script": "./linters/buildifier.sh",
      "script-and-regex.regex": "/^(?P<filename>.*):(?P<line>\\d+): (?P<error>.*): (?P<message>.*)$/m"
    },
    "cpplint": {
      "type": "cpplint",
      "include": [
        "(\\.(c|cc|h)$)"
      ],
      "exclude": [
        "(_objc\\.h$)"
      ],
      "bin": "./linters/cpplint/cpplint.py",
      "flags": [
        "--filter=-build/c++11",
        "--filter=-build/c++14",
        "--filter=-legal/copyright",
        "--linelength=100"
      ]
    },
    "clang-format": {
      "type": "clang-format",
      "include": [
        "(\\.(m|h|mm|c|cc)$)"
      ]
    },
    "filename": {
      "type": "filename"
    },
    "goimports": {
      "type": "goimports",
      "include": [
        "(\\.go$)"
      ]
    },
    "golint": {
      "type": "golint",
      "include": [
        "(\\.go$)"
      ]
    },
    "govet": {
      "type": "govet",
      "include": [
        "(\\.go$)"
      ]
    },
    "golangci-lint": {
      "type": "golangci-lint",
      "include": [
        "(\\.go$)"
      ]
    },
    "jshint-ui": {
      "type": "jshint",
      "jshint.jshintrc": "./src/ui/.jshintrc",
      "include": [
        "(src/ui/.*\\.js$)"
      ]
    },
    "json": {
      "type": "json",
      "exclude": [
        "(\\.vscode/.*)"
      ],
      "include": [
        "(^\\.arcconfig$)",
        "(^\\.arclint$)",
        "(\\.json$)"
      ]
    },
    "merge-conflict": {
      "type": "merge-conflict"
    },
    "flake8": {
      "type": "flake8",
      "flags": [
        "--config=.flake8rc"
      ],
      "include": [
        "(\\.py$)"
      ]
    },
    "flake8-pxl": {
      "type": "flake8",
      "flags": [
        "--config=.pxl.flake8rc"
      ],
      "include": [
        "(\\.pxl$)"
      ]
    },
    "php": {
      "type": "php",
      "include": [
        "(\\.php$)"
      ]
    },
    "phutil-library": {
      "type": "phutil-library",
      "include": [
        "(^arc_addons/.*\\.php$)"
      ]
    },
    "spelling": {
      "type": "spelling",
      "exclude": [
        "(.*\\.crt$)",
        "(.*\\.key$)"
      ]
    },
    "shellcheck": {
      "type": "shellcheck",
      "include": [
        "(.*\\.sh$)"
      ]
    },
    "xhpast": {
      "type": "xhpast",
      "include": [
        "(^arc_addons/.*\\.php$)"
      ],
      "severity": {
        "5": "warning"
      }
    },
    "yaml": {
      "type": "script-and-regex",
      "script-and-regex.script": "yamllint",
      "script-and-regex.regex": "/^(?P<line>\\d+):(?P<offset>\\d+) +(?P<severity>warning|error) +(?P<message>.*) +\\((?P<name>.*)\\)$/m",
      "include": [
        "(\\.yml$)",
        "(\\.yaml$)"
      ],
      "exclude": [
        "(^demos/)"
      ]
    },
    "eslint-ui": {
      "type": "eslint",
      "bin": "./linters/eslint_ui.sh",
      "eslint.config": ".eslintrc.json",
      "eslint.setup": "./linters/eslint_setup.sh",
      "include": [
        "(^src/ui/.*\\.(tsx|ts|js)$)"
      ]
    }
  }
}
