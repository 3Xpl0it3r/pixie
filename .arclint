{
  "exclude": [
    "(Doxyfile$)",
    "(^docs/customer/.*)",
    "(src/ui/src/segment.js$)",
    "(chef/site-cookbooks/.*$)",
    "(experimental/users/.*$)",
    "(^linters/.*$)",
    "(^src/ui/offline_package_cache)",
    "(^src/stirling/bcc_bpf/system-headers)",
    "(\\.pb\\.gw\\.go$)",
    "(\\.pb\\.go$)",
    "(\\.gen\\.go$)",
    "(\\.pbtxt$)",
    "(mocks/.*\\.go$)",
    "(^third_party)",
    "(\\.idea/.*$)",
    "(\\.sublime-project$)",
    "(\\.gitmodules$)",
    "(.*/testdata/.*)",
    "(c_cpp_properties.json$)",
    "(^credentials\/.*\\.yaml)",
    "(go\\.mod$)",
    "(go\\.sum$)",
    "(.*\\.patch$)",
    "(src/ui/src/types/generated/.*)",
    "(spinnaker/hal/.*)",
    "(credentials/dev_infra/.*)",
    "(src/ui/pixie-components/dist/)",
    "(^src\/stirling\/mysql\/testing\/.*\\.json)"
  ],
  "linters": {
    "build-linter": {
      "type": "script-and-regex",
      "include": [
        "(^third_party/.*\\.bzl$)",
        "(^third_party/BUILD$)",
        "(^third_party/BUILD\\.bazel$)",
        "(WORKSPACE$)",
        "(BUILD$)",
        "(BUILD\\.bazel$)",
        "(\\.bzl$)"
      ],
      "script-and-regex.script": "./linters/buildifier.sh",
      "script-and-regex.regex": "/^(?P<filename>.*) # (?P<autofix>reformat) (?P<message>.*)$/m"
    },
    "cpplint": {
      "type": "cpplint",
      "include": ["(\\.c$)", "(\\.cc$)", "(\\.h$)"],
      "exclude": ["(_objc\\.h)"],
      "bin": "./linters/cpplint/cpplint.py",
      "flags": [
        "--filter=-build/c++11",
        "--filter=-build/c++14",
        "--filter=-legal/copyright",
        "--linelength=100"
      ]
    },
    "clang-format": {
      "type": "clang-format",
      "include": "(\\.(m|h|mm|c|cc)$)"
    },
    "filename": {
      "type": "filename"
    },
    "gofmt": {
      "include": [
          "(\\.go$)"
      ],
      "type": "gofmt"
    },
    "golint": {
      "include": [
          "(\\.go$)"
      ],
      "exclude": [
          "(experimental/users/.*\\.go$)"
      ],
      "type": "golint"
    },
    "govet": {
      "include": [
        "(\\.go$)"
      ],
      "exclude": [
          "(experimental/users/.*\\.go$)"
      ],
      "type": "govet"
    },
    "jshint-ui": {
      "type": "jshint",
      "jshint.jshintrc": "./src/ui/.jshintrc",
      "include": [
        "(src/ui/.*\\.js)"
      ]
    },
    "json": {
      "type": "json",
      "exclude": [
        "(\\.vscode/.*)"
      ],
      "include": [
        "(^\\.arcconfig$)",
        "(^\\.arclint$)",
        "(\\.json$)"
      ]
    },
    "merge-conflict": {
      "type": "merge-conflict"
    },
    "nolint": {
      "type": "nolint",
      "include": [
        "(src/ui/dist/.*$)"
      ]
    },
    "flake8": {
      "type": "flake8",
      "flags": [
        "--config=.flake8rc"
      ],
      "include": [
        "(\\.py$)"
      ],
      "exclude": [
        "(migrations/versions/.*\\.py$)"
      ]
    },
    "flake8-pxl": {
      "type": "flake8",
      "flags": [
        "--config=.pxl.flake8rc"
      ],
      "include": [
        "(\\.pxl$)"
      ]
    },
    "spelling": {
      "type": "spelling",
      "exclude": [
        "(.*\\.crt)",
        "(.*\\.key)"
      ]
    },
    "shellcheck": {
      "type": "shellcheck",
      "include": [
        "(.*\\.sh$)"
      ]
    },
    "text": {
      "type": "text",
      "text.max-line-length": 120,
      "exclude": [
        "(\\.arclint$)",
        "(LICENSE.txt)",
        "(BUILD.bazel)",
        "(chef/.*\\.json$)",
        "(demos/applications/sockshop/monitoring_manifests/grafana/.*\\.json$)",
        "(^src/ui/tools/licenses/.*\\.json$)",
        "(^tools/licenses/.*\\.json$)",
        "(^credentials/.*\\.json$)",
        "(Gopkg\\.lock)",
        "(yarn\\.lock)",
        "(__snapshots__/.*)",
        "(Makefile)",
        "(\\.go$)",
        "(src/ui/assets/images/.*)",
        "(\\.toml$)",
        "(.*\\.md)",
        "(.*\\.svg)",
        "(k8s/vizier/base/fluentbit/configmap.yaml)"
      ]
    },
    "tslint-ui": {
      "type": "tslint",
      "tslint.config": "./src/ui/tslint.json",
      "tslint.project": "./src/ui/tsconfig.json",
      "include": [
        "(src/ui/.*\\.(tsx)$)",
        "(src/ui/.*\\.(ts)$)",
        "(src/ui/.*\\.(js)$)"
      ],
      "exclude": [
        "(^src/ui/pixie-components/)"
      ]
    },
    "tslint-ui-pixie-components": {
      "type": "tslint",
      "tslint.config": "./src/ui/tslint.json",
      "tslint.project": "./src/ui/pixie-components/tsconfig.json",
      "include": [
        "(src/ui/pixie-components/src/.*\\.(tsx)$)",
        "(src/ui/pixie-components/src/.*\\.(ts)$)",
        "(src/ui/pixie-components/src/.*\\.(js)$)"
      ],
      "exclude": [
        "(^src/ui/pixie-components/dist/)"
      ]
    },
    "yaml": {
      "type": "script-and-regex",
      "script-and-regex.script": "yamllint",
      "script-and-regex.regex": "/^(?P<line>\\d+):(?P<offset>\\d+) +(?P<severity>warning|error) +(?P<message>.*) +\\((?P<name>.*)\\)$/m",
      "include": [
        "(\\.yml$)",
        "(\\.yaml$)"
      ],
      "exclude": [
        "(^demos/)"
      ]
    }
  }
}
