# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("//bazel:pl_build_system.bzl", "pl_cc_library", "pl_cc_test")

package(default_visibility = ["//src:__subpackages__"])

pl_cc_library(
    name = "cc_library",
    srcs = glob(
        [
            "*.cc",
            "*.h",
        ],
        exclude = [
            "**/*_test.cc",
            "**/*_test_utils.h",
        ],
    ),
    hdrs = ["distributed_planner.h"],
    deps = [
        "//src/carnot/planner/compiler_state:cc_library",
        "//src/carnot/planner/distributedpb:distributed_plan_pl_cc_proto",
        "//src/carnot/planner/ir:cc_library",
        "//src/carnot/planner/rules:cc_library",
        "//src/carnot/planpb:plan_pl_cc_proto",
        "//src/common/uuid:cc_library",
        "//src/shared/metadatapb:metadata_pl_cc_proto",
    ],
)

pl_cc_test(
    name = "tablet_rules_test",
    srcs = ["tablet_rules_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner:test_utils",
    ],
)

pl_cc_test(
    name = "distributed_planner_test",
    srcs = ["distributed_planner_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner:test_utils",
        "//src/carnot/udf_exporter:cc_library",
    ],
)

pl_cc_test(
    name = "distributed_plan_test",
    srcs = ["distributed_plan_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner:test_utils",
    ],
)

pl_cc_test(
    name = "distributed_splitter_test",
    srcs = ["distributed_splitter_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner:test_utils",
        "//src/carnot/planner/compiler:test_utils",
        "//src/carnot/udf_exporter:cc_library",
    ],
)

pl_cc_test(
    name = "distributed_coordinator_test",
    srcs = ["distributed_coordinator_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner:test_utils",
        "//src/carnot/udf_exporter:cc_library",
    ],
)

pl_cc_test(
    name = "removable_ops_rule_test",
    srcs = ["removable_ops_rule_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner:test_utils",
        "//src/carnot/udf_exporter:cc_library",
    ],
)

pl_cc_test(
    name = "plan_clusters_test",
    srcs = ["plan_clusters_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner:test_utils",
        "//src/carnot/udf_exporter:cc_library",
    ],
)

pl_cc_test(
    name = "distributed_stitcher_rules_test",
    srcs = ["distributed_stitcher_rules_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner:test_utils",
        "//src/carnot/udf_exporter:cc_library",
    ],
)

pl_cc_test(
    name = "distributed_rules_test",
    srcs = ["distributed_rules_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner:test_utils",
        "//src/carnot/planner/rules:test_utils",
    ],
)

pl_cc_test(
    name = "grpc_source_conversion_test",
    srcs = ["grpc_source_conversion_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner:test_utils",
    ],
)

pl_cc_test(
    name = "partial_op_mgr_test",
    srcs = ["partial_op_mgr_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner:test_utils",
        "//src/carnot/planner/rules:test_utils",
    ],
)
