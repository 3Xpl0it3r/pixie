# gazelle:ignore
package(default_visibility = ["//visibility:public"])

load("//bazel:pl_build_system.bzl", "pl_cc_library", "pl_cc_test", "pl_cc_test_library", "pl_go_library")
load("@io_bazel_rules_go//go:def.bzl", "go_test")

pl_cc_library(
    name = "cc_library",
    srcs = glob(
        [
            "*.cc",
            "*.h",
        ],
        exclude = [
            "**/*_test.cc",
            "**/*_test_utils.h",
            "compiler_export.cc",
            "compiler_export.h",
        ],
    ),
    hdrs = ["compiler.h"],
    deps = [
        "//src/carnot/compiler/compilerpb:compiler_status_pl_cc_proto",
        "//src/carnot/plan:cc_library",
        "//src/carnot/planpb:plan_pl_cc_proto",
        "//src/carnot/udf:cc_library",
        "//third_party:libpypa",
    ],
)

pl_cc_library(
    name = "cc_compiler_export",
    srcs = [
        "compiler_export.cc",
    ],
    hdrs = ["compiler_export.h"],
    deps = [
        "//src/carnot/compiler:cc_library",
        "//src/carnot/compiler/compilerpb:compiler_status_pl_cc_proto",
        "//src/carnot/udf_exporter:cc_library",
    ],
)

pl_go_library(
    name = "go_compiler_library",
    srcs = [
        "compiler.go",
        "compiler_error_context.go",
    ],
    cdeps = [":cc_compiler_export"],
    cgo = True,
    importpath = "pixielabs.ai/pixielabs/src/carnot/compiler",
    visibility = ["//visibility:public"],
    deps = [
        "//src/carnot/compiler/compilerpb:compiler_status_pl_go_proto",
        "//src/carnot/planpb:plan_pl_go_proto",
        "//src/common/base/proto:status_pl_go_proto",
        "//src/shared/types/proto:types_pl_go_proto",
        "//src/table_store/proto:schema_pl_go_proto",
        "@com_github_gogo_protobuf//proto:go_default_library",
        "@com_github_gogo_protobuf//types:go_default_library",
    ],
)

go_test(
    name = "go_compiler_test",
    srcs = ["compiler_test.go"],
    deps = [
        ":go_compiler_library",
        "//src/carnot/compiler/compilerpb:compiler_status_pl_go_proto",
        "//src/carnot/planpb:plan_pl_go_proto",
        "//src/common/base/proto:status_pl_go_proto",
        "//src/table_store/proto:schema_pl_go_proto",
        "@com_github_gogo_protobuf//proto:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
    ],
)

pl_cc_test(
    name = "compiler_export_test",
    srcs = ["compiler_export_test.cc"],
    deps = [
        ":cc_compiler_export",
    ],
)

pl_cc_test_library(
    name = "test_utils",
    hdrs = glob(["*_test_utils.h"]),
    deps = [
        ":cc_library",
    ],
)

pl_cc_test(
    name = "ir_nodes_test",
    srcs = ["ir_nodes_test.cc"],
    deps = [
        ":cc_library",
        ":test_utils",
    ],
)

pl_cc_test(
    name = "pattern_match_test",
    srcs = ["pattern_match_test.cc"],
    deps = [
        ":cc_library",
        ":test_utils",
    ],
)

pl_cc_test(
    name = "ast_visitor_test",
    srcs = ["ast_visitor_test.cc"],
    deps = [
        ":cc_library",
        ":test_utils",
    ],
)

pl_cc_test(
    name = "string_reader_test",
    srcs = ["string_reader_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "registry_info_test",
    srcs = ["registry_info_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "ir_verifier_test",
    srcs = ["ir_verifier_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "optimize_ir_test",
    srcs = ["optimize_ir_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "compiler_test",
    srcs = ["compiler_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planpb:plan_testutils",
        "//src/carnot/udf_exporter:cc_library",
    ],
)

pl_cc_test(
    name = "analyzer_test",
    srcs = ["analyzer_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "compiler_error_context_test",
    srcs = ["compiler_error_context_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/compiler/compilerpb:compiler_status_pl_cc_proto",
    ],
)
