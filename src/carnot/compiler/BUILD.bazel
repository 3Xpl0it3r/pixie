package(default_visibility = ["//visibility:public"])

load("//bazel:pl_build_system.bzl", "pl_cc_library", "pl_cc_test", "pl_cc_test_library", "pl_linkopts")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

pl_cc_library(
    name = "cc_library",
    srcs = glob(
        [
            "*.cc",
            "*.h",
        ],
        exclude = [
            "**/*_test.cc",
            "**/*_test_utils.h",
        ],
    ),
    hdrs = ["compiler.h"],
    deps = [
        "//src/carnot/compiler/ast:cc_library",
        "//src/carnot/compiler/metadata:cc_library",
        "//src/carnot/compiler/ir:cc_library",
        "//src/carnot/compiler/rules:cc_library",
        "//src/carnot/compiler/compiler_error_context:cc_library",
        "//src/carnot/compiler/compiler_state:cc_library",
        "//src/carnot/compiler/parser:cc_library",
        "//src/carnot/compiler/objects:cc_library",
    ],
)

pl_cc_test_library(
    name = "test_utils",
    hdrs = glob(["*_test_utils.h"]),
    deps = [
        ":cc_library",
    ],
)

pl_cc_test(
    name = "ast_visitor_test",
    srcs = ["ast_visitor_test.cc"],
    deps = [
        ":cc_library",
        ":test_utils",
    ],
)

pl_cc_test(
    name = "ast_visitor_expression_test",
    srcs = ["ast_visitor_expression_test.cc"],
    deps = [
        ":cc_library",
        ":test_utils",
    ],
)

pl_cc_test(
    name = "compiler_test",
    srcs = ["compiler_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planpb:plan_testutils",
        "//src/carnot/udf_exporter:cc_library",
    ],
)

pl_cc_test(
    name = "analyzer_test",
    srcs = ["analyzer_test.cc"],
    deps = [":cc_library"],
)

go_library(
    name = "go_default_library",
    srcs = [
        "analyzer.h",
        "ast_visitor.h",
        "compiler.h",
        "compiler_error_context.go",
        "test_utils.h",
        "var_table.h",
    ],
    importpath = "pixielabs.ai/pixielabs/src/carnot/compiler",
    deps = [
        "//src/carnot/compiler/compilerpb:compiler_status_pl_go_proto",
        "//src/common/base/proto:status_pl_go_proto",
        "@com_github_gogo_protobuf//types:go_default_library",
    ],
)

pl_cc_test(
    name = "var_table_test",
    srcs = ["var_table_test.cc"],
    deps = [
        ":cc_library",
        ":test_utils",
    ],
)
