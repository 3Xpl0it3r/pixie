# gazelle:ignore
package(default_visibility = ["//visibility:public"])

load("//bazel:pl_build_system.bzl", "pl_cc_library", "pl_cc_test", "pl_cc_test_library", "pl_cgo_library", "pl_linkopts")
load("@io_bazel_rules_go//go:def.bzl", "go_test")

pl_cc_library(
    name = "cc_library",
    srcs = glob(
        [
            "*.cc",
            "*.h",
        ],
        exclude = [
            "**/*_test.cc",
            "**/*_test_utils.h",
            "cgo_export.*",
        ],
    ),
    hdrs = ["logical_planner.h"],
    deps = [
        "//src/carnot/compiler:cc_library",
        "//src/carnot/compiler/distributedpb:distributed_plan_pl_cc_proto",
        "//src/carnot/udf_exporter:cc_library",
    ],
)

pl_cc_test(
    name = "logical_planner_test",
    srcs = ["logical_planner_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/compiler/distributedpb:test_utils",
        "//src/carnot/udf_exporter:cc_library",
    ],
)

pl_cc_library(
    name = "cgo_export",
    srcs = [
        "cgo_export.cc",
    ],
    hdrs = ["cgo_export.h"],
    deps = [
        ":cc_library",
        "//src/carnot/compiler:cc_library",
        "//src/carnot/compiler/compilerpb:compiler_status_pl_cc_proto",
        "//src/carnot/compiler/distributedpb:distributed_plan_pl_cc_proto",
        "//src/carnot/udf_exporter:cc_library",
    ],
)

pl_cc_test(
    name = "cgo_export_test",
    srcs = ["cgo_export_test.cc"],
    deps = [
        ":cgo_export",
        "//src/carnot/compiler:test_utils",
        "//src/carnot/compiler/distributedpb:test_utils",
    ],
)

pl_cgo_library(
    name = "go_default_library",
    srcs = glob(
        include = ["logical_planner.go"],
        exclude = ["logical_planner_test.go"],
    ),
    cdeps = [":cgo_export"],
    cgo = True,
    importpath = "pixielabs.ai/pixielabs/src/carnot/compiler/logical_planner",
    deps = [
        "//src/carnot/compiler/distributedpb:distributed_plan_pl_go_proto",
        "//src/carnot/compiler/compilerpb:compiler_status_pl_go_proto",
        "//src/carnot/compiler:go_default_library",
        "//src/common/base/proto:status_pl_go_proto",
        "//src/table_store/proto:schema_pl_go_proto",
        "@com_github_gogo_protobuf//proto:go_default_library",
        "@com_github_gogo_protobuf//types:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["logical_planner_test.go"],
    deps = [
        ":go_default_library",
        "//src/carnot/compiler/compilerpb:compiler_status_pl_go_proto",
        "//src/carnot/compiler/distributedpb:distributed_plan_pl_go_proto",
        "//src/carnot/planpb:plan_pl_go_proto",
        "//src/common/base/proto:status_pl_go_proto",
        "//src/table_store/proto:schema_pl_go_proto",
        "@com_github_gogo_protobuf//proto:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
    ],
)
