package(default_visibility = ["//src:__subpackages__"])

load("//bazel:pl_build_system.bzl", "pl_cc_binary", "pl_cc_library", "pl_cc_test")

pl_cc_library(
    name = "cc_library",
    srcs = glob(
        ["*.cc"],
        exclude = [
            "**/*_test.cc",
            "**/*_benchmark.cc",
        ],
    ),
    hdrs = glob(["*.h"]),
    deps = [
        "//src/carnot/exec/ml:cc_library",
        "//src/carnot/udf:cc_library",
        "//third_party/tdigest",
        "@com_github_google_sentencepiece//:libsentencepiece",
        "@com_github_tencent_rapidjson//:rapidjson",
    ],
)

pl_cc_test(
    name = "collections_test",
    srcs = ["collections_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/udf:udf_testutils",
    ],
)

pl_cc_test(
    name = "conditionals_test",
    srcs = ["conditionals_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/udf:udf_testutils",
    ],
)

pl_cc_test(
    name = "math_sketches_test",
    srcs = ["math_sketches_test.cc"],
    # TODO(zasgar): PL-440 Fix ASAN/TSAN issues with tdigest code.
    tags = [
        "no_asan",
        "no_tsan",
    ],
    deps = [
        ":cc_library",
        "//src/carnot/udf:udf_testutils",
    ],
)

pl_cc_test(
    name = "math_ops_test",
    srcs = ["math_ops_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/udf:udf_testutils",
    ],
)

pl_cc_test(
    name = "json_ops_test",
    srcs = ["json_ops_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/udf:udf_testutils",
    ],
)

pl_cc_test(
    name = "string_ops_test",
    srcs = ["string_ops_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/udf:udf_testutils",
    ],
)

pl_cc_test(
    name = "ml_ops_test",
    srcs = ["ml_ops_test.cc"],
    args = [
        "--sentencepiece_dir=$(location //:sentencepiece.proto)",
        "--embedding_dir=$(location //:embedding.proto)",
    ],
    data = [
        "//:embedding.proto",
        "//:sentencepiece.proto",
    ],
    deps = [
        ":cc_library",
        "//src/carnot/exec/ml:eigen_testutils",
        "//src/carnot/udf:udf_testutils",
    ],
)

pl_cc_binary(
    name = "ml_ops_benchmark",
    testonly = 1,
    srcs = ["ml_ops_benchmark.cc"],
    args = [
        "--sentencepiece_dir=$(location //:sentencepiece.proto)",
        "--embedding_dir=$(location //:embedding.proto)",
    ],
    data = [
        "//:embedding.proto",
        "//:sentencepiece.proto",
    ],
    deps = [
        ":cc_library",
        "//src/common/benchmark:cc_library",
        # "@org_tensorflow//tensorflow/lite:tflite_with_xnnpack",
    ],
)

pl_cc_test(
    name = "request_path_ops_test",
    srcs = ["request_path_ops_test.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/udf:udf_testutils",
    ],
)
