load("@io_bazel_rules_go//go:def.bzl", "go_library")

package(default_visibility = ["//visibility:public"])

load("//bazel:pl_build_system.bzl", "pl_cc_library")

config_setting(
    name = "stamped",
    values = {
        "stamp": "true",
    },
)

stamped_xdefs = {
    "buildSCMRevision": "{BUILD_SCM_REVISION}",
    "buildSCMStatus": "{BUILD_SCM_STATUS}",
    "buildTimeStamp": "{BUILD_TIMESTAMP}",
    "buildSemver": "{BUILD_TAG}",
    "buildNumber": "{BUILD_NUMBER}",
}

unstamped_xdefs = {
    "buildSCMRevision": "0000000",
    "buildSCMStatus": "Modified",
    "buildTimeStamp": "0",
    "buildSemver": "0.0.0-dev",
    "buildNumber": "0",
}

# https://github.com/bazelbuild/bazel/issues/1992
# Borrowed from envoy build.
genrule(
    name = "gen_version_linkstamp",
    srcs = ["version_linkstamp.cc"],
    outs = ["gen_version_linkstamp.cc"],
    stamp = 1,
    cmd = """
    BUILD_SCM_REVISION=$$(
          grep STABLE_BUILD_SCM_REVISION bazel-out/stable-status.txt \\
        | sed 's/^STABLE_BUILD_SCM_REVISION //')
    BUILD_SCM_STATUS=$$(
          grep STABLE_BUILD_SCM_STATUS bazel-out/stable-status.txt \\
        | sed 's/^STABLE_BUILD_SCM_STATUS //')
    BUILD_TIMESTAMP=$$(
          grep BUILD_TIMESTAMP bazel-out/volatile-status.txt \\
        | sed 's/^BUILD_TIMESTAMP //')
    BUILD_TAG=$$(
          grep STABLE_BUILD_TAG bazel-out/stable-status.txt \\
        | sed 's/^STABLE_BUILD_TAG //')
    BUILD_NUMBER=$$(
          grep STABLE_BUILD_NUMBER bazel-out/stable-status.txt \\
        | sed 's/^STABLE_BUILD_NUMBER //')

    echo "#define BUILD_SCM_REVISION \\"$$BUILD_SCM_REVISION\\"" >> $@
    echo "#define BUILD_SCM_STATUS \\"$$BUILD_SCM_STATUS\\"" >> $@
    echo "#define BUILD_TIMESTAMP $$BUILD_TIMESTAMP" >> $@
    echo "#define BUILD_TAG \\"$$BUILD_TAG\\"" >> $@
    echo "#define BUILD_NUMBER \\"$$BUILD_NUMBER\\"" >> $@
    cat $(location :version_linkstamp.cc) >> $@
    """,
)

pl_cc_library(
    name = "cc_library",
    srcs = [
        "version.cc",
        "gen_version_linkstamp.cc",
    ],
    hdrs = ["version.h"],
    deps = [
        "//src/shared/types/proto:types_pl_cc_proto",
        "//third_party:arrow",
        "@com_google_absl//absl/time",
        "@com_google_farmhash//:farmhash",
    ],
)

go_library(
    name = "go_default_library",
    srcs = [
        "version.go",
        "version.h",
    ],
    importpath = "pixielabs.ai/pixielabs/src/shared/version",
    x_defs = select({
        ":stamped": stamped_xdefs,
        "//conditions:default": unstamped_xdefs,
    }),
    deps = ["@com_github_blang_semver//:go_default_library"],
)
