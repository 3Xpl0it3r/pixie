package(default_visibility = ["//visibility:public"])

load("//bazel:pl_build_system.bzl", "pl_cc_binary", "pl_cc_library", "pl_cc_test", "pl_cc_test_library")

pl_cc_library(
    name = "cc_library",
    srcs = glob(
        ["*.cc"],
        exclude = [
            "**/*_test.cc",
            "**/*_benchmark.cc",
        ],
    ),
    hdrs = glob(
        ["*.h"],
        exclude = [
            "**/*_mock.h",
            "test_utils.h",
        ],
    ),
    deps = [
        "//src/carnot/planner/distributedpb:distributed_plan_pl_cc_proto",
        "//src/common/system:cc_library",
        "//src/shared/bloomfilter:cc_library",
        "//src/shared/k8s/metadatapb:metadata_pl_cc_proto",
        "//src/shared/metadatapb:metadata_pl_cc_proto",
        "@com_github_cameron314_concurrentqueue//:concurrentqueue",
        "@com_github_rlyeh_sole//:sole",
        "@com_google_absl//absl/numeric:int128",
        "@com_google_googletest//:gtest_prod",
    ],
)

pl_cc_test_library(
    name = "test_utils",
    hdrs = ["test_utils.h"],
    deps = [
        ":cc_library",
    ],
)

pl_cc_test(
    name = "state_manager_test",
    srcs = [
        "cgroup_metadata_reader_mock.h",
        "state_manager_test.cc",
    ],
    data = glob(["testdata/**/*"]),
    deps = [
        ":cc_library",
        ":test_utils",
        "//src/common/system:cc_library_mock",
    ],
)

pl_cc_test(
    name = "metadata_filter_test",
    srcs = ["metadata_filter_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "pids_test",
    srcs = ["pids_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "k8s_objects_test",
    srcs = ["k8s_objects_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "cgroup_metadata_reader_test",
    srcs = ["cgroup_metadata_reader_test.cc"],
    data = glob(["testdata/**/*"]),
    deps = [
        ":cc_library",
        "//src/common/system:cc_library_mock",
    ],
)

pl_cc_test(
    name = "base_types_test",
    srcs = ["base_types_test.cc"],
    deps = [
        ":cc_library",
        "@com_google_absl//absl/hash:hash_testing",
    ],
)

pl_cc_test(
    name = "metadata_state_test",
    srcs = ["metadata_state_test.cc"],
    deps = [
        ":cc_library",
    ],
)

pl_cc_binary(
    name = "base_types_benchmark",
    testonly = 1,
    srcs = ["base_types_benchmark.cc"],
    deps = [
        ":cc_library",
        "//src/common/benchmark:cc_library",
        "@com_google_benchmark//:benchmark_main",
    ],
)
