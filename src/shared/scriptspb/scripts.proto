/*
 * Copyright 2018- The Pixie Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

syntax = "proto3";

package px.shared.scriptspb;

option go_package = "scriptspb";

import "src/common/base/statuspb/status.proto";
import "src/shared/types/typespb/types.proto";

// FuncArgsSpec specifies the flags that are defined within a query.
message FuncArgsSpec {
  message Arg {
    // The data type that this arg accepts
    types.DataType data_type = 1;
    // The semantic type that this arg accepts
    types.SemanticType semantic_type = 2;
    // The name of this arg.
    string name = 3;
    // The optional default value assigned to this arg.
    string default_value = 5;
  }
  repeated Arg args = 1;
}

// VisSpec provides information to specify the visualization of a function.
message VisSpec {
  string vega_spec = 1;
}

// VisFuncsInfo contains info about each px.vis annotated function.
message VisFuncsInfo {
  // Map from function name to doc string for that function.
  map<string, string> doc_string_map = 1;
  // Map from function name to VisSpec for the function.
  map<string, VisSpec> vis_spec_map = 2;
  // Mapping from function name to arguments.
  map<string, FuncArgsSpec> fn_args_map = 3;
}

message VisFuncsInfoResult {
  px.statuspb.Status status = 1;
  VisFuncsInfo info = 2;
}

message MainFuncSpecResult {
  px.statuspb.Status status = 1;
  FuncArgsSpec main_func_spec = 2;
}
