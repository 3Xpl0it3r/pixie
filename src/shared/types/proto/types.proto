syntax = "proto3";

package pl.types;

option go_package = "typespb";

// The list of data types supported by our execution engine.
enum DataType {
  DATA_TYPE_UNKNOWN = 0;
  BOOLEAN = 1;
  INT64 = 2;
  FLOAT64 = 3;
  STRING = 4;
  TIME64NS = 5;
}

// The types of patterns for the different data elements.
//|                | Current Value | Time Series | Histagram | Event log | Top K | Example                          |
//|----------------|---------------|-------------|-----------|-----------|-------|----------------------------------|
//| UNSPECIFIED    |               |             |           |           |       |                                  |
//| METRIC_COUNTER | Y             | Y           | N         | Y?        | N     | time, cpu_utime_ns               |
//| METRIC_GAUGE   | Y             | Y           | Y         | Y?        | N     | system_percent, http_resp_latency|
//| GENERAL_ENUM   | Y             | N           | Y         | Y         | Y?    | http_status, bpf_event           |
//| GENERAL        | Y             | N           | N         | Y         | Y     | src_addr, src_port, pid          |
//| STRUCTURED     | Y             | N           | N         | Y         | N     | http_body, http_headers          |
// Counters and gauges generally only applies to numeric types. General_enum records states/properties with finite
// locality. General includes other information/logs. Structured is everything can be parsed(JSON, HTML, SQL body etc.).
enum PatternType {
   UNSPECIFIED = 0;
   GENERAL = 100;
   GENERAL_ENUM = 101;
   STRUCTURED = 200;
   METRIC_COUNTER = 300;
   METRIC_GAUGE = 301;
}
