syntax = "proto3";

package pl.common;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "src/common/uuid/proto/uuid.proto";

option go_package = "pixielabs.ai/pixielabs/src/shared/services/proto;jwt";

// Store the basic JWT claim information.
message JWTClaims {
  // Generic claims, as referenced at
  // https://tools.ietf.org/html/rfc7519#section-4.1
  string audience     = 1 [
                          (gogoproto.jsontag) = "aud"
                          ];

  int64 expires_at    = 2 [
                          (gogoproto.jsontag) = "exp"
                          ];

  string jti          = 3 [
                          (gogoproto.customname) = "JTI",
                           (gogoproto.jsontag) = "jti"
                          ];

  int64 issued_at     = 4 [
                          (gogoproto.jsontag) = "iat"
                          ];

  string issuer       = 5 [
                          (gogoproto.jsontag) = "iss"
                          ];

  int64 not_before    = 6 [
                          (gogoproto.jsontag) = "nbf"
                          ];

  string subject      = 7 [
                          (gogoproto.jsontag) = "sub"
                          ];

  // Custom claims.
  // TODO(michelle): Remove userID, orgID, and email below when
  // the services are updated to use the new custom claims.
  string user_id = 8 [
          (gogoproto.customname) = "UserID",
          (gogoproto.jsontag) = "userID"
  ];
  // The organization that this user belongs to.
  string org_id = 9 [
          (gogoproto.customname) = "OrgID",
          (gogoproto.jsontag) = "orgID"
  ];
  string email   = 10;

  // The permitted scopes for the jwt. For now, these scopes will just be
  // "user", "cluster", or "service", but may be more fine-grained in the future
  // like "read:user_profile", etc.
  repeated string scopes = 11;

  oneof custom_claims {
    UserJWTClaims user_claims = 12;
    ServiceJWTClaims service_claims = 13;
    ClusterJWTClaims cluster_claims = 14;
  }
}

// Claims for User JWTs.
message UserJWTClaims {
  string user_id = 1 [
          (gogoproto.customname) = "UserID",
          (gogoproto.jsontag) = "userID"
  ];
  // The organization that this user belongs to.
  string org_id = 2 [
          (gogoproto.customname) = "OrgID",
          (gogoproto.jsontag) = "orgID"
  ];
  string email   = 3;
}

// Claims for Service JWTs.
message ServiceJWTClaims {
  string service_id = 1 [
          (gogoproto.customname) = "ServiceID",
          (gogoproto.jsontag) = "serviceID"
  ];
}

// Claims for Cluster JWTs.
message ClusterJWTClaims {
  string cluster_id = 1 [
          (gogoproto.customname) = "ClusterID",
          (gogoproto.jsontag) = "clusterID"
  ];
}
