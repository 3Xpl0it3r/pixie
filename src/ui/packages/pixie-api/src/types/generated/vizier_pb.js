// source: src/vizier/vizierpb/vizier.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.pl.api.vizierpb.BooleanColumn', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.Column', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.Column.ColDataCase', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.CompilerError', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.DataType', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.DebugLogRequest', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.DebugLogResponse', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.ErrorDetails', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.ErrorDetails.ErrorCase', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.ExecuteScriptRequest', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.ExecuteScriptResponse', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.ExecuteScriptResponse.ResultCase', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.Float64Column', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.HealthCheckRequest', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.HealthCheckResponse', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.Int64Column', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.LifeCycleState', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.MutationInfo', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.MutationInfo.MutationState', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.QueryData', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.QueryExecutionStats', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.QueryMetadata', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.QueryTimingInfo', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.Relation', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.Relation.ColumnInfo', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.RowBatchData', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.ScalarValue', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.ScalarValue.ValueCase', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.SemanticType', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.Status', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.StringColumn', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.Time64NSColumn', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.UInt128', null, global);
goog.exportSymbol('proto.pl.api.vizierpb.UInt128Column', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.UInt128 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.UInt128, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.UInt128.displayName = 'proto.pl.api.vizierpb.UInt128';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.BooleanColumn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pl.api.vizierpb.BooleanColumn.repeatedFields_, null);
};
goog.inherits(proto.pl.api.vizierpb.BooleanColumn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.BooleanColumn.displayName = 'proto.pl.api.vizierpb.BooleanColumn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.Int64Column = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pl.api.vizierpb.Int64Column.repeatedFields_, null);
};
goog.inherits(proto.pl.api.vizierpb.Int64Column, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.Int64Column.displayName = 'proto.pl.api.vizierpb.Int64Column';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.UInt128Column = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pl.api.vizierpb.UInt128Column.repeatedFields_, null);
};
goog.inherits(proto.pl.api.vizierpb.UInt128Column, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.UInt128Column.displayName = 'proto.pl.api.vizierpb.UInt128Column';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.Float64Column = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pl.api.vizierpb.Float64Column.repeatedFields_, null);
};
goog.inherits(proto.pl.api.vizierpb.Float64Column, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.Float64Column.displayName = 'proto.pl.api.vizierpb.Float64Column';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.Time64NSColumn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pl.api.vizierpb.Time64NSColumn.repeatedFields_, null);
};
goog.inherits(proto.pl.api.vizierpb.Time64NSColumn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.Time64NSColumn.displayName = 'proto.pl.api.vizierpb.Time64NSColumn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.StringColumn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pl.api.vizierpb.StringColumn.repeatedFields_, null);
};
goog.inherits(proto.pl.api.vizierpb.StringColumn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.StringColumn.displayName = 'proto.pl.api.vizierpb.StringColumn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.Column = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pl.api.vizierpb.Column.oneofGroups_);
};
goog.inherits(proto.pl.api.vizierpb.Column, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.Column.displayName = 'proto.pl.api.vizierpb.Column';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.RowBatchData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pl.api.vizierpb.RowBatchData.repeatedFields_, null);
};
goog.inherits(proto.pl.api.vizierpb.RowBatchData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.RowBatchData.displayName = 'proto.pl.api.vizierpb.RowBatchData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.Relation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pl.api.vizierpb.Relation.repeatedFields_, null);
};
goog.inherits(proto.pl.api.vizierpb.Relation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.Relation.displayName = 'proto.pl.api.vizierpb.Relation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.Relation.ColumnInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.Relation.ColumnInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.Relation.ColumnInfo.displayName = 'proto.pl.api.vizierpb.Relation.ColumnInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.CompilerError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.CompilerError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.CompilerError.displayName = 'proto.pl.api.vizierpb.CompilerError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.ErrorDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pl.api.vizierpb.ErrorDetails.oneofGroups_);
};
goog.inherits(proto.pl.api.vizierpb.ErrorDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.ErrorDetails.displayName = 'proto.pl.api.vizierpb.ErrorDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pl.api.vizierpb.Status.repeatedFields_, null);
};
goog.inherits(proto.pl.api.vizierpb.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.Status.displayName = 'proto.pl.api.vizierpb.Status';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.ScalarValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pl.api.vizierpb.ScalarValue.oneofGroups_);
};
goog.inherits(proto.pl.api.vizierpb.ScalarValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.ScalarValue.displayName = 'proto.pl.api.vizierpb.ScalarValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.ExecuteScriptRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pl.api.vizierpb.ExecuteScriptRequest.repeatedFields_, null);
};
goog.inherits(proto.pl.api.vizierpb.ExecuteScriptRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.ExecuteScriptRequest.displayName = 'proto.pl.api.vizierpb.ExecuteScriptRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.repeatedFields_, null);
};
goog.inherits(proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.displayName = 'proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.displayName = 'proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.QueryTimingInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.QueryTimingInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.QueryTimingInfo.displayName = 'proto.pl.api.vizierpb.QueryTimingInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.QueryExecutionStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.QueryExecutionStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.QueryExecutionStats.displayName = 'proto.pl.api.vizierpb.QueryExecutionStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.QueryMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.QueryMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.QueryMetadata.displayName = 'proto.pl.api.vizierpb.QueryMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.QueryData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.QueryData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.QueryData.displayName = 'proto.pl.api.vizierpb.QueryData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.ExecuteScriptResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pl.api.vizierpb.ExecuteScriptResponse.oneofGroups_);
};
goog.inherits(proto.pl.api.vizierpb.ExecuteScriptResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.ExecuteScriptResponse.displayName = 'proto.pl.api.vizierpb.ExecuteScriptResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.MutationInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pl.api.vizierpb.MutationInfo.repeatedFields_, null);
};
goog.inherits(proto.pl.api.vizierpb.MutationInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.MutationInfo.displayName = 'proto.pl.api.vizierpb.MutationInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.MutationInfo.MutationState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.MutationInfo.MutationState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.MutationInfo.MutationState.displayName = 'proto.pl.api.vizierpb.MutationInfo.MutationState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.HealthCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.HealthCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.HealthCheckRequest.displayName = 'proto.pl.api.vizierpb.HealthCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.HealthCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.HealthCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.HealthCheckResponse.displayName = 'proto.pl.api.vizierpb.HealthCheckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.DebugLogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.DebugLogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.DebugLogRequest.displayName = 'proto.pl.api.vizierpb.DebugLogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pl.api.vizierpb.DebugLogResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pl.api.vizierpb.DebugLogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pl.api.vizierpb.DebugLogResponse.displayName = 'proto.pl.api.vizierpb.DebugLogResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.UInt128.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.UInt128.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.UInt128} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.UInt128.toObject = function(includeInstance, msg) {
  var f, obj = {
    low: jspb.Message.getFieldWithDefault(msg, 1, 0),
    high: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.UInt128}
 */
proto.pl.api.vizierpb.UInt128.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.UInt128;
  return proto.pl.api.vizierpb.UInt128.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.UInt128} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.UInt128}
 */
proto.pl.api.vizierpb.UInt128.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLow(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHigh(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.UInt128.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.UInt128.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.UInt128} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.UInt128.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLow();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getHigh();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 low = 1;
 * @return {number}
 */
proto.pl.api.vizierpb.UInt128.prototype.getLow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.UInt128} returns this
 */
proto.pl.api.vizierpb.UInt128.prototype.setLow = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 high = 2;
 * @return {number}
 */
proto.pl.api.vizierpb.UInt128.prototype.getHigh = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.UInt128} returns this
 */
proto.pl.api.vizierpb.UInt128.prototype.setHigh = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pl.api.vizierpb.BooleanColumn.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.BooleanColumn.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.BooleanColumn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.BooleanColumn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.BooleanColumn.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: (f = jspb.Message.getRepeatedBooleanField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.BooleanColumn}
 */
proto.pl.api.vizierpb.BooleanColumn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.BooleanColumn;
  return proto.pl.api.vizierpb.BooleanColumn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.BooleanColumn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.BooleanColumn}
 */
proto.pl.api.vizierpb.BooleanColumn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<boolean>} */ (reader.readPackedBool());
      msg.setDataList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.BooleanColumn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.BooleanColumn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.BooleanColumn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.BooleanColumn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedBool(
      1,
      f
    );
  }
};


/**
 * repeated bool data = 1;
 * @return {!Array<boolean>}
 */
proto.pl.api.vizierpb.BooleanColumn.prototype.getDataList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 1));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.pl.api.vizierpb.BooleanColumn} returns this
 */
proto.pl.api.vizierpb.BooleanColumn.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.pl.api.vizierpb.BooleanColumn} returns this
 */
proto.pl.api.vizierpb.BooleanColumn.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pl.api.vizierpb.BooleanColumn} returns this
 */
proto.pl.api.vizierpb.BooleanColumn.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pl.api.vizierpb.Int64Column.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.Int64Column.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.Int64Column.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.Int64Column} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Int64Column.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.Int64Column}
 */
proto.pl.api.vizierpb.Int64Column.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.Int64Column;
  return proto.pl.api.vizierpb.Int64Column.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.Int64Column} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.Int64Column}
 */
proto.pl.api.vizierpb.Int64Column.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setDataList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.Int64Column.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.Int64Column.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.Int64Column} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Int64Column.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 data = 1;
 * @return {!Array<number>}
 */
proto.pl.api.vizierpb.Int64Column.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pl.api.vizierpb.Int64Column} returns this
 */
proto.pl.api.vizierpb.Int64Column.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pl.api.vizierpb.Int64Column} returns this
 */
proto.pl.api.vizierpb.Int64Column.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pl.api.vizierpb.Int64Column} returns this
 */
proto.pl.api.vizierpb.Int64Column.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pl.api.vizierpb.UInt128Column.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.UInt128Column.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.UInt128Column.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.UInt128Column} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.UInt128Column.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.pl.api.vizierpb.UInt128.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.UInt128Column}
 */
proto.pl.api.vizierpb.UInt128Column.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.UInt128Column;
  return proto.pl.api.vizierpb.UInt128Column.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.UInt128Column} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.UInt128Column}
 */
proto.pl.api.vizierpb.UInt128Column.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pl.api.vizierpb.UInt128;
      reader.readMessage(value,proto.pl.api.vizierpb.UInt128.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.UInt128Column.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.UInt128Column.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.UInt128Column} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.UInt128Column.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pl.api.vizierpb.UInt128.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UInt128 data = 1;
 * @return {!Array<!proto.pl.api.vizierpb.UInt128>}
 */
proto.pl.api.vizierpb.UInt128Column.prototype.getDataList = function() {
  return /** @type{!Array<!proto.pl.api.vizierpb.UInt128>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pl.api.vizierpb.UInt128, 1));
};


/**
 * @param {!Array<!proto.pl.api.vizierpb.UInt128>} value
 * @return {!proto.pl.api.vizierpb.UInt128Column} returns this
*/
proto.pl.api.vizierpb.UInt128Column.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pl.api.vizierpb.UInt128=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pl.api.vizierpb.UInt128}
 */
proto.pl.api.vizierpb.UInt128Column.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pl.api.vizierpb.UInt128, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pl.api.vizierpb.UInt128Column} returns this
 */
proto.pl.api.vizierpb.UInt128Column.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pl.api.vizierpb.Float64Column.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.Float64Column.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.Float64Column.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.Float64Column} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Float64Column.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.Float64Column}
 */
proto.pl.api.vizierpb.Float64Column.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.Float64Column;
  return proto.pl.api.vizierpb.Float64Column.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.Float64Column} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.Float64Column}
 */
proto.pl.api.vizierpb.Float64Column.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setDataList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.Float64Column.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.Float64Column.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.Float64Column} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Float64Column.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
};


/**
 * repeated double data = 1;
 * @return {!Array<number>}
 */
proto.pl.api.vizierpb.Float64Column.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pl.api.vizierpb.Float64Column} returns this
 */
proto.pl.api.vizierpb.Float64Column.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pl.api.vizierpb.Float64Column} returns this
 */
proto.pl.api.vizierpb.Float64Column.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pl.api.vizierpb.Float64Column} returns this
 */
proto.pl.api.vizierpb.Float64Column.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pl.api.vizierpb.Time64NSColumn.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.Time64NSColumn.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.Time64NSColumn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.Time64NSColumn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Time64NSColumn.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.Time64NSColumn}
 */
proto.pl.api.vizierpb.Time64NSColumn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.Time64NSColumn;
  return proto.pl.api.vizierpb.Time64NSColumn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.Time64NSColumn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.Time64NSColumn}
 */
proto.pl.api.vizierpb.Time64NSColumn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setDataList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.Time64NSColumn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.Time64NSColumn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.Time64NSColumn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Time64NSColumn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 data = 1;
 * @return {!Array<number>}
 */
proto.pl.api.vizierpb.Time64NSColumn.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.pl.api.vizierpb.Time64NSColumn} returns this
 */
proto.pl.api.vizierpb.Time64NSColumn.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.pl.api.vizierpb.Time64NSColumn} returns this
 */
proto.pl.api.vizierpb.Time64NSColumn.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pl.api.vizierpb.Time64NSColumn} returns this
 */
proto.pl.api.vizierpb.Time64NSColumn.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pl.api.vizierpb.StringColumn.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.StringColumn.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.StringColumn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.StringColumn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.StringColumn.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.StringColumn}
 */
proto.pl.api.vizierpb.StringColumn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.StringColumn;
  return proto.pl.api.vizierpb.StringColumn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.StringColumn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.StringColumn}
 */
proto.pl.api.vizierpb.StringColumn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.StringColumn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.StringColumn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.StringColumn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.StringColumn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string data = 1;
 * @return {!Array<string>}
 */
proto.pl.api.vizierpb.StringColumn.prototype.getDataList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.pl.api.vizierpb.StringColumn} returns this
 */
proto.pl.api.vizierpb.StringColumn.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.pl.api.vizierpb.StringColumn} returns this
 */
proto.pl.api.vizierpb.StringColumn.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pl.api.vizierpb.StringColumn} returns this
 */
proto.pl.api.vizierpb.StringColumn.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pl.api.vizierpb.Column.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.pl.api.vizierpb.Column.ColDataCase = {
  COL_DATA_NOT_SET: 0,
  BOOLEAN_DATA: 1,
  INT64_DATA: 2,
  UINT128_DATA: 3,
  TIME64NS_DATA: 4,
  FLOAT64_DATA: 5,
  STRING_DATA: 6
};

/**
 * @return {proto.pl.api.vizierpb.Column.ColDataCase}
 */
proto.pl.api.vizierpb.Column.prototype.getColDataCase = function() {
  return /** @type {proto.pl.api.vizierpb.Column.ColDataCase} */(jspb.Message.computeOneofCase(this, proto.pl.api.vizierpb.Column.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.Column.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.Column.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.Column} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Column.toObject = function(includeInstance, msg) {
  var f, obj = {
    booleanData: (f = msg.getBooleanData()) && proto.pl.api.vizierpb.BooleanColumn.toObject(includeInstance, f),
    int64Data: (f = msg.getInt64Data()) && proto.pl.api.vizierpb.Int64Column.toObject(includeInstance, f),
    uint128Data: (f = msg.getUint128Data()) && proto.pl.api.vizierpb.UInt128Column.toObject(includeInstance, f),
    time64nsData: (f = msg.getTime64nsData()) && proto.pl.api.vizierpb.Time64NSColumn.toObject(includeInstance, f),
    float64Data: (f = msg.getFloat64Data()) && proto.pl.api.vizierpb.Float64Column.toObject(includeInstance, f),
    stringData: (f = msg.getStringData()) && proto.pl.api.vizierpb.StringColumn.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.Column}
 */
proto.pl.api.vizierpb.Column.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.Column;
  return proto.pl.api.vizierpb.Column.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.Column} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.Column}
 */
proto.pl.api.vizierpb.Column.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pl.api.vizierpb.BooleanColumn;
      reader.readMessage(value,proto.pl.api.vizierpb.BooleanColumn.deserializeBinaryFromReader);
      msg.setBooleanData(value);
      break;
    case 2:
      var value = new proto.pl.api.vizierpb.Int64Column;
      reader.readMessage(value,proto.pl.api.vizierpb.Int64Column.deserializeBinaryFromReader);
      msg.setInt64Data(value);
      break;
    case 3:
      var value = new proto.pl.api.vizierpb.UInt128Column;
      reader.readMessage(value,proto.pl.api.vizierpb.UInt128Column.deserializeBinaryFromReader);
      msg.setUint128Data(value);
      break;
    case 4:
      var value = new proto.pl.api.vizierpb.Time64NSColumn;
      reader.readMessage(value,proto.pl.api.vizierpb.Time64NSColumn.deserializeBinaryFromReader);
      msg.setTime64nsData(value);
      break;
    case 5:
      var value = new proto.pl.api.vizierpb.Float64Column;
      reader.readMessage(value,proto.pl.api.vizierpb.Float64Column.deserializeBinaryFromReader);
      msg.setFloat64Data(value);
      break;
    case 6:
      var value = new proto.pl.api.vizierpb.StringColumn;
      reader.readMessage(value,proto.pl.api.vizierpb.StringColumn.deserializeBinaryFromReader);
      msg.setStringData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.Column.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.Column.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.Column} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Column.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBooleanData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pl.api.vizierpb.BooleanColumn.serializeBinaryToWriter
    );
  }
  f = message.getInt64Data();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pl.api.vizierpb.Int64Column.serializeBinaryToWriter
    );
  }
  f = message.getUint128Data();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pl.api.vizierpb.UInt128Column.serializeBinaryToWriter
    );
  }
  f = message.getTime64nsData();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.pl.api.vizierpb.Time64NSColumn.serializeBinaryToWriter
    );
  }
  f = message.getFloat64Data();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.pl.api.vizierpb.Float64Column.serializeBinaryToWriter
    );
  }
  f = message.getStringData();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.pl.api.vizierpb.StringColumn.serializeBinaryToWriter
    );
  }
};


/**
 * optional BooleanColumn boolean_data = 1;
 * @return {?proto.pl.api.vizierpb.BooleanColumn}
 */
proto.pl.api.vizierpb.Column.prototype.getBooleanData = function() {
  return /** @type{?proto.pl.api.vizierpb.BooleanColumn} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.BooleanColumn, 1));
};


/**
 * @param {?proto.pl.api.vizierpb.BooleanColumn|undefined} value
 * @return {!proto.pl.api.vizierpb.Column} returns this
*/
proto.pl.api.vizierpb.Column.prototype.setBooleanData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.pl.api.vizierpb.Column.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.Column} returns this
 */
proto.pl.api.vizierpb.Column.prototype.clearBooleanData = function() {
  return this.setBooleanData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.Column.prototype.hasBooleanData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Int64Column int64_data = 2;
 * @return {?proto.pl.api.vizierpb.Int64Column}
 */
proto.pl.api.vizierpb.Column.prototype.getInt64Data = function() {
  return /** @type{?proto.pl.api.vizierpb.Int64Column} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.Int64Column, 2));
};


/**
 * @param {?proto.pl.api.vizierpb.Int64Column|undefined} value
 * @return {!proto.pl.api.vizierpb.Column} returns this
*/
proto.pl.api.vizierpb.Column.prototype.setInt64Data = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.pl.api.vizierpb.Column.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.Column} returns this
 */
proto.pl.api.vizierpb.Column.prototype.clearInt64Data = function() {
  return this.setInt64Data(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.Column.prototype.hasInt64Data = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UInt128Column uint128_data = 3;
 * @return {?proto.pl.api.vizierpb.UInt128Column}
 */
proto.pl.api.vizierpb.Column.prototype.getUint128Data = function() {
  return /** @type{?proto.pl.api.vizierpb.UInt128Column} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.UInt128Column, 3));
};


/**
 * @param {?proto.pl.api.vizierpb.UInt128Column|undefined} value
 * @return {!proto.pl.api.vizierpb.Column} returns this
*/
proto.pl.api.vizierpb.Column.prototype.setUint128Data = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.pl.api.vizierpb.Column.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.Column} returns this
 */
proto.pl.api.vizierpb.Column.prototype.clearUint128Data = function() {
  return this.setUint128Data(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.Column.prototype.hasUint128Data = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Time64NSColumn time64ns_data = 4;
 * @return {?proto.pl.api.vizierpb.Time64NSColumn}
 */
proto.pl.api.vizierpb.Column.prototype.getTime64nsData = function() {
  return /** @type{?proto.pl.api.vizierpb.Time64NSColumn} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.Time64NSColumn, 4));
};


/**
 * @param {?proto.pl.api.vizierpb.Time64NSColumn|undefined} value
 * @return {!proto.pl.api.vizierpb.Column} returns this
*/
proto.pl.api.vizierpb.Column.prototype.setTime64nsData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.pl.api.vizierpb.Column.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.Column} returns this
 */
proto.pl.api.vizierpb.Column.prototype.clearTime64nsData = function() {
  return this.setTime64nsData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.Column.prototype.hasTime64nsData = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Float64Column float64_data = 5;
 * @return {?proto.pl.api.vizierpb.Float64Column}
 */
proto.pl.api.vizierpb.Column.prototype.getFloat64Data = function() {
  return /** @type{?proto.pl.api.vizierpb.Float64Column} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.Float64Column, 5));
};


/**
 * @param {?proto.pl.api.vizierpb.Float64Column|undefined} value
 * @return {!proto.pl.api.vizierpb.Column} returns this
*/
proto.pl.api.vizierpb.Column.prototype.setFloat64Data = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.pl.api.vizierpb.Column.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.Column} returns this
 */
proto.pl.api.vizierpb.Column.prototype.clearFloat64Data = function() {
  return this.setFloat64Data(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.Column.prototype.hasFloat64Data = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional StringColumn string_data = 6;
 * @return {?proto.pl.api.vizierpb.StringColumn}
 */
proto.pl.api.vizierpb.Column.prototype.getStringData = function() {
  return /** @type{?proto.pl.api.vizierpb.StringColumn} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.StringColumn, 6));
};


/**
 * @param {?proto.pl.api.vizierpb.StringColumn|undefined} value
 * @return {!proto.pl.api.vizierpb.Column} returns this
*/
proto.pl.api.vizierpb.Column.prototype.setStringData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.pl.api.vizierpb.Column.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.Column} returns this
 */
proto.pl.api.vizierpb.Column.prototype.clearStringData = function() {
  return this.setStringData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.Column.prototype.hasStringData = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pl.api.vizierpb.RowBatchData.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.RowBatchData.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.RowBatchData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.RowBatchData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.RowBatchData.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    colsList: jspb.Message.toObjectList(msg.getColsList(),
    proto.pl.api.vizierpb.Column.toObject, includeInstance),
    numRows: jspb.Message.getFieldWithDefault(msg, 2, 0),
    eow: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    eos: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.RowBatchData}
 */
proto.pl.api.vizierpb.RowBatchData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.RowBatchData;
  return proto.pl.api.vizierpb.RowBatchData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.RowBatchData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.RowBatchData}
 */
proto.pl.api.vizierpb.RowBatchData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableId(value);
      break;
    case 1:
      var value = new proto.pl.api.vizierpb.Column;
      reader.readMessage(value,proto.pl.api.vizierpb.Column.deserializeBinaryFromReader);
      msg.addCols(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumRows(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEow(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.RowBatchData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.RowBatchData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.RowBatchData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.RowBatchData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getColsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pl.api.vizierpb.Column.serializeBinaryToWriter
    );
  }
  f = message.getNumRows();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEow();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getEos();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string table_id = 5;
 * @return {string}
 */
proto.pl.api.vizierpb.RowBatchData.prototype.getTableId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.RowBatchData} returns this
 */
proto.pl.api.vizierpb.RowBatchData.prototype.setTableId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Column cols = 1;
 * @return {!Array<!proto.pl.api.vizierpb.Column>}
 */
proto.pl.api.vizierpb.RowBatchData.prototype.getColsList = function() {
  return /** @type{!Array<!proto.pl.api.vizierpb.Column>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pl.api.vizierpb.Column, 1));
};


/**
 * @param {!Array<!proto.pl.api.vizierpb.Column>} value
 * @return {!proto.pl.api.vizierpb.RowBatchData} returns this
*/
proto.pl.api.vizierpb.RowBatchData.prototype.setColsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pl.api.vizierpb.Column=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pl.api.vizierpb.Column}
 */
proto.pl.api.vizierpb.RowBatchData.prototype.addCols = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pl.api.vizierpb.Column, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pl.api.vizierpb.RowBatchData} returns this
 */
proto.pl.api.vizierpb.RowBatchData.prototype.clearColsList = function() {
  return this.setColsList([]);
};


/**
 * optional int64 num_rows = 2;
 * @return {number}
 */
proto.pl.api.vizierpb.RowBatchData.prototype.getNumRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.RowBatchData} returns this
 */
proto.pl.api.vizierpb.RowBatchData.prototype.setNumRows = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool eow = 3;
 * @return {boolean}
 */
proto.pl.api.vizierpb.RowBatchData.prototype.getEow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pl.api.vizierpb.RowBatchData} returns this
 */
proto.pl.api.vizierpb.RowBatchData.prototype.setEow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool eos = 4;
 * @return {boolean}
 */
proto.pl.api.vizierpb.RowBatchData.prototype.getEos = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pl.api.vizierpb.RowBatchData} returns this
 */
proto.pl.api.vizierpb.RowBatchData.prototype.setEos = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pl.api.vizierpb.Relation.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.Relation.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.Relation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.Relation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Relation.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.pl.api.vizierpb.Relation.ColumnInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.Relation}
 */
proto.pl.api.vizierpb.Relation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.Relation;
  return proto.pl.api.vizierpb.Relation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.Relation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.Relation}
 */
proto.pl.api.vizierpb.Relation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pl.api.vizierpb.Relation.ColumnInfo;
      reader.readMessage(value,proto.pl.api.vizierpb.Relation.ColumnInfo.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.Relation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.Relation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.Relation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Relation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pl.api.vizierpb.Relation.ColumnInfo.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.Relation.ColumnInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.Relation.ColumnInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    columnType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    columnDesc: jspb.Message.getFieldWithDefault(msg, 3, ""),
    columnSemanticType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.Relation.ColumnInfo}
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.Relation.ColumnInfo;
  return proto.pl.api.vizierpb.Relation.ColumnInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.Relation.ColumnInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.Relation.ColumnInfo}
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnName(value);
      break;
    case 2:
      var value = /** @type {!proto.pl.api.vizierpb.DataType} */ (reader.readEnum());
      msg.setColumnType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnDesc(value);
      break;
    case 4:
      var value = /** @type {!proto.pl.api.vizierpb.SemanticType} */ (reader.readEnum());
      msg.setColumnSemanticType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.Relation.ColumnInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.Relation.ColumnInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColumnType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getColumnDesc();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getColumnSemanticType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string column_name = 1;
 * @return {string}
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.prototype.getColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.Relation.ColumnInfo} returns this
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.prototype.setColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DataType column_type = 2;
 * @return {!proto.pl.api.vizierpb.DataType}
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.prototype.getColumnType = function() {
  return /** @type {!proto.pl.api.vizierpb.DataType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.pl.api.vizierpb.DataType} value
 * @return {!proto.pl.api.vizierpb.Relation.ColumnInfo} returns this
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.prototype.setColumnType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string column_desc = 3;
 * @return {string}
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.prototype.getColumnDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.Relation.ColumnInfo} returns this
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.prototype.setColumnDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional SemanticType column_semantic_type = 4;
 * @return {!proto.pl.api.vizierpb.SemanticType}
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.prototype.getColumnSemanticType = function() {
  return /** @type {!proto.pl.api.vizierpb.SemanticType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.pl.api.vizierpb.SemanticType} value
 * @return {!proto.pl.api.vizierpb.Relation.ColumnInfo} returns this
 */
proto.pl.api.vizierpb.Relation.ColumnInfo.prototype.setColumnSemanticType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated ColumnInfo columns = 1;
 * @return {!Array<!proto.pl.api.vizierpb.Relation.ColumnInfo>}
 */
proto.pl.api.vizierpb.Relation.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.pl.api.vizierpb.Relation.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pl.api.vizierpb.Relation.ColumnInfo, 1));
};


/**
 * @param {!Array<!proto.pl.api.vizierpb.Relation.ColumnInfo>} value
 * @return {!proto.pl.api.vizierpb.Relation} returns this
*/
proto.pl.api.vizierpb.Relation.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pl.api.vizierpb.Relation.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pl.api.vizierpb.Relation.ColumnInfo}
 */
proto.pl.api.vizierpb.Relation.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pl.api.vizierpb.Relation.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pl.api.vizierpb.Relation} returns this
 */
proto.pl.api.vizierpb.Relation.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.CompilerError.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.CompilerError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.CompilerError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.CompilerError.toObject = function(includeInstance, msg) {
  var f, obj = {
    line: jspb.Message.getFieldWithDefault(msg, 1, 0),
    column: jspb.Message.getFieldWithDefault(msg, 2, 0),
    message: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.CompilerError}
 */
proto.pl.api.vizierpb.CompilerError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.CompilerError;
  return proto.pl.api.vizierpb.CompilerError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.CompilerError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.CompilerError}
 */
proto.pl.api.vizierpb.CompilerError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLine(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setColumn(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.CompilerError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.CompilerError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.CompilerError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.CompilerError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLine();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getColumn();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 line = 1;
 * @return {number}
 */
proto.pl.api.vizierpb.CompilerError.prototype.getLine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.CompilerError} returns this
 */
proto.pl.api.vizierpb.CompilerError.prototype.setLine = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 column = 2;
 * @return {number}
 */
proto.pl.api.vizierpb.CompilerError.prototype.getColumn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.CompilerError} returns this
 */
proto.pl.api.vizierpb.CompilerError.prototype.setColumn = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.pl.api.vizierpb.CompilerError.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.CompilerError} returns this
 */
proto.pl.api.vizierpb.CompilerError.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pl.api.vizierpb.ErrorDetails.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.pl.api.vizierpb.ErrorDetails.ErrorCase = {
  ERROR_NOT_SET: 0,
  COMPILER_ERROR: 1
};

/**
 * @return {proto.pl.api.vizierpb.ErrorDetails.ErrorCase}
 */
proto.pl.api.vizierpb.ErrorDetails.prototype.getErrorCase = function() {
  return /** @type {proto.pl.api.vizierpb.ErrorDetails.ErrorCase} */(jspb.Message.computeOneofCase(this, proto.pl.api.vizierpb.ErrorDetails.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.ErrorDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.ErrorDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.ErrorDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.ErrorDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    compilerError: (f = msg.getCompilerError()) && proto.pl.api.vizierpb.CompilerError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.ErrorDetails}
 */
proto.pl.api.vizierpb.ErrorDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.ErrorDetails;
  return proto.pl.api.vizierpb.ErrorDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.ErrorDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.ErrorDetails}
 */
proto.pl.api.vizierpb.ErrorDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pl.api.vizierpb.CompilerError;
      reader.readMessage(value,proto.pl.api.vizierpb.CompilerError.deserializeBinaryFromReader);
      msg.setCompilerError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.ErrorDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.ErrorDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.ErrorDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.ErrorDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompilerError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pl.api.vizierpb.CompilerError.serializeBinaryToWriter
    );
  }
};


/**
 * optional CompilerError compiler_error = 1;
 * @return {?proto.pl.api.vizierpb.CompilerError}
 */
proto.pl.api.vizierpb.ErrorDetails.prototype.getCompilerError = function() {
  return /** @type{?proto.pl.api.vizierpb.CompilerError} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.CompilerError, 1));
};


/**
 * @param {?proto.pl.api.vizierpb.CompilerError|undefined} value
 * @return {!proto.pl.api.vizierpb.ErrorDetails} returns this
*/
proto.pl.api.vizierpb.ErrorDetails.prototype.setCompilerError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.pl.api.vizierpb.ErrorDetails.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.ErrorDetails} returns this
 */
proto.pl.api.vizierpb.ErrorDetails.prototype.clearCompilerError = function() {
  return this.setCompilerError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.ErrorDetails.prototype.hasCompilerError = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pl.api.vizierpb.Status.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    errorDetailsList: jspb.Message.toObjectList(msg.getErrorDetailsList(),
    proto.pl.api.vizierpb.ErrorDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.Status}
 */
proto.pl.api.vizierpb.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.Status;
  return proto.pl.api.vizierpb.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.Status}
 */
proto.pl.api.vizierpb.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = new proto.pl.api.vizierpb.ErrorDetails;
      reader.readMessage(value,proto.pl.api.vizierpb.ErrorDetails.deserializeBinaryFromReader);
      msg.addErrorDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.Status.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getErrorDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.pl.api.vizierpb.ErrorDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.pl.api.vizierpb.Status.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.Status} returns this
 */
proto.pl.api.vizierpb.Status.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.pl.api.vizierpb.Status.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.Status} returns this
 */
proto.pl.api.vizierpb.Status.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ErrorDetails error_details = 4;
 * @return {!Array<!proto.pl.api.vizierpb.ErrorDetails>}
 */
proto.pl.api.vizierpb.Status.prototype.getErrorDetailsList = function() {
  return /** @type{!Array<!proto.pl.api.vizierpb.ErrorDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pl.api.vizierpb.ErrorDetails, 4));
};


/**
 * @param {!Array<!proto.pl.api.vizierpb.ErrorDetails>} value
 * @return {!proto.pl.api.vizierpb.Status} returns this
*/
proto.pl.api.vizierpb.Status.prototype.setErrorDetailsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.pl.api.vizierpb.ErrorDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pl.api.vizierpb.ErrorDetails}
 */
proto.pl.api.vizierpb.Status.prototype.addErrorDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.pl.api.vizierpb.ErrorDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pl.api.vizierpb.Status} returns this
 */
proto.pl.api.vizierpb.Status.prototype.clearErrorDetailsList = function() {
  return this.setErrorDetailsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pl.api.vizierpb.ScalarValue.oneofGroups_ = [[2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.pl.api.vizierpb.ScalarValue.ValueCase = {
  VALUE_NOT_SET: 0,
  BOOL_VALUE: 2,
  INT64_VALUE: 3,
  FLOAT64_VALUE: 4,
  STRING_VALUE: 5,
  TIME64_NS_VALUE: 6,
  UINT128_VALUE: 7
};

/**
 * @return {proto.pl.api.vizierpb.ScalarValue.ValueCase}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.getValueCase = function() {
  return /** @type {proto.pl.api.vizierpb.ScalarValue.ValueCase} */(jspb.Message.computeOneofCase(this, proto.pl.api.vizierpb.ScalarValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.ScalarValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.ScalarValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.ScalarValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    boolValue: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    int64Value: jspb.Message.getFieldWithDefault(msg, 3, 0),
    float64Value: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    stringValue: jspb.Message.getFieldWithDefault(msg, 5, ""),
    time64NsValue: jspb.Message.getFieldWithDefault(msg, 6, 0),
    uint128Value: (f = msg.getUint128Value()) && proto.pl.api.vizierpb.UInt128.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.ScalarValue}
 */
proto.pl.api.vizierpb.ScalarValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.ScalarValue;
  return proto.pl.api.vizierpb.ScalarValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.ScalarValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.ScalarValue}
 */
proto.pl.api.vizierpb.ScalarValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.pl.api.vizierpb.DataType} */ (reader.readEnum());
      msg.setDataType(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInt64Value(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFloat64Value(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTime64NsValue(value);
      break;
    case 7:
      var value = new proto.pl.api.vizierpb.UInt128;
      reader.readMessage(value,proto.pl.api.vizierpb.UInt128.deserializeBinaryFromReader);
      msg.setUint128Value(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.ScalarValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.ScalarValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.ScalarValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getUint128Value();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.pl.api.vizierpb.UInt128.serializeBinaryToWriter
    );
  }
};


/**
 * optional DataType data_type = 1;
 * @return {!proto.pl.api.vizierpb.DataType}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.getDataType = function() {
  return /** @type {!proto.pl.api.vizierpb.DataType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.pl.api.vizierpb.DataType} value
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
 */
proto.pl.api.vizierpb.ScalarValue.prototype.setDataType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool bool_value = 2;
 * @return {boolean}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.getBoolValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
 */
proto.pl.api.vizierpb.ScalarValue.prototype.setBoolValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.pl.api.vizierpb.ScalarValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
 */
proto.pl.api.vizierpb.ScalarValue.prototype.clearBoolValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.pl.api.vizierpb.ScalarValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.hasBoolValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 int64_value = 3;
 * @return {number}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.getInt64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
 */
proto.pl.api.vizierpb.ScalarValue.prototype.setInt64Value = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.pl.api.vizierpb.ScalarValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
 */
proto.pl.api.vizierpb.ScalarValue.prototype.clearInt64Value = function() {
  return jspb.Message.setOneofField(this, 3, proto.pl.api.vizierpb.ScalarValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.hasInt64Value = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double float64_value = 4;
 * @return {number}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.getFloat64Value = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
 */
proto.pl.api.vizierpb.ScalarValue.prototype.setFloat64Value = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.pl.api.vizierpb.ScalarValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
 */
proto.pl.api.vizierpb.ScalarValue.prototype.clearFloat64Value = function() {
  return jspb.Message.setOneofField(this, 4, proto.pl.api.vizierpb.ScalarValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.hasFloat64Value = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string string_value = 5;
 * @return {string}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
 */
proto.pl.api.vizierpb.ScalarValue.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.pl.api.vizierpb.ScalarValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
 */
proto.pl.api.vizierpb.ScalarValue.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 5, proto.pl.api.vizierpb.ScalarValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 time64_ns_value = 6;
 * @return {number}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.getTime64NsValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
 */
proto.pl.api.vizierpb.ScalarValue.prototype.setTime64NsValue = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.pl.api.vizierpb.ScalarValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
 */
proto.pl.api.vizierpb.ScalarValue.prototype.clearTime64NsValue = function() {
  return jspb.Message.setOneofField(this, 6, proto.pl.api.vizierpb.ScalarValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.hasTime64NsValue = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional UInt128 uint128_value = 7;
 * @return {?proto.pl.api.vizierpb.UInt128}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.getUint128Value = function() {
  return /** @type{?proto.pl.api.vizierpb.UInt128} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.UInt128, 7));
};


/**
 * @param {?proto.pl.api.vizierpb.UInt128|undefined} value
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
*/
proto.pl.api.vizierpb.ScalarValue.prototype.setUint128Value = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.pl.api.vizierpb.ScalarValue.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.ScalarValue} returns this
 */
proto.pl.api.vizierpb.ScalarValue.prototype.clearUint128Value = function() {
  return this.setUint128Value(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.ScalarValue.prototype.hasUint128Value = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.ExecuteScriptRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.ExecuteScriptRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clusterId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    execFuncsList: jspb.Message.toObjectList(msg.getExecFuncsList(),
    proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.toObject, includeInstance),
    mutation: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.ExecuteScriptRequest;
  return proto.pl.api.vizierpb.ExecuteScriptRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.ExecuteScriptRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryStr(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterId(value);
      break;
    case 4:
      var value = new proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute;
      reader.readMessage(value,proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.deserializeBinaryFromReader);
      msg.addExecFuncs(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMutation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.ExecuteScriptRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.ExecuteScriptRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClusterId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExecFuncsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.serializeBinaryToWriter
    );
  }
  f = message.getMutation();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.toObject = function(includeInstance, msg) {
  var f, obj = {
    funcName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    argValuesList: jspb.Message.toObjectList(msg.getArgValuesList(),
    proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.toObject, includeInstance),
    outputTablePrefix: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute;
  return proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFuncName(value);
      break;
    case 2:
      var value = new proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue;
      reader.readMessage(value,proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.deserializeBinaryFromReader);
      msg.addArgValues(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputTablePrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFuncName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getArgValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.serializeBinaryToWriter
    );
  }
  f = message.getOutputTablePrefix();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue;
  return proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string func_name = 1;
 * @return {string}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.prototype.getFuncName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.prototype.setFuncName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ArgValue arg_values = 2;
 * @return {!Array<!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue>}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.prototype.getArgValuesList = function() {
  return /** @type{!Array<!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue, 2));
};


/**
 * @param {!Array<!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue>} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute} returns this
*/
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.prototype.setArgValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.prototype.addArgValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.ArgValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.prototype.clearArgValuesList = function() {
  return this.setArgValuesList([]);
};


/**
 * optional string output_table_prefix = 3;
 * @return {string}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.prototype.getOutputTablePrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute.prototype.setOutputTablePrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string query_str = 1;
 * @return {string}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.prototype.getQueryStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.prototype.setQueryStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cluster_id = 3;
 * @return {string}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.prototype.getClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.prototype.setClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated FuncToExecute exec_funcs = 4;
 * @return {!Array<!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute>}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.prototype.getExecFuncsList = function() {
  return /** @type{!Array<!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute, 4));
};


/**
 * @param {!Array<!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute>} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest} returns this
*/
proto.pl.api.vizierpb.ExecuteScriptRequest.prototype.setExecFuncsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.prototype.addExecFuncs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.pl.api.vizierpb.ExecuteScriptRequest.FuncToExecute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.prototype.clearExecFuncsList = function() {
  return this.setExecFuncsList([]);
};


/**
 * optional bool mutation = 5;
 * @return {boolean}
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.prototype.getMutation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptRequest} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptRequest.prototype.setMutation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.QueryTimingInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.QueryTimingInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.QueryTimingInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.QueryTimingInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    executionTimeNs: jspb.Message.getFieldWithDefault(msg, 1, 0),
    compilationTimeNs: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.QueryTimingInfo}
 */
proto.pl.api.vizierpb.QueryTimingInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.QueryTimingInfo;
  return proto.pl.api.vizierpb.QueryTimingInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.QueryTimingInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.QueryTimingInfo}
 */
proto.pl.api.vizierpb.QueryTimingInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExecutionTimeNs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompilationTimeNs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.QueryTimingInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.QueryTimingInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.QueryTimingInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.QueryTimingInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecutionTimeNs();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCompilationTimeNs();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 execution_time_ns = 1;
 * @return {number}
 */
proto.pl.api.vizierpb.QueryTimingInfo.prototype.getExecutionTimeNs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.QueryTimingInfo} returns this
 */
proto.pl.api.vizierpb.QueryTimingInfo.prototype.setExecutionTimeNs = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 compilation_time_ns = 2;
 * @return {number}
 */
proto.pl.api.vizierpb.QueryTimingInfo.prototype.getCompilationTimeNs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.QueryTimingInfo} returns this
 */
proto.pl.api.vizierpb.QueryTimingInfo.prototype.setCompilationTimeNs = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.QueryExecutionStats.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.QueryExecutionStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.QueryExecutionStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.QueryExecutionStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    timing: (f = msg.getTiming()) && proto.pl.api.vizierpb.QueryTimingInfo.toObject(includeInstance, f),
    bytesProcessed: jspb.Message.getFieldWithDefault(msg, 2, 0),
    recordsProcessed: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.QueryExecutionStats}
 */
proto.pl.api.vizierpb.QueryExecutionStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.QueryExecutionStats;
  return proto.pl.api.vizierpb.QueryExecutionStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.QueryExecutionStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.QueryExecutionStats}
 */
proto.pl.api.vizierpb.QueryExecutionStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pl.api.vizierpb.QueryTimingInfo;
      reader.readMessage(value,proto.pl.api.vizierpb.QueryTimingInfo.deserializeBinaryFromReader);
      msg.setTiming(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBytesProcessed(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordsProcessed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.QueryExecutionStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.QueryExecutionStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.QueryExecutionStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.QueryExecutionStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTiming();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pl.api.vizierpb.QueryTimingInfo.serializeBinaryToWriter
    );
  }
  f = message.getBytesProcessed();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getRecordsProcessed();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional QueryTimingInfo timing = 1;
 * @return {?proto.pl.api.vizierpb.QueryTimingInfo}
 */
proto.pl.api.vizierpb.QueryExecutionStats.prototype.getTiming = function() {
  return /** @type{?proto.pl.api.vizierpb.QueryTimingInfo} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.QueryTimingInfo, 1));
};


/**
 * @param {?proto.pl.api.vizierpb.QueryTimingInfo|undefined} value
 * @return {!proto.pl.api.vizierpb.QueryExecutionStats} returns this
*/
proto.pl.api.vizierpb.QueryExecutionStats.prototype.setTiming = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.QueryExecutionStats} returns this
 */
proto.pl.api.vizierpb.QueryExecutionStats.prototype.clearTiming = function() {
  return this.setTiming(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.QueryExecutionStats.prototype.hasTiming = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 bytes_processed = 2;
 * @return {number}
 */
proto.pl.api.vizierpb.QueryExecutionStats.prototype.getBytesProcessed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.QueryExecutionStats} returns this
 */
proto.pl.api.vizierpb.QueryExecutionStats.prototype.setBytesProcessed = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 records_processed = 3;
 * @return {number}
 */
proto.pl.api.vizierpb.QueryExecutionStats.prototype.getRecordsProcessed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pl.api.vizierpb.QueryExecutionStats} returns this
 */
proto.pl.api.vizierpb.QueryExecutionStats.prototype.setRecordsProcessed = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.QueryMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.QueryMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.QueryMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.QueryMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    relation: (f = msg.getRelation()) && proto.pl.api.vizierpb.Relation.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.QueryMetadata}
 */
proto.pl.api.vizierpb.QueryMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.QueryMetadata;
  return proto.pl.api.vizierpb.QueryMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.QueryMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.QueryMetadata}
 */
proto.pl.api.vizierpb.QueryMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pl.api.vizierpb.Relation;
      reader.readMessage(value,proto.pl.api.vizierpb.Relation.deserializeBinaryFromReader);
      msg.setRelation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.QueryMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.QueryMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.QueryMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.QueryMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pl.api.vizierpb.Relation.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Relation relation = 1;
 * @return {?proto.pl.api.vizierpb.Relation}
 */
proto.pl.api.vizierpb.QueryMetadata.prototype.getRelation = function() {
  return /** @type{?proto.pl.api.vizierpb.Relation} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.Relation, 1));
};


/**
 * @param {?proto.pl.api.vizierpb.Relation|undefined} value
 * @return {!proto.pl.api.vizierpb.QueryMetadata} returns this
*/
proto.pl.api.vizierpb.QueryMetadata.prototype.setRelation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.QueryMetadata} returns this
 */
proto.pl.api.vizierpb.QueryMetadata.prototype.clearRelation = function() {
  return this.setRelation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.QueryMetadata.prototype.hasRelation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.pl.api.vizierpb.QueryMetadata.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.QueryMetadata} returns this
 */
proto.pl.api.vizierpb.QueryMetadata.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.pl.api.vizierpb.QueryMetadata.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.QueryMetadata} returns this
 */
proto.pl.api.vizierpb.QueryMetadata.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.QueryData.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.QueryData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.QueryData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.QueryData.toObject = function(includeInstance, msg) {
  var f, obj = {
    batch: (f = msg.getBatch()) && proto.pl.api.vizierpb.RowBatchData.toObject(includeInstance, f),
    executionStats: (f = msg.getExecutionStats()) && proto.pl.api.vizierpb.QueryExecutionStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.QueryData}
 */
proto.pl.api.vizierpb.QueryData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.QueryData;
  return proto.pl.api.vizierpb.QueryData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.QueryData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.QueryData}
 */
proto.pl.api.vizierpb.QueryData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pl.api.vizierpb.RowBatchData;
      reader.readMessage(value,proto.pl.api.vizierpb.RowBatchData.deserializeBinaryFromReader);
      msg.setBatch(value);
      break;
    case 2:
      var value = new proto.pl.api.vizierpb.QueryExecutionStats;
      reader.readMessage(value,proto.pl.api.vizierpb.QueryExecutionStats.deserializeBinaryFromReader);
      msg.setExecutionStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.QueryData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.QueryData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.QueryData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.QueryData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBatch();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pl.api.vizierpb.RowBatchData.serializeBinaryToWriter
    );
  }
  f = message.getExecutionStats();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pl.api.vizierpb.QueryExecutionStats.serializeBinaryToWriter
    );
  }
};


/**
 * optional RowBatchData batch = 1;
 * @return {?proto.pl.api.vizierpb.RowBatchData}
 */
proto.pl.api.vizierpb.QueryData.prototype.getBatch = function() {
  return /** @type{?proto.pl.api.vizierpb.RowBatchData} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.RowBatchData, 1));
};


/**
 * @param {?proto.pl.api.vizierpb.RowBatchData|undefined} value
 * @return {!proto.pl.api.vizierpb.QueryData} returns this
*/
proto.pl.api.vizierpb.QueryData.prototype.setBatch = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.QueryData} returns this
 */
proto.pl.api.vizierpb.QueryData.prototype.clearBatch = function() {
  return this.setBatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.QueryData.prototype.hasBatch = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional QueryExecutionStats execution_stats = 2;
 * @return {?proto.pl.api.vizierpb.QueryExecutionStats}
 */
proto.pl.api.vizierpb.QueryData.prototype.getExecutionStats = function() {
  return /** @type{?proto.pl.api.vizierpb.QueryExecutionStats} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.QueryExecutionStats, 2));
};


/**
 * @param {?proto.pl.api.vizierpb.QueryExecutionStats|undefined} value
 * @return {!proto.pl.api.vizierpb.QueryData} returns this
*/
proto.pl.api.vizierpb.QueryData.prototype.setExecutionStats = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.QueryData} returns this
 */
proto.pl.api.vizierpb.QueryData.prototype.clearExecutionStats = function() {
  return this.setExecutionStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.QueryData.prototype.hasExecutionStats = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.ResultCase = {
  RESULT_NOT_SET: 0,
  DATA: 3,
  META_DATA: 4
};

/**
 * @return {proto.pl.api.vizierpb.ExecuteScriptResponse.ResultCase}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.getResultCase = function() {
  return /** @type {proto.pl.api.vizierpb.ExecuteScriptResponse.ResultCase} */(jspb.Message.computeOneofCase(this, proto.pl.api.vizierpb.ExecuteScriptResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.ExecuteScriptResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.ExecuteScriptResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && proto.pl.api.vizierpb.Status.toObject(includeInstance, f),
    queryId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && proto.pl.api.vizierpb.QueryData.toObject(includeInstance, f),
    metaData: (f = msg.getMetaData()) && proto.pl.api.vizierpb.QueryMetadata.toObject(includeInstance, f),
    mutationInfo: (f = msg.getMutationInfo()) && proto.pl.api.vizierpb.MutationInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptResponse}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.ExecuteScriptResponse;
  return proto.pl.api.vizierpb.ExecuteScriptResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.ExecuteScriptResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptResponse}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pl.api.vizierpb.Status;
      reader.readMessage(value,proto.pl.api.vizierpb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryId(value);
      break;
    case 3:
      var value = new proto.pl.api.vizierpb.QueryData;
      reader.readMessage(value,proto.pl.api.vizierpb.QueryData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = new proto.pl.api.vizierpb.QueryMetadata;
      reader.readMessage(value,proto.pl.api.vizierpb.QueryMetadata.deserializeBinaryFromReader);
      msg.setMetaData(value);
      break;
    case 5:
      var value = new proto.pl.api.vizierpb.MutationInfo;
      reader.readMessage(value,proto.pl.api.vizierpb.MutationInfo.deserializeBinaryFromReader);
      msg.setMutationInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.ExecuteScriptResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.ExecuteScriptResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pl.api.vizierpb.Status.serializeBinaryToWriter
    );
  }
  f = message.getQueryId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pl.api.vizierpb.QueryData.serializeBinaryToWriter
    );
  }
  f = message.getMetaData();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.pl.api.vizierpb.QueryMetadata.serializeBinaryToWriter
    );
  }
  f = message.getMutationInfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.pl.api.vizierpb.MutationInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Status status = 1;
 * @return {?proto.pl.api.vizierpb.Status}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.getStatus = function() {
  return /** @type{?proto.pl.api.vizierpb.Status} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.Status, 1));
};


/**
 * @param {?proto.pl.api.vizierpb.Status|undefined} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptResponse} returns this
*/
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptResponse} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string query_id = 2;
 * @return {string}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.getQueryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptResponse} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.setQueryId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional QueryData data = 3;
 * @return {?proto.pl.api.vizierpb.QueryData}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.getData = function() {
  return /** @type{?proto.pl.api.vizierpb.QueryData} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.QueryData, 3));
};


/**
 * @param {?proto.pl.api.vizierpb.QueryData|undefined} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptResponse} returns this
*/
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.setData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.pl.api.vizierpb.ExecuteScriptResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptResponse} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional QueryMetadata meta_data = 4;
 * @return {?proto.pl.api.vizierpb.QueryMetadata}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.getMetaData = function() {
  return /** @type{?proto.pl.api.vizierpb.QueryMetadata} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.QueryMetadata, 4));
};


/**
 * @param {?proto.pl.api.vizierpb.QueryMetadata|undefined} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptResponse} returns this
*/
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.setMetaData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.pl.api.vizierpb.ExecuteScriptResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptResponse} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.clearMetaData = function() {
  return this.setMetaData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.hasMetaData = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MutationInfo mutation_info = 5;
 * @return {?proto.pl.api.vizierpb.MutationInfo}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.getMutationInfo = function() {
  return /** @type{?proto.pl.api.vizierpb.MutationInfo} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.MutationInfo, 5));
};


/**
 * @param {?proto.pl.api.vizierpb.MutationInfo|undefined} value
 * @return {!proto.pl.api.vizierpb.ExecuteScriptResponse} returns this
*/
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.setMutationInfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.ExecuteScriptResponse} returns this
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.clearMutationInfo = function() {
  return this.setMutationInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.ExecuteScriptResponse.prototype.hasMutationInfo = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pl.api.vizierpb.MutationInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.MutationInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.MutationInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.MutationInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.MutationInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && proto.pl.api.vizierpb.Status.toObject(includeInstance, f),
    statesList: jspb.Message.toObjectList(msg.getStatesList(),
    proto.pl.api.vizierpb.MutationInfo.MutationState.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.MutationInfo}
 */
proto.pl.api.vizierpb.MutationInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.MutationInfo;
  return proto.pl.api.vizierpb.MutationInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.MutationInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.MutationInfo}
 */
proto.pl.api.vizierpb.MutationInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pl.api.vizierpb.Status;
      reader.readMessage(value,proto.pl.api.vizierpb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.pl.api.vizierpb.MutationInfo.MutationState;
      reader.readMessage(value,proto.pl.api.vizierpb.MutationInfo.MutationState.deserializeBinaryFromReader);
      msg.addStates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.MutationInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.MutationInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.MutationInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.MutationInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pl.api.vizierpb.Status.serializeBinaryToWriter
    );
  }
  f = message.getStatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.pl.api.vizierpb.MutationInfo.MutationState.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.MutationInfo.MutationState.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.MutationInfo.MutationState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.MutationInfo.MutationState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.MutationInfo.MutationState.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.MutationInfo.MutationState}
 */
proto.pl.api.vizierpb.MutationInfo.MutationState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.MutationInfo.MutationState;
  return proto.pl.api.vizierpb.MutationInfo.MutationState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.MutationInfo.MutationState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.MutationInfo.MutationState}
 */
proto.pl.api.vizierpb.MutationInfo.MutationState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.pl.api.vizierpb.LifeCycleState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.MutationInfo.MutationState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.MutationInfo.MutationState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.MutationInfo.MutationState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.MutationInfo.MutationState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pl.api.vizierpb.MutationInfo.MutationState.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.MutationInfo.MutationState} returns this
 */
proto.pl.api.vizierpb.MutationInfo.MutationState.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LifeCycleState state = 2;
 * @return {!proto.pl.api.vizierpb.LifeCycleState}
 */
proto.pl.api.vizierpb.MutationInfo.MutationState.prototype.getState = function() {
  return /** @type {!proto.pl.api.vizierpb.LifeCycleState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.pl.api.vizierpb.LifeCycleState} value
 * @return {!proto.pl.api.vizierpb.MutationInfo.MutationState} returns this
 */
proto.pl.api.vizierpb.MutationInfo.MutationState.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.pl.api.vizierpb.MutationInfo.MutationState.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.MutationInfo.MutationState} returns this
 */
proto.pl.api.vizierpb.MutationInfo.MutationState.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Status status = 1;
 * @return {?proto.pl.api.vizierpb.Status}
 */
proto.pl.api.vizierpb.MutationInfo.prototype.getStatus = function() {
  return /** @type{?proto.pl.api.vizierpb.Status} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.Status, 1));
};


/**
 * @param {?proto.pl.api.vizierpb.Status|undefined} value
 * @return {!proto.pl.api.vizierpb.MutationInfo} returns this
*/
proto.pl.api.vizierpb.MutationInfo.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.MutationInfo} returns this
 */
proto.pl.api.vizierpb.MutationInfo.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.MutationInfo.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated MutationState states = 2;
 * @return {!Array<!proto.pl.api.vizierpb.MutationInfo.MutationState>}
 */
proto.pl.api.vizierpb.MutationInfo.prototype.getStatesList = function() {
  return /** @type{!Array<!proto.pl.api.vizierpb.MutationInfo.MutationState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pl.api.vizierpb.MutationInfo.MutationState, 2));
};


/**
 * @param {!Array<!proto.pl.api.vizierpb.MutationInfo.MutationState>} value
 * @return {!proto.pl.api.vizierpb.MutationInfo} returns this
*/
proto.pl.api.vizierpb.MutationInfo.prototype.setStatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pl.api.vizierpb.MutationInfo.MutationState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pl.api.vizierpb.MutationInfo.MutationState}
 */
proto.pl.api.vizierpb.MutationInfo.prototype.addStates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pl.api.vizierpb.MutationInfo.MutationState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pl.api.vizierpb.MutationInfo} returns this
 */
proto.pl.api.vizierpb.MutationInfo.prototype.clearStatesList = function() {
  return this.setStatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.HealthCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.HealthCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.HealthCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.HealthCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.HealthCheckRequest}
 */
proto.pl.api.vizierpb.HealthCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.HealthCheckRequest;
  return proto.pl.api.vizierpb.HealthCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.HealthCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.HealthCheckRequest}
 */
proto.pl.api.vizierpb.HealthCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.HealthCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.HealthCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.HealthCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.HealthCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string cluster_id = 1;
 * @return {string}
 */
proto.pl.api.vizierpb.HealthCheckRequest.prototype.getClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.HealthCheckRequest} returns this
 */
proto.pl.api.vizierpb.HealthCheckRequest.prototype.setClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.HealthCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.HealthCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.HealthCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.HealthCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && proto.pl.api.vizierpb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.HealthCheckResponse}
 */
proto.pl.api.vizierpb.HealthCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.HealthCheckResponse;
  return proto.pl.api.vizierpb.HealthCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.HealthCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.HealthCheckResponse}
 */
proto.pl.api.vizierpb.HealthCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pl.api.vizierpb.Status;
      reader.readMessage(value,proto.pl.api.vizierpb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.HealthCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.HealthCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.HealthCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.HealthCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pl.api.vizierpb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional Status status = 1;
 * @return {?proto.pl.api.vizierpb.Status}
 */
proto.pl.api.vizierpb.HealthCheckResponse.prototype.getStatus = function() {
  return /** @type{?proto.pl.api.vizierpb.Status} */ (
    jspb.Message.getWrapperField(this, proto.pl.api.vizierpb.Status, 1));
};


/**
 * @param {?proto.pl.api.vizierpb.Status|undefined} value
 * @return {!proto.pl.api.vizierpb.HealthCheckResponse} returns this
*/
proto.pl.api.vizierpb.HealthCheckResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pl.api.vizierpb.HealthCheckResponse} returns this
 */
proto.pl.api.vizierpb.HealthCheckResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pl.api.vizierpb.HealthCheckResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.DebugLogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.DebugLogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.DebugLogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.DebugLogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    podName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    previous: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    container: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.DebugLogRequest}
 */
proto.pl.api.vizierpb.DebugLogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.DebugLogRequest;
  return proto.pl.api.vizierpb.DebugLogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.DebugLogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.DebugLogRequest}
 */
proto.pl.api.vizierpb.DebugLogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClusterId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPodName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrevious(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContainer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.DebugLogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.DebugLogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.DebugLogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.DebugLogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPodName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrevious();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getContainer();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string cluster_id = 1;
 * @return {string}
 */
proto.pl.api.vizierpb.DebugLogRequest.prototype.getClusterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.DebugLogRequest} returns this
 */
proto.pl.api.vizierpb.DebugLogRequest.prototype.setClusterId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pod_name = 2;
 * @return {string}
 */
proto.pl.api.vizierpb.DebugLogRequest.prototype.getPodName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.DebugLogRequest} returns this
 */
proto.pl.api.vizierpb.DebugLogRequest.prototype.setPodName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool previous = 3;
 * @return {boolean}
 */
proto.pl.api.vizierpb.DebugLogRequest.prototype.getPrevious = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pl.api.vizierpb.DebugLogRequest} returns this
 */
proto.pl.api.vizierpb.DebugLogRequest.prototype.setPrevious = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string container = 4;
 * @return {string}
 */
proto.pl.api.vizierpb.DebugLogRequest.prototype.getContainer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.DebugLogRequest} returns this
 */
proto.pl.api.vizierpb.DebugLogRequest.prototype.setContainer = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pl.api.vizierpb.DebugLogResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pl.api.vizierpb.DebugLogResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pl.api.vizierpb.DebugLogResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.DebugLogResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pl.api.vizierpb.DebugLogResponse}
 */
proto.pl.api.vizierpb.DebugLogResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pl.api.vizierpb.DebugLogResponse;
  return proto.pl.api.vizierpb.DebugLogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pl.api.vizierpb.DebugLogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pl.api.vizierpb.DebugLogResponse}
 */
proto.pl.api.vizierpb.DebugLogResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pl.api.vizierpb.DebugLogResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pl.api.vizierpb.DebugLogResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pl.api.vizierpb.DebugLogResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pl.api.vizierpb.DebugLogResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string data = 2;
 * @return {string}
 */
proto.pl.api.vizierpb.DebugLogResponse.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pl.api.vizierpb.DebugLogResponse} returns this
 */
proto.pl.api.vizierpb.DebugLogResponse.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.pl.api.vizierpb.DataType = {
  DATA_TYPE_UNKNOWN: 0,
  BOOLEAN: 1,
  INT64: 2,
  UINT128: 3,
  FLOAT64: 4,
  STRING: 5,
  TIME64NS: 6
};

/**
 * @enum {number}
 */
proto.pl.api.vizierpb.SemanticType = {
  ST_UNSPECIFIED: 0,
  ST_NONE: 1,
  ST_TIME_NS: 2,
  ST_AGENT_UID: 100,
  ST_ASID: 101,
  ST_UPID: 200,
  ST_SERVICE_NAME: 300,
  ST_POD_NAME: 400,
  ST_POD_PHASE: 401,
  ST_POD_STATUS: 402,
  ST_NODE_NAME: 500,
  ST_CONTAINER_NAME: 600,
  ST_CONTAINER_STATE: 601,
  ST_CONTAINER_STATUS: 602,
  ST_NAMESPACE_NAME: 700,
  ST_BYTES: 800,
  ST_PERCENT: 900,
  ST_DURATION_NS: 901,
  ST_THROUGHPUT_PER_NS: 902,
  ST_THROUGHPUT_BYTES_PER_NS: 903,
  ST_QUANTILES: 1000,
  ST_DURATION_NS_QUANTILES: 1001,
  ST_IP_ADDRESS: 1100,
  ST_PORT: 1200,
  ST_HTTP_REQ_METHOD: 1300,
  ST_HTTP_RESP_STATUS: 1400,
  ST_HTTP_RESP_MESSAGE: 1500,
  ST_SCRIPT_REFERENCE: 3000
};

/**
 * @enum {number}
 */
proto.pl.api.vizierpb.LifeCycleState = {
  UNKNOWN_STATE: 0,
  PENDING_STATE: 1,
  RUNNING_STATE: 2,
  FAILED_STATE: 3,
  TERMINATED_STATE: 4
};

goog.object.extend(exports, proto.pl.api.vizierpb);
