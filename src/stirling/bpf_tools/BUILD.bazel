load("//bazel:pl_build_system.bzl", "pl_cc_binary", "pl_cc_library", "pl_cc_test")

package(default_visibility = ["//src/stirling:__subpackages__"])

pl_cc_library(
    name = "cc_library",
    srcs = glob(
        ["*.cc"],
        exclude = [
            "**/*_test.cc",
            "probe_cleaner_standalone.cc",
        ],
    ),
    hdrs = glob(
        [
            "*.h",
        ],
    ),
    deps = [
        "//src/common/system:cc_library",
        "//src/stirling/obj_tools:cc_library",
        "//src/stirling/utils:cc_library",
        "//src/stirling/bpf_tools/bcc_bpf_intf:cc_library",
        "//src/stirling/bpf_tools/bcc_bpf:task_struct_mem_read",
    ] + select({
        "@bazel_tools//src/conditions:linux_x86_64": [
            "//third_party/foreign_cc:bcc",
            "//third_party:bpftrace",
            "//:llvm",
        ],
        "//conditions:default": [],
    }),
)

pl_cc_binary(
    name = "probe_cleaner_standalone",
    srcs = ["probe_cleaner_standalone.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "bcc_wrapper_bpf_test",
    srcs = ["bcc_wrapper_bpf_test.cc"],
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/stirling/bpf_tools/testing:get_tgid_start_time",
        "//src/stirling/obj_tools/testdata:dummy_exe_fixture",
    ],
)

pl_cc_test(
    name = "bpftrace_wrapper_bpf_test",
    srcs = ["bpftrace_wrapper_bpf_test.cc"],
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/stirling/obj_tools/testdata:dummy_exe_fixture",
    ],
)

pl_cc_test(
    name = "task_struct_resolver_bpf_test",
    srcs = ["task_struct_resolver_bpf_test.cc"],
    tags = [
        # TODO(oazizi): Enable this test.
        #               It fails on Jenkins because start_time and start_boottime are the same.
        "manual",
        "requires_bpf",
    ],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)
