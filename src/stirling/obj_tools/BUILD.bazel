package(default_visibility = ["//visibility:public"])

load("//bazel:pl_build_system.bzl", "pl_cc_binary", "pl_cc_library", "pl_cc_test")

pl_cc_library(
    name = "cc_library",
    srcs = glob(
        ["*.cc"],
        exclude = [
            "**/*_test.cc",
            "**/*_tool.cc",
            "**/*_benchmark.cc",
        ],
    ),
    hdrs = glob(
        [
            "*.h",
        ],
    ),
    deps = [
        "//:llvm",
        "//src/common/fs:cc_library",
        "//src/common/system:cc_library",
        "//src/stirling/common:cc_library",
        "//src/stirling/utils:cc_library",
        "//third_party:elfio",
    ],
)

pl_cc_test(
    name = "elf_tools_test",
    srcs = ["elf_tools_test.cc"],
    data = [
        "//src/stirling/obj_tools/testdata:dummy_go_binary",
        "//src/stirling/obj_tools/testdata:prebuilt_exe",
        "//src/stirling/obj_tools/testdata:stripped_exe",
    ],
    deps = [
        ":cc_library",
        "//src/common/exec:cc_library",
        "//src/stirling/obj_tools/testdata:dummy_exe_fixture",
    ],
)

pl_cc_test(
    name = "dwarf_tools_test",
    srcs = ["dwarf_tools_test.cc"],
    data = [
        "//demos/client_server_apps/go_grpc_tls_pl/server",
        "//src/stirling/obj_tools/testdata:dummy_exe_fixture",
        "//src/stirling/obj_tools/testdata:dummy_go_binary",
        "//src/stirling/obj_tools/testdata:sockshop_service",
    ],
    deps = [
        ":cc_library",
        "//src/common/exec:cc_library",
    ],
)

pl_cc_test(
    name = "proc_path_tools_test",
    # Set timeout to moderate because this test downloads a container image.
    timeout = "moderate",
    srcs = ["proc_path_tools_test.cc"],
    tags = ["requires_root"],
    deps = [
        ":cc_library",
        "//src/common/testing/test_utils:cc_library",
    ],
)

pl_cc_binary(
    name = "elf_reader_tool",
    srcs = ["elf_reader_tool.cc"],
    deps = [
        ":cc_library",
    ],
)

pl_cc_binary(
    name = "dwarfdump_tool",
    srcs = ["dwarfdump_tool.cc"],
    deps = [
        ":cc_library",
        "//:llvm",
    ],
)

# NOTE: This benchmark only currently works with `-c opt`, because path to test binary is hard-coded.
# But we should be running benchmarks with `-c opt` anyways.
pl_cc_binary(
    name = "dwarf_reader_benchmark",
    srcs = ["dwarf_reader_benchmark.cc"],
    data = ["//demos/client_server_apps/go_grpc_tls_pl/server"],
    deps = [
        ":cc_library",
        "//src/common/testing:cc_library",
        "@com_google_benchmark//:benchmark_main",
    ],
)
