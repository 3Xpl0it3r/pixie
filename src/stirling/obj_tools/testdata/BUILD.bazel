# gazelle:ignore

package(default_visibility = ["//visibility:public"])

load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

# We build dummy_exe with clang++ regardless of the bazel config.
# This is test data, so we want deterministic debug symbols.
genrule(
    name = "dummy_cc_binary",
    srcs = ["dummy_exe.cc"],
    outs = ["dummy_exe"],
    # -O0: Disables optimization which in turn disables inlining.
    # -g: Produces dwarf information.
    # -Wl,--build-id: This tells the linker to include a build-id,
    #                 which is useful for locating external debug symbols.
    cmd = "clang++ -O0 -g -Wl,--build-id -o $@ $<",
)

cc_library(
    name = "dummy_exe_fixture",
    hdrs = ["dummy_exe_fixture.h"],
    data = [":dummy_cc_binary"],
    deps = ["//src/common/exec:cc_library"],
)

go_binary(
    name = "dummy_go_binary",
    srcs = ["dummy_go_binary.go"],
    # To force no optimizations and no inlining, we need to pass -N -l
    gc_goopts = [
        "-N",
        "-l",
    ],
)

filegroup(
    name = "stripped_exe",
    srcs = [
        "stripped_dummy_exe",
        "usr/lib/debug/.build-id/7d/eb0e3f89deba61.debug",
    ],
)

filegroup(
    name = "prebuilt_exe",
    srcs = [
        "prebuilt_dummy_exe",
    ],
)

filegroup(
    name = "sockshop_service",
    srcs = [
        "sockshop_payments_service",
    ],
)

#------------------------------------------------------------------------------

# While the following rules are included for documentation purposes,
# the output of these command are directly checked into the repo.
# This is because we need a consistent build-id for testing purposes.

#genrule(
#    name = "dummy_exe_stripped",
#    srcs = [":dummy_exe"],
#    outs = [
#        "stripped_dummy_exe",
#    ],
#    cmd = "objcopy -S \"$<\" \"$@\"",
#)
#
#genrule(
#    name = "dummy_exe_debug",
#    srcs = [":dummy_exe"],
#    outs = [
#        "dummy_exe.debug",
#    ],
#    cmd = "objcopy --only-keep-debug \"$<\" \"$@\"",
#)

#------------------------------------------------------------------------------
