package(default_visibility = ["//src/stirling:__subpackages__"])

load("//bazel:pl_build_system.bzl", "pl_cc_library", "pl_cc_test")
load("//bazel:cc_resource.bzl", "pl_bpf_cc_resource", "pl_cc_resource", "pl_cc_resource_impl")
load("//bazel:pl_bpf_preprocess.bzl", "pl_bpf_preprocess")

filegroup(
    name = "dummy_system_headers",
    srcs = glob([
        "system-headers/**",
    ]),
    visibility = [
        "//experimental/bpf:__subpackages__",
        "//src/stirling:__subpackages__",
    ],
)

filegroup(
    name = "utils",
    srcs = [
        "utils.h",
    ],
    visibility = ["//experimental/bpf:__subpackages__"],
)

# TODO(oazizi): Ideally, we would use pl_bpf_preprocess and feed it to pl_cc_resource
# as an input, but that turns out to be a bit more tricky, since bl_cc_resource would
# then have to understand both labels and sources as inputs. So for now, use bl_bpf_cc_resource
# which automatically calls pl_bpf_preprocess under the hood.

# Leaving the bl_bpf_preprocess targets in here only for debug/observability, but keep
# in mind that they are not actively used targets.

socket_trace_hdrs = [
    "go_http2_trace.c",
    "go_tls_trace.c",
    "go_trace_common.h",
    "openssl_trace.c",
    "protocol_inference.h",
    "utils.h",
    "//src/stirling/bcc_bpf_interface:headers",
]

pl_bpf_cc_resource(
    name = "socket_trace",
    src = "socket_trace.c",
    hdrs = socket_trace_hdrs,
    syshdrs = ":dummy_system_headers",
)

# Debug target, so output of preprocessing can be viewed.
# Must keep in sync with :socket_trace.
# Do not use as a dependency.
pl_bpf_preprocess(
    name = "socket_trace_preprocess_debug",
    src = "socket_trace.c",
    hdrs = socket_trace_hdrs,
    syshdrs = ":dummy_system_headers",
)

pl_bpf_cc_resource(
    name = "pidruntime",
    src = "pidruntime.c",
    hdrs = [
        "utils.h",
        "//src/stirling/bcc_bpf_interface:headers",
    ],
    syshdrs = ":dummy_system_headers",
)

# Debug target, so output of preprocessing can be viewed.
# Do not use as a dependency.
pl_bpf_preprocess(
    name = "pidruntime_preprocess_debug",
    src = "pidruntime.c",
    hdrs = [
        "utils.h",
        "//src/stirling/bcc_bpf_interface:headers",
    ],
    syshdrs = ":dummy_system_headers",
)

pl_bpf_cc_resource(
    name = "proc_trace",
    src = "proc_trace.c",
    hdrs = [
        "utils.h",
        "//src/stirling/bcc_bpf_interface:headers",
    ],
    syshdrs = ":dummy_system_headers",
)

# Debug target, so output of preprocessing can be viewed.
# Do not use as a dependency.
pl_bpf_preprocess(
    name = "proc_trace_preprocess_debug",
    src = "proc_trace.c",
    hdrs = [
        "utils.h",
        "//src/stirling/bcc_bpf_interface:headers",
    ],
    syshdrs = ":dummy_system_headers",
)

pl_cc_test(
    name = "protocol_inference_test",
    srcs = [
        "protocol_inference.h",
        "protocol_inference_test.cc",
        "stubs.h",
        "utils.h",
    ],
    deps = [
        "//src/stirling/common:cc_library",
    ],
)
