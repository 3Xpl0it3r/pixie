# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

# Build of test data binaries is controlled by dockerized builds, not bazel/gazelle.
#gazelle:ignore

load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")
load("@io_bazel_rules_docker//docker/util:run.bzl", "container_run_and_commit", "container_run_and_extract")

container_image(
    name = "golang_1_16_grpc_client_source",
    base = "@golang_1_16_image//image",
    directory = "/go/src/grpc_client",
    files = ["main.go"],
)

container_run_and_commit(
    name = "golang_1_16_grpc_client_build",
    commands = [
        "go mod init",
        "go get",
        "go build -v",
    ],
    docker_run_flags = ["-w /go/src/grpc_client"],
    image = ":golang_1_16_grpc_client_source.tar",
)

container_run_and_extract(
    name = "golang_1_16_grpc_client_binary",
    commands = ["echo"],
    extract_file = "/go/src/grpc_client/grpc_client",
    image = ":golang_1_16_grpc_client_build_commit.tar",
)

filegroup(
    name = "grpc_client",
    srcs = [":golang_1_16_grpc_client_binary/go/src/grpc_client/grpc_client"],
    visibility = ["//src/stirling:__subpackages__"],
)

container_push(
    name = "push_image",
    format = "Docker",
    image = ":golang_1_16_grpc_client_build_commit.tar",
    registry = "gcr.io",
    repository = "pl-dev-infra/demos/go_grpc_client",
    tag = "{BUILD_USER}",
)

container_image(
    name = "golang_1_17_grpc_client_source",
    base = "@golang_1_17_image//image",
    directory = "/go/src/grpc_client",
    files = ["main.go"],
)

container_run_and_commit(
    name = "golang_1_17_grpc_client_build",
    commands = [
        "go mod init",
        "go get",
        "go build -v",
    ],
    docker_run_flags = ["-w /go/src/grpc_client"],
    image = ":golang_1_17_grpc_client_source.tar",
)

container_run_and_extract(
    name = "golang_1_17_grpc_client_binary",
    commands = ["echo"],
    extract_file = "/go/src/grpc_client/grpc_client",
    image = ":golang_1_17_grpc_client_build_commit.tar",
)

filegroup(
    name = "go_1_17_grpc_client",
    srcs = [":golang_1_17_grpc_client_binary/go/src/grpc_client/grpc_client"],
    visibility = ["//src/stirling:__subpackages__"],
)
