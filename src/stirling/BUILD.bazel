package(default_visibility = ["//visibility:public"])

load("//bazel:pl_build_system.bzl", "pl_cc_binary", "pl_cc_library", "pl_cc_test", "pl_cc_test_library")
load("@io_bazel_rules_docker//cc:image.bzl", "cc_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")

pl_cc_library(
    name = "cc_library",
    srcs = glob(
        ["*.cc"],
        exclude = [
            "**/*_test.cc",
            "stirling_wrapper.cc",
        ],
    ),
    hdrs = glob(
        ["*.h"],
        exclude = [
            "**/*_mock.h",
        ],
    ),
    deps = [
        "//src/shared/types/proto/wrapper:cc_library",
        "//src/stirling/bpf_tools:cc_library",
        "//src/stirling/common:cc_library",
        "//src/stirling/core:cc_library",
        "//src/stirling/dynamic_bpftrace:cc_library",
        "//src/stirling/dynamic_tracer:cc_library",
        "//src/stirling/jvm_stats:cc_library",
        "//src/stirling/pid_runtime:cc_library",
        "//src/stirling/proc_stat:cc_library",
        "//src/stirling/proto:stirling_pl_cc_proto",
        "//src/stirling/socket_tracer:cc_library",
        "//src/stirling/seq_gen:cc_library",
        "//src/stirling/system_stats:cc_library",
    ],
)

pl_cc_test_library(
    name = "stirling_mock",
    srcs = ["stirling_mock.h"],
    deps = [":cc_library"],
)

pl_cc_binary(
    name = "stirling_wrapper",
    srcs = ["stirling_wrapper.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner/probes:tracepoint_generator_lib",
    ],
)

pl_cc_test(
    name = "stirling_component_test",
    srcs = ["stirling_component_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "stirling_test",
    size = "medium",
    srcs = ["stirling_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "stirling_bpf_test",
    timeout = "moderate",
    srcs = ["stirling_bpf_test.cc"],
    flaky = True,
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
    ],
)

cc_image(
    name = "stirling_wrapper_image",
    base = "//:pl_cc_bpf_debug_image",
    binary = ":stirling_wrapper",
)

container_push(
    name = "push_stirling_wrapper_image",
    format = "Docker",
    image = ":stirling_wrapper_image",
    registry = "gcr.io",
    repository = "pl-dev-infra/stirling_wrapper",
    tag = "{BUILD_USER}",
)

pl_cc_test(
    name = "bpf_map_leak_test",
    timeout = "moderate",
    srcs = ["bpf_map_leak_test.cc"],
    data = ["//src/stirling/socket_tracer/protocols/http/testing/leaky_cpp_http_server:leaky_http_server"],
    tags = [
        "requires_bpf",
    ],
    deps = [
        ":cc_library",
        "//src/common/testing/test_utils:cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "stirling_wrapper_size_test",
    srcs = ["stirling_wrapper_size_test.cc"],
    data = [":stirling_wrapper"],
    tags = [
        "no_asan",
        "no_tsan",
    ],
)

# TODO(oazizi): Currently test needs to be run manually with sudo.
sh_test(
    name = "stirling_wrapper_kprobe_leak_test",
    srcs = ["stirling_wrapper_kprobe_leak_test.sh"],
    data = [
        ":stirling_wrapper",
        "//src/stirling/socket_tracer/protocols/http2/testing/go_grpc_client",
        "//src/stirling/socket_tracer/protocols/http2/testing/go_grpc_server",
    ],
    # Sometimes stirling_wrapper gets stuck after receiving SIGHUP, the test waits for
    # stirling_wrapper process to exit and eventually times out.
    flaky = True,
    tags = [
        "exclusive",
        "requires_bpf",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
)

sh_test(
    name = "stirling_wrapper_test",
    srcs = ["stirling_wrapper_test.sh"],
    args = [
        "$(location :stirling_wrapper)",
        "$(location //src/stirling/socket_tracer/protocols/http2/testing/go_grpc_server:go_grpc_server)",
        "$(location //src/stirling/socket_tracer/protocols/http2/testing/go_grpc_client:go_grpc_client)",
    ],
    data = [
        ":stirling_wrapper",
        "//src/stirling/socket_tracer/protocols/http2/testing/go_grpc_client",
        "//src/stirling/socket_tracer/protocols/http2/testing/go_grpc_server",
    ],
    # TODO(PL-1462): Uprobe attaching sometimes fails.
    flaky = True,
    tags = [
        "requires_bpf",
        # Run exclusive, otherwise BPF probe cleaner may conflict with open probes of other instances,
        # which will emit warnings, that will then be considered a test failure.
        "exclusive",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
)

sh_test(
    name = "stirling_wrapper_bpftrace_test",
    srcs = ["stirling_wrapper_bpftrace_test.sh"],
    args = [
        "$(location :stirling_wrapper)",
        "$(location //src/stirling/testing:tcpdrop_bpftrace_script)",
    ],
    data = [
        ":stirling_wrapper",
        "//src/stirling/testing:tcpdrop_bpftrace_script",
    ],
    tags = [
        "requires_bpf",
        # Run exclusive, otherwise BPF probe cleaner may conflict with open probes of other instances,
        # which will emit warnings, that will then be considered a test failure.
        "exclusive",
    ],
    deps = [
        "//src/stirling/scripts:sh_library",
    ],
)

sh_test(
    name = "stirling_wrapper_container_test",
    srcs = ["stirling_wrapper_container_test.sh"],
    args = [
        "$(location :stirling_wrapper_image.tar)",
        "$(location //src/stirling/socket_tracer/protocols/http2/testing/go_grpc_server:go_grpc_server)",
        "$(location //src/stirling/socket_tracer/protocols/http2/testing/go_grpc_client:go_grpc_client)",
    ],
    data = [
        ":stirling_wrapper_image.tar",
        "//src/stirling/socket_tracer/protocols/http2/testing/go_grpc_client",
        "//src/stirling/socket_tracer/protocols/http2/testing/go_grpc_server",
    ],
    tags = [
        "requires_bpf",
        # Run exclusive, otherwise BPF probe cleaner may conflict with open probes of other instances,
        # which will emit warnings, that will then be considered a test failure.
        "exclusive",
        # TODO(oazizi): This test times out in TSAN. Figure out why.
        # Likely related to the fact that its running though docker.
        "no_tsan",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
)

sh_test(
    name = "stirling_perf_test",
    srcs = ["stirling_perf_test.sh"],
    args = [
        "$(location :stirling_wrapper)",
    ],
    data = [
        ":stirling_wrapper",
    ],
    flaky = True,
    tags = [
        "requires_bpf",
        # Run exclusive to get as little noise as possible while measuring performance.
        "exclusive",
        # Only intention is to run this with opt builds.
        # Can still run it with -c dbg, but on Jenkins, we only run opt version.
        "no_asan",
        "no_tsan",
        # TODO(oazizi/yzhao): Fix this. Disabling this test for now on jenkins since it broken.
        "manual",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
)

sh_test(
    name = "stirling_wrapper_jvm_stats_test",
    srcs = ["stirling_wrapper_jvm_stats_test.sh"],
    args = [
        "$(location :stirling_wrapper_image.tar)",
        "$(location //src/stirling/testing/java:hello_world_image.tar)",
        "$(location //src/stirling/testing/java:HelloWorld)",
    ],
    data = [
        ":stirling_wrapper_image.tar",
        "//src/stirling/testing/java:HelloWorld",
        "//src/stirling/testing/java:hello_world_image.tar",
    ],
    flaky = True,
    tags = [
        "requires_bpf",
        # Run exclusive, otherwise BPF probe cleaner may conflict with open probes of other instances,
        # which will emit warnings, that will then be considered a test failure.
        "exclusive",
        # TODO(PP-1742): Test is flaky, especially with ASAN, likely due to timing issues.
        "manual",
        "no_asan",
        "no_tsan",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
)
