package(default_visibility = ["//visibility:public"])

load("//bazel:pl_build_system.bzl", "pl_cc_binary", "pl_cc_library", "pl_cc_test", "pl_cc_test_library")
load("@io_bazel_rules_docker//cc:image.bzl", "cc_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")

pl_cc_library(
    name = "cc_library",
    srcs = glob(
        ["*.cc"],
        exclude = [
            "**/*_test.cc",
            "stirling_wrapper.cc",
            "stirling_mock.h",
        ],
    ),
    hdrs = glob(
        [
            "*.h",
            "bcc_bpf_interface/*.h",
        ],
        exclude = [
            "**/*_mock.h",
        ],
    ),
    deps = [
        "//src/shared/types:cc_library",
        "//src/shared/types/proto/wrapper:cc_library",
        "//src/shared/metadata:cc_library",
        "//src/common/grpcutils:cc_library",
        "//src/common/protobufs:cc_library",
        "//src/common/fs:cc_library",
        "//src/common/json:cc_library",
        "//src/stirling/common:cc_library",
        "//src/stirling/utils:cc_library",
        "//src/stirling/proto:stirling_pl_cc_proto",
        "//src/stirling/protocols/cql:cc_library",
        "//src/stirling/protocols/dns:cc_library",
        "//src/stirling/protocols/mysql:cc_library",
        "//src/stirling/protocols/pgsql:cc_library",
        "//src/stirling/protocols/http:cc_library",
        "//src/stirling/protocols/http2:cc_library",
        "//src/stirling/proto:sock_event_pl_cc_proto",
        "//src/stirling/bcc_bpf_interface:cc_library",
        "//src/stirling/bpf_tools:cc_library",
        "//src/stirling/dynamic_tracing:cc_library",
        "//src/stirling/obj_tools:cc_library",
        "//demos/applications/hipster_shop:cc_library",
    ] + select({
        "@bazel_tools//src/conditions:linux_x86_64": [
            "//third_party:bpftrace",
            "//src/stirling/bcc_bpf:socket_trace",
            "//src/stirling/bcc_bpf:pidruntime",
            "//src/stirling/bcc_bpf:proc_trace",
            "//src/stirling/bt:cpustat",
            "//src/stirling/bt:pidruntime",
        ],
        "//conditions:default": [],
    }),
)

pl_cc_test_library(
    name = "stirling_mock",
    srcs = ["stirling_mock.h"],
    deps = [":cc_library"],
)

pl_cc_binary(
    name = "stirling_wrapper",
    srcs = ["stirling_wrapper.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner/probes:tracepoint_generator_lib",
    ],
)

pl_cc_test(
    name = "output_test",
    srcs = ["output_test.cc"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "types_test",
    srcs = ["types_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "info_class_manager_test",
    srcs = ["info_class_manager_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "data_table_test",
    srcs = ["data_table_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "record_builder_test",
    srcs = ["record_builder_test.cc"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "pub_sub_manager_test",
    srcs = ["pub_sub_manager_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "source_registry_test",
    srcs = ["source_registry_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "stirling_component_test",
    srcs = ["stirling_component_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "stirling_test",
    size = "medium",
    srcs = ["stirling_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "stirling_bpf_test",
    timeout = "moderate",
    srcs = ["stirling_bpf_test.cc"],
    flaky = True,
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
    ],
)

pl_cc_test(
    name = "stirling_dt_bpf_test",
    timeout = "long",
    srcs = ["stirling_dt_bpf_test.cc"],
    data = [
        "//src/stirling/obj_tools/testdata:dummy_cc_binary",
        "//src/stirling/obj_tools/testdata:dummy_go_binary",
        "//src/stirling/testing/dns:dns_hammer",
        "//src/stirling/testing/dns:dns_hammer_image.tar",
    ],
    flaky = True,
    shard_count = 8,
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/common/exec:cc_library",
        "//src/common/testing/test_utils:cc_library",
    ],
)

pl_cc_test(
    name = "dynamic_trace_bpf_test",
    timeout = "moderate",
    srcs = ["dynamic_trace_bpf_test.cc"],
    data = [
        "//src/stirling/protocols/http2/testing/go_grpc_client",
        "//src/stirling/protocols/http2/testing/go_grpc_server",
    ],
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/common/exec:cc_library",
        "//src/stirling/obj_tools/testdata:dummy_exe_fixture",
        "//src/stirling/testing:cc_library",
    ],
)

cc_image(
    name = "stirling_wrapper_image",
    base = "//:pl_cc_bpf_debug_image",
    binary = ":stirling_wrapper",
)

container_push(
    name = "push_stirling_wrapper_image",
    format = "Docker",
    image = ":stirling_wrapper_image",
    registry = "gcr.io",
    repository = "pl-dev-infra/stirling_wrapper",
    tag = "{BUILD_USER}",
)

pl_cc_test(
    name = "socket_trace_connector_test",
    srcs = ["socket_trace_connector_test.cc"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "uprobe_symaddrs_test",
    srcs = ["uprobe_symaddrs_test.cc"],
    data = [
        "//demos/client_server_apps/go_grpc_tls_pl/server",
    ],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "jvm_stats_connector_test",
    srcs = ["jvm_stats_connector_test.cc"],
    data = [
        "//src/stirling/testing/java:HelloWorld",
    ],
    tags = [
        "no_coverage",
        "exclusive",
    ],
    flaky = True,
    deps = [
        ":cc_library",
        "//src/common/exec:cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "dynamic_bpftrace_connector_test",
    srcs = ["dynamic_bpftrace_connector_test.cc"],
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "data_stream_test",
    srcs = ["data_stream_test.cc"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "connection_tracker_test",
    srcs = ["connection_tracker_test.cc"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "connection_tracker_http2_test",
    srcs = ["connection_tracker_http2_test.cc"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "connection_stats_test",
    srcs = ["connection_stats_test.cc"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "socket_trace_bpf_test",
    timeout = "long",
    srcs = ["socket_trace_bpf_test.cc"],
    flaky = True,
    shard_count = 5,
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "http_trace_bpf_test",
    timeout = "moderate",
    srcs = ["http_trace_bpf_test.cc"],
    # This test sometimes times out.
    flaky = True,
    shard_count = 3,
    tags = [
        "no_asan",
        "requires_bpf",
    ],
    deps = [
        ":cc_library",
        "//src/common/exec:cc_library",
        "//src/stirling/protocols/http/testing:go_http_fixture",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "mysql_trace_bpf_test",
    timeout = "moderate",
    srcs = ["mysql_trace_bpf_test.cc"],
    flaky = True,
    shard_count = 2,
    tags = [
        "no_asan",
        "requires_bpf",
    ],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "mysql_container_bpf_test",
    timeout = "moderate",
    srcs = ["mysql_container_bpf_test.cc"],
    data = [
        "//src/stirling/protocols/mysql/testing:expected_outputs",
        "//src/stirling/protocols/mysql/testing:scripts",
    ],
    flaky = True,
    tags = [
        "no_asan",
        "requires_bpf",
    ],
    deps = [
        ":cc_library",
        "//src/common/testing/test_utils:cc_library",
        "//src/stirling/protocols/test_output_generator:cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "openssl_bpf_test",
    timeout = "moderate",
    srcs = ["openssl_bpf_test.cc"],
    data = ["//src/stirling/testing/ssl:nginx_ssl_image.tar"],
    flaky = True,
    tags = [
        "no_asan",
        "requires_bpf",
    ],
    deps = [
        ":cc_library",
        "//src/common/testing/test_utils:cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "bpf_map_leak_test",
    timeout = "moderate",
    srcs = ["bpf_map_leak_test.cc"],
    data = ["//src/stirling/protocols/http/testing/leaky_cpp_http_server:leaky_http_server"],
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/common/testing/test_utils:cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "pgsql_trace_bpf_test",
    timeout = "moderate",
    srcs = [
        "pgsql_trace_bpf_test.cc",
    ],
    data = [
        "//src/stirling/protocols/pgsql/testing:demo_image.tar",
    ],
    flaky = True,
    shard_count = 2,
    tags = [
        "no_asan",
        "requires_bpf",
    ],
    deps = [
        ":cc_library",
        "//src/common/testing/test_utils:cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "cql_trace_bpf_test",
    timeout = "moderate",
    srcs = [
        "cql_trace_bpf_test.cc",
    ],
    flaky = True,
    tags = [
        "no_asan",
        "requires_bpf",
    ],
    deps = [
        ":cc_library",
        "//src/common/testing/test_utils:cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "grpc_trace_bpf_test",
    timeout = "moderate",
    srcs = ["grpc_trace_bpf_test.cc"],
    data = [
        "//src/stirling/protocols/http2/testing/go_grpc_client",
        "//src/stirling/protocols/http2/testing/go_grpc_server",
    ],
    # TODO(PL-1412): GRPCTraceUprobingTest.CaptureRPCTraceRecord sometimes captures no data.
    flaky = True,
    shard_count = 3,
    tags = [
        "requires_bpf",
        # This test runs Go gRPC client & server, which causes other tests to attach & detach
        # uprobes and slowed down significantly.
        "exclusive",
        "no_asan",
    ],
    deps = [
        ":cc_library",
        "//src/common/exec:cc_library",
        "//src/stirling/protocols/http2/testing:cc_library",
        "//src/stirling/protocols/http2/testing/proto:greet_pl_cc_proto",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "http2_trace_bpf_test",
    timeout = "moderate",
    srcs = ["http2_trace_bpf_test.cc"],
    data = [
        "//demos/applications/hipster_shop/productcatalogservice_client:productcatalogservice_client_image.tar",
        "//demos/client_server_apps/go_grpc_tls_pl/client:client_image.tar",
        "//demos/client_server_apps/go_grpc_tls_pl/server:server_image.tar",
    ],
    flaky = True,
    tags = [
        "requires_bpf",
        # This test runs Go gRPC client & server, which causes other tests to attach & detach
        # uprobes, slowing them down significantly.
        "exclusive",
        "no_asan",
    ],
    deps = [
        ":cc_library",
        "//src/common/exec:cc_library",
        "//src/common/testing/test_utils:cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "dns_trace_bpf_test",
    timeout = "moderate",
    srcs = [
        "dns_trace_bpf_test.cc",
    ],
    data = [
        "//src/stirling/testing/dns2:dns_server_image.tar",
    ],
    flaky = True,
    tags = [
        "no_asan",
        "requires_bpf",
    ],
    deps = [
        ":cc_library",
        "//src/common/testing/test_utils:cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "conn_stats_bpf_test",
    timeout = "moderate",
    srcs = ["conn_stats_bpf_test.cc"],
    flaky = True,
    shard_count = 2,
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/common/exec:cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "bpftrace_connector_bpf_test",
    timeout = "long",
    srcs = ["bpftrace_connector_bpf_test.cc"],
    flaky = True,
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "redis_trace_bpf_test",
    timeout = "long",
    srcs = ["redis_trace_bpf_test.cc"],
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/common/testing/test_utils:cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "fd_resolver_test",
    srcs = ["fd_resolver_test.cc"],
    deps = [
        ":cc_library",
        "//src/common/system:cc_library",
    ],
)

pl_cc_test(
    name = "stirling_wrapper_size_test",
    srcs = ["stirling_wrapper_size_test.cc"],
    data = [":stirling_wrapper"],
    tags = [
        "no_asan",
        "no_tsan",
    ],
)

# TODO(oazizi): Currently test needs to be run manually with sudo.
sh_test(
    name = "stirling_wrapper_kprobe_leak_test",
    srcs = ["stirling_wrapper_kprobe_leak_test.sh"],
    data = [
        ":stirling_wrapper",
        "//src/stirling/protocols/http2/testing/go_grpc_client",
        "//src/stirling/protocols/http2/testing/go_grpc_server",
    ],
    # Sometimes stirling_wrapper gets stuck after receiving SIGHUP, the test waits for
    # stirling_wrapper process to exit and eventually times out.
    flaky = True,
    tags = [
        "exclusive",
        "requires_bpf",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
)

sh_test(
    name = "stirling_wrapper_test",
    srcs = ["stirling_wrapper_test.sh"],
    args = [
        "$(location :stirling_wrapper)",
        "$(location //src/stirling/protocols/http2/testing/go_grpc_server:go_grpc_server)",
        "$(location //src/stirling/protocols/http2/testing/go_grpc_client:go_grpc_client)",
    ],
    data = [
        ":stirling_wrapper",
        "//src/stirling/protocols/http2/testing/go_grpc_client",
        "//src/stirling/protocols/http2/testing/go_grpc_server",
    ],
    # TODO(PL-1462): Uprobe attaching sometimes fails.
    flaky = True,
    tags = [
        "requires_bpf",
        # Run exclusive, otherwise BPF probe cleaner may conflict with open probes of other instances,
        # which will emit warnings, that will then be considered a test failure.
        "exclusive",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
)

sh_test(
    name = "stirling_wrapper_container_test",
    srcs = ["stirling_wrapper_container_test.sh"],
    args = [
        "$(location :stirling_wrapper_image.tar)",
        "$(location //src/stirling/protocols/http2/testing/go_grpc_server:go_grpc_server)",
        "$(location //src/stirling/protocols/http2/testing/go_grpc_client:go_grpc_client)",
    ],
    data = [
        ":stirling_wrapper_image.tar",
        "//src/stirling/protocols/http2/testing/go_grpc_client",
        "//src/stirling/protocols/http2/testing/go_grpc_server",
    ],
    tags = [
        "requires_bpf",
        # Run exclusive, otherwise BPF probe cleaner may conflict with open probes of other instances,
        # which will emit warnings, that will then be considered a test failure.
        "exclusive",
        # TODO(oazizi): This test times out in TSAN. Figure out why.
        # Likely related to the fact that its running though docker.
        "no_tsan",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
)

sh_test(
    name = "stirling_perf_test",
    srcs = ["stirling_perf_test.sh"],
    args = [
        "$(location :stirling_wrapper)",
    ],
    data = [
        ":stirling_wrapper",
    ],
    flaky = True,
    tags = [
        "requires_bpf",
        # Run exclusive to get as little noise as possible while measuring performance.
        "exclusive",
        # Only intention is to run this with opt builds.
        # Can still run it with -c dbg, but on Jenkins, we only run opt version.
        "no_asan",
        "no_tsan",
        # TODO(oazizi/yzhao): Fix this. Disabling this test for now on jenkins since it broken.
        "manual",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
)

sh_test(
    name = "stirling_wrapper_jvm_stats_test",
    srcs = ["stirling_wrapper_jvm_stats_test.sh"],
    args = [
        "$(location :stirling_wrapper_image.tar)",
        "$(location //src/stirling/testing/java:hello_world_image.tar)",
        "$(location //src/stirling/testing/java:HelloWorld)",
    ],
    data = [
        ":stirling_wrapper_image.tar",
        "//src/stirling/testing/java:HelloWorld",
        "//src/stirling/testing/java:hello_world_image.tar",
    ],
    flaky = True,
    tags = [
        "requires_bpf",
        # Run exclusive, otherwise BPF probe cleaner may conflict with open probes of other instances,
        # which will emit warnings, that will then be considered a test failure.
        "exclusive",
        # TODO(PP-1742): Test is flaky, especially with ASAN, likely due to timing issues.
        "manual",
        "no_asan",
        "no_tsan",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
)
