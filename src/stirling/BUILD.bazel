package(default_visibility = ["//visibility:public"])

load("//bazel:pl_build_system.bzl", "pl_cc_binary", "pl_cc_library", "pl_cc_test")
load("@io_bazel_rules_docker//cc:image.bzl", "cc_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")

pl_cc_library(
    name = "cc_library",
    srcs = glob(
        ["*.cc"],
        exclude = [
            "**/*_test.cc",
            "stirling_wrapper.cc",
        ],
    ),
    hdrs = glob(
        [
            "*.h",
            "bcc_bpf_interface/*.h",
        ],
        exclude = [
            "**/*_mock.h",
        ],
    ),
    deps = [
        "//src/shared/types:cc_library",
        "//src/shared/types/proto:types_pl_cc_proto",
        "//src/common/grpcutils:cc_library",
        "//src/common/protobufs:cc_library",
        "//src/common/fs:cc_library",
        "//src/stirling/common:cc_library",
        "//src/stirling/utils:cc_library",
        "//src/stirling/proto:stirling_pl_cc_proto",
        "//demos/applications/hipster_shop:cc_library",
        "//src/stirling/mysql:cc_library",
        "//src/stirling/http:cc_library",
        "//src/stirling/http2:cc_library",
        "//src/shared/metadata:cc_library",
        "//src/stirling/proto:sock_event_pl_cc_proto",
        "//src/stirling/bcc_bpf_interface:cc_library",
        "//src/stirling/bpf_tools:cc_library",
        "//src/stirling/obj_tools:cc_library",
    ] + select({
        "@bazel_tools//src/conditions:linux_x86_64": [
            "//src/stirling/bcc_bpf:socket_trace",
            "//src/stirling/bcc_bpf:pidruntime",
        ],
        "//conditions:default": [],
    }),
)

pl_cc_binary(
    name = "stirling_wrapper",
    srcs = ["stirling_wrapper.cc"],
    deps = [
        ":cc_library",
    ],
)

pl_cc_test(
    name = "types_test",
    srcs = ["types_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "info_class_manager_test",
    srcs = ["info_class_manager_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "data_table_test",
    srcs = ["data_table_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "pub_sub_manager_test",
    srcs = ["pub_sub_manager_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "source_registry_test",
    srcs = ["source_registry_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "stirling_component_test",
    srcs = ["stirling_component_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "stirling_test",
    size = "medium",
    srcs = ["stirling_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "stirling_bpf_test",
    srcs = ["stirling_bpf_test.cc"],
    flaky = True,
    tags = ["requires_bpf"],
    deps = [":cc_library"],
)

cc_image(
    name = "stirling_wrapper_image",
    base = "//:pl_cc_bpf_debug_image",
    binary = ":stirling_wrapper",
)

container_push(
    name = "push_stirling_wrapper_image",
    format = "Docker",
    image = ":stirling_wrapper_image",
    registry = "gcr.io",
    repository = "pl-dev-infra/stirling_wrapper",
    tag = "{BUILD_USER}",
)

pl_cc_test(
    name = "socket_trace_connector_test",
    srcs = ["socket_trace_connector_test.cc"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "data_stream_test",
    srcs = ["data_stream_test.cc"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "connection_tracker_test",
    srcs = ["connection_tracker_test.cc"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "connection_tracker_http2_test",
    srcs = ["connection_tracker_http2_test.cc"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "socket_trace_bpf_test",
    timeout = "moderate",
    srcs = ["socket_trace_bpf_test.cc"],
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "http_trace_bpf_test",
    timeout = "moderate",
    srcs = ["http_trace_bpf_test.cc"],
    args = [
        "--go_http_client_path=$(location //src/stirling/http/testing/go_http_client)",
        "--go_http_server_path=$(location //src/stirling/http/testing/go_http_server)",
    ],
    data = [
        "//src/stirling/http/testing/go_http_client",
        "//src/stirling/http/testing/go_http_server",
    ],
    # This test sometimes times out.
    flaky = True,
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/common/exec:cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "mysql_trace_bpf_test",
    timeout = "moderate",
    srcs = ["mysql_trace_bpf_test.cc"],
    tags = ["requires_bpf"],
    deps = [
        ":cc_library",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "grpc_trace_bpf_test",
    timeout = "moderate",
    srcs = ["grpc_trace_bpf_test.cc"],
    args = [
        "--go_grpc_client_path=$(location //src/stirling/http2/testing/go_grpc_client)",
        "--go_grpc_server_path=$(location //src/stirling/http2/testing/go_grpc_server)",
    ],
    data = [
        "//src/stirling/http2/testing/go_grpc_client",
        "//src/stirling/http2/testing/go_grpc_server",
    ],
    tags = [
        "requires_bpf",
        # This test runs Go gRPC client & server, which causes other tests to attach & detach
        # uprobes and slowed down significantly.
        "exclusive",
    ],
    # TODO(PL-1412): GRPCTraceUprobingTest.CaptureRPCTraceRecord sometimes captures no data.
    flaky = True,
    deps = [
        ":cc_library",
        "//src/common/exec:cc_library",
        "//src/stirling/http2/testing:cc_library",
        "//src/stirling/http2/testing/proto:greet_pl_cc_proto",
        "//src/stirling/testing:cc_library",
    ],
)

pl_cc_test(
    name = "socket_resolver_test",
    srcs = ["socket_resolver_test.cc"],
    deps = [
        ":cc_library",
        "//src/common/system/testing:cc_library",
    ],
)

pl_cc_test(
    name = "message_types_test",
    srcs = ["message_types_test.cc"],
    deps = [":cc_library"],
)

pl_cc_test(
    name = "stirling_wrapper_size_test",
    srcs = ["stirling_wrapper_size_test.cc"],
    data = [":stirling_wrapper"],
    # TODO(yzhao): Forces this test to run with -c opt build, so its size does not vary.
    # Figure out if there is cleaner solution.
    tags = ["requires_bpf"],
)

# TODO(oazizi): Currently test needs to be run manually with sudo.
sh_test(
    name = "stirling_wrapper_kprobe_leak_test",
    srcs = ["stirling_wrapper_kprobe_leak_test.sh"],
    data = [
        ":stirling_wrapper",
        "//src/stirling/http2/testing/go_grpc_client",
        "//src/stirling/http2/testing/go_grpc_server",
    ],
    tags = [
        "exclusive",
        "requires_bpf",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
    # Sometimes stirling_wrapper gets stuck after receiving SIGHUP, the test waits for
    # stirling_wrapper process to exit and eventually times out.
    flaky = True,
)

sh_test(
    name = "stirling_wrapper_test",
    srcs = ["stirling_wrapper_test.sh"],
    args = [
        "$(location :stirling_wrapper)",
        "$(location //src/stirling/http2/testing/go_grpc_server:go_grpc_server)",
        "$(location //src/stirling/http2/testing/go_grpc_client:go_grpc_client)",
    ],
    data = [
        ":stirling_wrapper",
        "//src/stirling/http2/testing/go_grpc_client",
        "//src/stirling/http2/testing/go_grpc_server",
    ],
    tags = [
        "requires_bpf",
        # Run exclusive, otherwise BPF probe cleaner may conflict with open probes of other instances,
        # which will emit warnings, that will then be considered a test failure.
        "exclusive",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
)

sh_test(
    name = "stirling_wrapper_container_test",
    srcs = ["stirling_wrapper_container_test.sh"],
    args = [
        "$(location :stirling_wrapper_image.tar)",
        "$(location //src/stirling/http2/testing/go_grpc_server:go_grpc_server)",
        "$(location //src/stirling/http2/testing/go_grpc_client:go_grpc_client)",
    ],
    data = [
        ":stirling_wrapper_image.tar",
        "//src/stirling/http2/testing/go_grpc_client",
        "//src/stirling/http2/testing/go_grpc_server",
    ],
    tags = [
        "requires_bpf",
        # Run exclusive, otherwise BPF probe cleaner may conflict with open probes of other instances,
        # which will emit warnings, that will then be considered a test failure.
        "exclusive",
        # TODO(oazizi): This test times out in TSAN. Figure out why.
        # Likely related to the fact that its running though docker.
        "no_tsan",
    ],
    deps = ["//src/stirling/scripts:sh_library"],
)
