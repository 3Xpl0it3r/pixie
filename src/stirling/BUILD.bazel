package(default_visibility = ["//visibility:public"])

load("//bazel:pl_build_system.bzl", "pl_cc_binary", "pl_cc_library", "pl_cc_test", "pl_cc_test_library")
load("@io_bazel_rules_docker//cc:image.bzl", "cc_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")

pl_cc_library(
    name = "cc_library",
    srcs = glob(
        ["*.cc"],
        exclude = [
            "**/*_test.cc",
            "stirling_wrapper.cc",
        ],
    ),
    hdrs = glob(
        ["*.h"],
        exclude = [
            "**/*_mock.h",
        ],
    ),
    deps = [
        "//src/shared/types/proto/wrapper:cc_library",
        "//src/stirling/bpf_tools:cc_library",
        "//src/stirling/common:cc_library",
        "//src/stirling/core:cc_library",
        "//src/stirling/proto:stirling_pl_cc_proto",
        "//src/stirling/source_connectors/dynamic_bpftrace:cc_library",
        "//src/stirling/source_connectors/dynamic_tracer:cc_library",
        "//src/stirling/source_connectors/jvm_stats:cc_library",
        "//src/stirling/source_connectors/pid_runtime:cc_library",
        "//src/stirling/source_connectors/proc_stat:cc_library",
        "//src/stirling/source_connectors/seq_gen:cc_library",
        "//src/stirling/source_connectors/socket_tracer:cc_library",
        "//src/stirling/source_connectors/system_stats:cc_library",
    ],
)

pl_cc_test_library(
    name = "stirling_mock",
    srcs = ["stirling_mock.h"],
    deps = [":cc_library"],
)

pl_cc_binary(
    name = "stirling_wrapper",
    srcs = ["stirling_wrapper.cc"],
    deps = [
        ":cc_library",
        "//src/carnot/planner/probes:tracepoint_generator_lib",
    ],
)

cc_image(
    name = "stirling_wrapper_image",
    base = "//:pl_cc_bpf_debug_image",
    binary = ":stirling_wrapper",
)

container_push(
    name = "push_stirling_wrapper_image",
    format = "Docker",
    image = ":stirling_wrapper_image",
    registry = "gcr.io",
    repository = "pl-dev-infra/stirling_wrapper",
    tag = "{BUILD_USER}",
)
