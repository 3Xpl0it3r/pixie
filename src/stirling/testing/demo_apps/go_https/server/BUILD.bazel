# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

package(default_visibility = ["//src/stirling:__subpackages__"])

go_library(
    name = "server_lib",
    srcs = ["https_server.go"],
    importpath = "px.dev/pixie/src/stirling/testing/demo_apps/go_https/server",
    visibility = ["//visibility:private"],
    deps = [
        "@com_github_spf13_pflag//:pflag",
        "@com_github_spf13_viper//:viper",
    ],
)

go_binary(
    name = "https_server",
    embed = [":server_lib"],
)

genrule(
    name = "certs",
    outs = [
        "server.crt",
        "server.key",
    ],
    cmd = """
        openssl ecparam -genkey -name secp384r1 -out $(location server.key) && \
        openssl req -new -x509 -sha256 -key $(location server.key) -subj "/C=US/ST=California/L=San Francisco/O=Pixie Labs Inc./CN=127.0.0.1:50101" -out $(location server.crt) -days 365
    """,
)

filegroup(
    name = "server_certs",
    srcs = [
        "server.crt",
        "server.key",
    ],
)

container_image(
    name = "server_image_base",
    base = "@go_image_base//image",
    directory = "/certs",
    files = [":server_certs"],
)

go_image(
    name = "server_image",
    args = [
        "--cert=/certs/server.crt",
        "--key=/certs/server.key",
    ],
    base = ":server_image_base",
    binary = ":https_server",
)
