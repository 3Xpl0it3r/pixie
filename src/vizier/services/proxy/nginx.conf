worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;

    gzip  on;
    # Compress proxied traffic.
    gzip_proxied any;
    gzip_vary on;

    # Tune nginx keepalives to work with the GCP HTTP(S) Load Balancer:
    keepalive_timeout 650;
    keepalive_requests 10000;

    # We run a dnsmasq sidecar to make sure it resolves correctly
    # based on /etc/resolv.conf.
    resolver 127.0.0.1:53 valid=5s ipv6=off;

    server {
        listen [::]:55000 ssl http2;
        listen 55000 ssl http2;

        server_name _;
        ssl_certificate /certs/tls.crt;
        ssl_certificate_key /certs/tls.key;

        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }

        location /graphql {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            set $upstream_api_service vizier-api-service.pl.svc:50200;
            proxy_pass https://$upstream_api_service/graphql;
        }

        # We treat query broker service as the GRPC API interface.
        # TODO(zasgar/michelle): Consider pulling the API into tha vizier-api-service.
        location ~ ^/pl.vizier.services.query_broker.* {
             grpc_pass grpcs://vizier-query-broker:50300;
        }


        location /healthz {
          return 200 "healthy\n";
        }
    }
}
