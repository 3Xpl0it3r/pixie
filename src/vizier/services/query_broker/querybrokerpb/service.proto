/*
 * Copyright 2018- The Pixie Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

syntax = "proto3";

package px.vizier.services.query_broker.querybrokerpb;

option go_package = "querybrokerpb";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "src/api/proto/uuidpb/uuid.proto";
import "src/carnot/queryresultspb/query_results.proto";
import "src/common/base/statuspb/status.proto";
import "src/table_store/schemapb/schema.proto";

// The query broker implements ResultSinkService and VizierService.

// The schema information per agent.
message Schema {
  repeated px.table_store.schemapb.Relation relations = 1;
}

// The schema request.
message SchemaRequest {}

// The schema response from Vizier.
message SchemaResponse {
  message SchemaByAgent {
    uuidpb.UUID agent_id = 1 [(gogoproto.customname) = "AgentID"];
    Schema schema = 2;
  }
  repeated SchemaByAgent schema_by_agent = 1;
}

message AgentQueryResponse {
  px.statuspb.Status status = 1;
  // The ID of the returned query.
  uuidpb.UUID query_id = 2 [(gogoproto.customname) = "QueryID"];
  px.carnot.queryresultspb.QueryResult query_result = 3;
}

// AgentQueryResultRequest is a request from the agent to the query broker
// containing the results from a query.
message AgentQueryResultRequest {
  uuidpb.UUID agent_id = 1 [(gogoproto.customname) = "AgentID"];
  AgentQueryResponse result = 2;
}

message AgentQueryResultResponse {}

// VizierQueryResponse is returned by Vizier in response to a query.
message VizierQueryResponse {
  // Status message carries information
  // about any potential failures, ie compiler error failures
  px.statuspb.Status status = 2;
  // The id for the query
  uuidpb.UUID query_id = 3 [(gogoproto.customname) = "QueryID"];
  px.carnot.queryresultspb.QueryResult query_result = 4;
  reserved 1;
}
