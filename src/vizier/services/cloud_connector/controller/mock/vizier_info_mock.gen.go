// Code generated by MockGen. DO NOT EDIT.
// Source: pixielabs.ai/pixielabs/src/vizier/services/cloud_connector/controller (interfaces: VizierInfo)

// Package mock_controller is a generated GoMock package.
package mock_controller

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockVizierInfo is a mock of VizierInfo interface
type MockVizierInfo struct {
	ctrl     *gomock.Controller
	recorder *MockVizierInfoMockRecorder
}

// MockVizierInfoMockRecorder is the mock recorder for MockVizierInfo
type MockVizierInfoMockRecorder struct {
	mock *MockVizierInfo
}

// NewMockVizierInfo creates a new mock instance
func NewMockVizierInfo(ctrl *gomock.Controller) *MockVizierInfo {
	mock := &MockVizierInfo{ctrl: ctrl}
	mock.recorder = &MockVizierInfoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVizierInfo) EXPECT() *MockVizierInfoMockRecorder {
	return m.recorder
}

// GetAddress mocks base method
func (m *MockVizierInfo) GetAddress() (string, error) {
	ret := m.ctrl.Call(m, "GetAddress")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAddress indicates an expected call of GetAddress
func (mr *MockVizierInfoMockRecorder) GetAddress() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAddress", reflect.TypeOf((*MockVizierInfo)(nil).GetAddress))
}
