// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny  

package controllers

import (
	log "github.com/sirupsen/logrus"
	v1 "k8s.io/api/core/v1"
	internalversion "k8s.io/apimachinery/pkg/apis/meta/internalversion"
	"k8s.io/apimachinery/pkg/runtime"
)

func runtimeObjToPodList(o runtime.Object) *v1.PodList {
	l, ok := o.(*v1.PodList)
	if ok {
		return l
	}

	internalList, ok := o.(*internalversion.List)
	if !ok {
		log.WithField("list", o).Fatal("Received unexpected object type from lister")
	}

	typedList := v1.PodList{}
	for _, i := range internalList.Items {
		item, ok := i.(*v1.Pod)
		if !ok {
			log.WithField("expectedPod", i).Fatal("Received unexpected object type from lister")
		}
		typedList.Items = append(typedList.Items, *item)
	}

	return &typedList
}

func runtimeObjToServiceList(o runtime.Object) *v1.ServiceList {
	l, ok := o.(*v1.ServiceList)
	if ok {
		return l
	}

	internalList, ok := o.(*internalversion.List)
	if !ok {
		log.WithField("list", o).Fatal("Received unexpected object type from lister")
	}

	typedList := v1.ServiceList{}
	for _, i := range internalList.Items {
		item, ok := i.(*v1.Service)
		if !ok {
			log.WithField("expectedService", i).Fatal("Received unexpected object type from lister")
		}
		typedList.Items = append(typedList.Items, *item)
	}

	return &typedList
}

func runtimeObjToNamespaceList(o runtime.Object) *v1.NamespaceList {
	l, ok := o.(*v1.NamespaceList)
	if ok {
		return l
	}

	internalList, ok := o.(*internalversion.List)
	if !ok {
		log.WithField("list", o).Fatal("Received unexpected object type from lister")
	}

	typedList := v1.NamespaceList{}
	for _, i := range internalList.Items {
		item, ok := i.(*v1.Namespace)
		if !ok {
			log.WithField("expectedNamespace", i).Fatal("Received unexpected object type from lister")
		}
		typedList.Items = append(typedList.Items, *item)
	}

	return &typedList
}

func runtimeObjToEndpointsList(o runtime.Object) *v1.EndpointsList {
	l, ok := o.(*v1.EndpointsList)
	if ok {
		return l
	}

	internalList, ok := o.(*internalversion.List)
	if !ok {
		log.WithField("list", o).Fatal("Received unexpected object type from lister")
	}

	typedList := v1.EndpointsList{}
	for _, i := range internalList.Items {
		item, ok := i.(*v1.Endpoints)
		if !ok {
			log.WithField("expectedEndpoints", i).Fatal("Received unexpected object type from lister")
		}
		typedList.Items = append(typedList.Items, *item)
	}

	return &typedList
}
