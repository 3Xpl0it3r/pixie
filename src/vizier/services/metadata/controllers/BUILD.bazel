load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

# TODO(michelle): Fix this so that this file can be auto-generated using gazelle.
# All the tests below should be in a single binary.

go_library(
    name = "go_default_library",
    srcs = [
        "agent.go",
        "message_bus.go",
        "server.go",
    ],
    importpath = "pixielabs.ai/pixielabs/src/vizier/services/metadata/controllers",
    visibility = ["//visibility:public"],
    deps = [
        "//src/utils:go_default_library",
        "//src/vizier/messages/messagespb:messages_pl_go_proto",
        "//src/vizier/services/metadata/datapb:data_pl_go_proto",
        "//src/vizier/services/metadata/metadataenv:go_default_library",
        "//src/vizier/services/metadata/metadatapb:service_pl_go_proto",
        "@com_github_coreos_etcd//clientv3:go_default_library",
        "@com_github_coreos_etcd//clientv3/concurrency:go_default_library",
        "@com_github_gogo_protobuf//proto:go_default_library",
        "@com_github_nats_io_go_nats//:go_default_library",
        "@com_github_satori_go_uuid//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
    ],
)

go_test(
    name = "message_bus_test",
    srcs = ["message_bus_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//src/utils/testingutils:go_default_library",
        "//src/vizier/messages/messagespb:messages_pl_go_proto",
        "//src/vizier/services/metadata/controllers/mock:go_default_library",
        "@com_github_gogo_protobuf//proto:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_nats_io_gnatsd//server:go_default_library",
        "@com_github_nats_io_gnatsd//test:go_default_library",
        "@com_github_nats_io_go_nats//:go_default_library",
        "@com_github_phayes_freeport//:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
    ],
)

go_test(
    name = "agent_test",
    srcs = ["agent_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//src/common/uuid/proto:uuid_pl_go_proto",
        "//src/utils:go_default_library",
        "//src/utils/testingutils:go_default_library",
        "//src/vizier/services/metadata/datapb:data_pl_go_proto",
        "@com_github_coreos_etcd//clientv3:go_default_library",
        "@com_github_coreos_etcd//embed:go_default_library",
        "@com_github_gogo_protobuf//proto:go_default_library",
        "@com_github_nats_io_gnatsd//server:go_default_library",
        "@com_github_nats_io_gnatsd//test:go_default_library",
        "@com_github_nats_io_go_nats//:go_default_library",
        "@com_github_phayes_freeport//:go_default_library",
        "@com_github_satori_go_uuid//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
    ],
)

go_test(
    name = "server_test",
    srcs = ["server_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//src/common/uuid/proto:uuid_pl_go_proto",
        "//src/utils:go_default_library",
        "//src/utils/testingutils:go_default_library",
        "//src/vizier/messages/messagespb:messages_pl_go_proto",
        "//src/vizier/services/metadata/controllers/mock:go_default_library",
        "//src/vizier/services/metadata/metadataenv:go_default_library",
        "//src/vizier/services/metadata/metadatapb:service_pl_go_proto",
        "@com_github_gogo_protobuf//proto:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
    ],
)
