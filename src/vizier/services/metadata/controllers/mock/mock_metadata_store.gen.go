// Code generated by MockGen. DO NOT EDIT.
// Source: pixielabs.ai/pixielabs/src/vizier/services/metadata/controllers (interfaces: MetadataStore)

// Package mock_controllers is a generated GoMock package.
package mock_controllers

import (
	gomock "github.com/golang/mock/gomock"
	go_uuid "github.com/satori/go.uuid"
	metadatapb "pixielabs.ai/pixielabs/src/shared/k8s/metadatapb"
	datapb "pixielabs.ai/pixielabs/src/vizier/services/metadata/datapb"
	reflect "reflect"
)

// MockMetadataStore is a mock of MetadataStore interface
type MockMetadataStore struct {
	ctrl     *gomock.Controller
	recorder *MockMetadataStoreMockRecorder
}

// MockMetadataStoreMockRecorder is the mock recorder for MockMetadataStore
type MockMetadataStoreMockRecorder struct {
	mock *MockMetadataStore
}

// NewMockMetadataStore creates a new mock instance
func NewMockMetadataStore(ctrl *gomock.Controller) *MockMetadataStore {
	mock := &MockMetadataStore{ctrl: ctrl}
	mock.recorder = &MockMetadataStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMetadataStore) EXPECT() *MockMetadataStoreMockRecorder {
	return m.recorder
}

// AddToAgentUpdateQueue mocks base method
func (m *MockMetadataStore) AddToAgentUpdateQueue(arg0, arg1 string) error {
	ret := m.ctrl.Call(m, "AddToAgentUpdateQueue", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToAgentUpdateQueue indicates an expected call of AddToAgentUpdateQueue
func (mr *MockMetadataStoreMockRecorder) AddToAgentUpdateQueue(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToAgentUpdateQueue", reflect.TypeOf((*MockMetadataStore)(nil).AddToAgentUpdateQueue), arg0, arg1)
}

// AddToFrontOfAgentQueue mocks base method
func (m *MockMetadataStore) AddToFrontOfAgentQueue(arg0 string, arg1 *metadatapb.ResourceUpdate) error {
	ret := m.ctrl.Call(m, "AddToFrontOfAgentQueue", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToFrontOfAgentQueue indicates an expected call of AddToFrontOfAgentQueue
func (mr *MockMetadataStoreMockRecorder) AddToFrontOfAgentQueue(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToFrontOfAgentQueue", reflect.TypeOf((*MockMetadataStore)(nil).AddToFrontOfAgentQueue), arg0, arg1)
}

// GetAgents mocks base method
func (m *MockMetadataStore) GetAgents() (*[]datapb.AgentData, error) {
	ret := m.ctrl.Call(m, "GetAgents")
	ret0, _ := ret[0].(*[]datapb.AgentData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgents indicates an expected call of GetAgents
func (mr *MockMetadataStoreMockRecorder) GetAgents() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgents", reflect.TypeOf((*MockMetadataStore)(nil).GetAgents))
}

// GetAgentsForHostnames mocks base method
func (m *MockMetadataStore) GetAgentsForHostnames(arg0 *[]string) (*[]string, error) {
	ret := m.ctrl.Call(m, "GetAgentsForHostnames", arg0)
	ret0, _ := ret[0].(*[]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentsForHostnames indicates an expected call of GetAgentsForHostnames
func (mr *MockMetadataStoreMockRecorder) GetAgentsForHostnames(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentsForHostnames", reflect.TypeOf((*MockMetadataStore)(nil).GetAgentsForHostnames), arg0)
}

// GetEndpoints mocks base method
func (m *MockMetadataStore) GetEndpoints() ([]*metadatapb.Endpoints, error) {
	ret := m.ctrl.Call(m, "GetEndpoints")
	ret0, _ := ret[0].([]*metadatapb.Endpoints)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEndpoints indicates an expected call of GetEndpoints
func (mr *MockMetadataStoreMockRecorder) GetEndpoints() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEndpoints", reflect.TypeOf((*MockMetadataStore)(nil).GetEndpoints))
}

// GetFromAgentQueue mocks base method
func (m *MockMetadataStore) GetFromAgentQueue(arg0 string) ([]*metadatapb.ResourceUpdate, error) {
	ret := m.ctrl.Call(m, "GetFromAgentQueue", arg0)
	ret0, _ := ret[0].([]*metadatapb.ResourceUpdate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFromAgentQueue indicates an expected call of GetFromAgentQueue
func (mr *MockMetadataStoreMockRecorder) GetFromAgentQueue(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFromAgentQueue", reflect.TypeOf((*MockMetadataStore)(nil).GetFromAgentQueue), arg0)
}

// GetPods mocks base method
func (m *MockMetadataStore) GetPods() ([]*metadatapb.Pod, error) {
	ret := m.ctrl.Call(m, "GetPods")
	ret0, _ := ret[0].([]*metadatapb.Pod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPods indicates an expected call of GetPods
func (mr *MockMetadataStoreMockRecorder) GetPods() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPods", reflect.TypeOf((*MockMetadataStore)(nil).GetPods))
}

// UpdateContainers mocks base method
func (m *MockMetadataStore) UpdateContainers(arg0 []*metadatapb.ContainerInfo) error {
	ret := m.ctrl.Call(m, "UpdateContainers", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateContainers indicates an expected call of UpdateContainers
func (mr *MockMetadataStoreMockRecorder) UpdateContainers(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateContainers", reflect.TypeOf((*MockMetadataStore)(nil).UpdateContainers), arg0)
}

// UpdateEndpoints mocks base method
func (m *MockMetadataStore) UpdateEndpoints(arg0 *metadatapb.Endpoints) error {
	ret := m.ctrl.Call(m, "UpdateEndpoints", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateEndpoints indicates an expected call of UpdateEndpoints
func (mr *MockMetadataStoreMockRecorder) UpdateEndpoints(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEndpoints", reflect.TypeOf((*MockMetadataStore)(nil).UpdateEndpoints), arg0)
}

// UpdatePod mocks base method
func (m *MockMetadataStore) UpdatePod(arg0 *metadatapb.Pod) error {
	ret := m.ctrl.Call(m, "UpdatePod", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdatePod indicates an expected call of UpdatePod
func (mr *MockMetadataStoreMockRecorder) UpdatePod(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePod", reflect.TypeOf((*MockMetadataStore)(nil).UpdatePod), arg0)
}

// UpdateSchemas mocks base method
func (m *MockMetadataStore) UpdateSchemas(arg0 go_uuid.UUID, arg1 []*metadatapb.SchemaInfo) error {
	ret := m.ctrl.Call(m, "UpdateSchemas", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSchemas indicates an expected call of UpdateSchemas
func (mr *MockMetadataStoreMockRecorder) UpdateSchemas(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSchemas", reflect.TypeOf((*MockMetadataStore)(nil).UpdateSchemas), arg0, arg1)
}

// UpdateService mocks base method
func (m *MockMetadataStore) UpdateService(arg0 *metadatapb.Service) error {
	ret := m.ctrl.Call(m, "UpdateService", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateService indicates an expected call of UpdateService
func (mr *MockMetadataStoreMockRecorder) UpdateService(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateService", reflect.TypeOf((*MockMetadataStore)(nil).UpdateService), arg0)
}
