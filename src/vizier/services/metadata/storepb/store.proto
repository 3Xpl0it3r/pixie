syntax = "proto3";

package pl.vizier.services.metadata;

import "src/common/uuid/proto/uuid.proto";
import "src/common/base/proto/status.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "src/stirling/dynamic_tracing/ir/logical.proto";

option go_package = "pixielabs.ai/pixielabs/src/vizier/services/metadata/storepb;storepb";

// This file contains protos for data that is stored in the metadata service's datastore.
// Along with the protos in this file, the datastore also contains shared protos, such as from agentpb and metadatapb.

// Information about the status of a specific probe.
message ProbeInfo {
  message FailedProbeInfo {
    // The ID of the agent who has failed to register the probe.
    uuidpb.UUID agent_id = 1 [ (gogoproto.customname) = "AgentID" ];
    // A status indicating why the registration has failed.
    pl.statuspb.Status status = 2;
  }
  uuidpb.UUID probe_id = 1 [ (gogoproto.customname) = "ProbeID" ];
  // A list of all of the agents who have successfully registered this probe.
  repeated uuidpb.UUID healthy_agents = 2;
  // A list of all agents who have failed to register this probe, along with the status.
  repeated FailedProbeInfo failed_agents = 3;
  // A list of all agents who have received the register request.
  repeated uuidpb.UUID pending_agents = 4;
  // The probe program.
  pl.stirling.dynamic_tracing.ir.logical.Program program = 5;
}
