// Code generated by MockGen. DO NOT EDIT.
// Source: server.go

// Package mock_controllers is a generated GoMock package.
package mock_controllers

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	go_uuid "github.com/satori/go.uuid"
	reflect "reflect"
)

// MockAPIKeyMgr is a mock of APIKeyMgr interface
type MockAPIKeyMgr struct {
	ctrl     *gomock.Controller
	recorder *MockAPIKeyMgrMockRecorder
}

// MockAPIKeyMgrMockRecorder is the mock recorder for MockAPIKeyMgr
type MockAPIKeyMgrMockRecorder struct {
	mock *MockAPIKeyMgr
}

// NewMockAPIKeyMgr creates a new mock instance
func NewMockAPIKeyMgr(ctrl *gomock.Controller) *MockAPIKeyMgr {
	mock := &MockAPIKeyMgr{ctrl: ctrl}
	mock.recorder = &MockAPIKeyMgrMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAPIKeyMgr) EXPECT() *MockAPIKeyMgrMockRecorder {
	return m.recorder
}

// FetchOrgUserIDUsingAPIKey mocks base method
func (m *MockAPIKeyMgr) FetchOrgUserIDUsingAPIKey(ctx context.Context, key string) (go_uuid.UUID, go_uuid.UUID, error) {
	ret := m.ctrl.Call(m, "FetchOrgUserIDUsingAPIKey", ctx, key)
	ret0, _ := ret[0].(go_uuid.UUID)
	ret1, _ := ret[1].(go_uuid.UUID)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// FetchOrgUserIDUsingAPIKey indicates an expected call of FetchOrgUserIDUsingAPIKey
func (mr *MockAPIKeyMgrMockRecorder) FetchOrgUserIDUsingAPIKey(ctx, key interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchOrgUserIDUsingAPIKey", reflect.TypeOf((*MockAPIKeyMgr)(nil).FetchOrgUserIDUsingAPIKey), ctx, key)
}
