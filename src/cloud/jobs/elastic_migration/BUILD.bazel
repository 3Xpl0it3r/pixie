load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:layer.bzl", "container_layer")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")
load("@io_bazel_rules_k8s//k8s:object.bzl", "k8s_object")
load("//bazel:pl_build_system.bzl", "pl_bindata")

go_library(
    name = "go_default_library",
    srcs = ["job.go"],
    importpath = "pixielabs.ai/pixielabs/src/cloud/jobs/elastic_migration",
    visibility = ["//visibility:private"],
    deps = [
        "//src/cloud/jobs/elastic_migration/controller:go_default_library",
        "//src/cloud/jobs/elastic_migration/schema:go_default_library",
        "//src/cloud/shared/esutils:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_spf13_pflag//:go_default_library",
        "@com_github_spf13_viper//:go_default_library",
    ],
)

go_binary(
    name = "elastic_migration",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

go_image(
    name = "elastic_migration_image",
    binary = ":elastic_migration",
    importpath = "pixielabs.ai/pixielabs",
)

container_push(
    name = "push_elastic_migration_image",
    format = "Docker",
    image = ":elastic_migration_image",
    registry = "gcr.io",
    repository = "pl-dev-infra/cloud/elastic_migration_image",
    tag = "{STABLE_BUILD_TAG}",
)

"""
Usage for the following objects
# Build for dev.
$ bazel run :create_es_index_dev --define es_index=new_index_name
# Build for staging.
$ bazel run :create_es_index_prod --define es_index=new_index_name
# Build for prod.
$ bazel run :create_es_index_staging --define es_index=new_index_name

# If the index already exists for any of these, then fail.
"""

k8s_object(
    name = "create_es_index_dev",
    images = {"gcr.io/pl-dev-infra/cloud/elastic_migration_image:latest": ":elastic_migration_image"},
    kind = "job",
    substitutions = {
        "{namespace}": "plc-dev",
        "{es_index}": "$(es_index)",
        "{mapping_file}": "$(mapping_file)",
    },
    tags = ["manual"],
    template = ":elastic_migration_job.yaml",
)

k8s_object(
    name = "create_es_index_staging",
    images = {"gcr.io/pl-dev-infra/cloud/elastic_migration_image:latest": ":elastic_migration_image"},
    kind = "job",
    substitutions = {
        "{namespace}": "plc-staging",
        "{es_index}": "$(es_index)",
        "{mapping_file}": "$(mapping_file)",
    },
    tags = ["manual"],
    template = ":elastic_migration_job.yaml",
)

k8s_object(
    name = "create_es_index_prod",
    images = {"gcr.io/pl-dev-infra/cloud/elastic_migration_image:latest": ":elastic_migration_image"},
    kind = "job",
    substitutions = {
        "{namespace}": "plc",
        "{es_index}": "$(es_index)",
        "{mapping_file}": "$(mapping_file)",
    },
    tags = ["manual"],
    template = ":elastic_migration_job.yaml",
)
