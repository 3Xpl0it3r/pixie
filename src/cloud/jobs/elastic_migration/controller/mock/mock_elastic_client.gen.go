// Code generated by MockGen. DO NOT EDIT.
// Source: index_manager.go

// Package mock_controller is a generated GoMock package.
package mock_controller

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockElasticClient is a mock of ElasticClient interface
type MockElasticClient struct {
	ctrl     *gomock.Controller
	recorder *MockElasticClientMockRecorder
}

// MockElasticClientMockRecorder is the mock recorder for MockElasticClient
type MockElasticClientMockRecorder struct {
	mock *MockElasticClient
}

// NewMockElasticClient creates a new mock instance
func NewMockElasticClient(ctrl *gomock.Controller) *MockElasticClient {
	mock := &MockElasticClient{ctrl: ctrl}
	mock.recorder = &MockElasticClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockElasticClient) EXPECT() *MockElasticClientMockRecorder {
	return m.recorder
}

// HasIndex mocks base method
func (m *MockElasticClient) HasIndex(arg0 string) (bool, error) {
	ret := m.ctrl.Call(m, "HasIndex", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HasIndex indicates an expected call of HasIndex
func (mr *MockElasticClientMockRecorder) HasIndex(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasIndex", reflect.TypeOf((*MockElasticClient)(nil).HasIndex), arg0)
}

// CreateIndex mocks base method
func (m *MockElasticClient) CreateIndex(indexName, mapping string) error {
	ret := m.ctrl.Call(m, "CreateIndex", indexName, mapping)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateIndex indicates an expected call of CreateIndex
func (mr *MockElasticClientMockRecorder) CreateIndex(indexName, mapping interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateIndex", reflect.TypeOf((*MockElasticClient)(nil).CreateIndex), indexName, mapping)
}
