// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: src/cloud/config_manager/configmanagerpb/service.proto

package configmanagerpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("src/cloud/config_manager/configmanagerpb/service.proto", fileDescriptor_11c1886abb7750df)
}

var fileDescriptor_11c1886abb7750df = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x2b, 0x2e, 0x4a, 0xd6,
	0x4f, 0xce, 0xc9, 0x2f, 0x4d, 0xd1, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0x8f, 0xcf, 0x4d, 0xcc,
	0x4b, 0x4c, 0x4f, 0x2d, 0x82, 0x72, 0xa1, 0xbc, 0x82, 0x24, 0xfd, 0xe2, 0xd4, 0xa2, 0xb2, 0xcc,
	0xe4, 0x54, 0xbd, 0x82, 0xa2, 0xfc, 0x92, 0x7c, 0x21, 0xee, 0x82, 0x0a, 0x3d, 0xa8, 0x48, 0xb1,
	0x91, 0x18, 0x97, 0x88, 0x33, 0x58, 0xb5, 0x2f, 0x44, 0x75, 0x30, 0x44, 0xc2, 0xc9, 0xf5, 0xc2,
	0x43, 0x39, 0x86, 0x1b, 0x0f, 0xe5, 0x18, 0x3e, 0x3c, 0x94, 0x63, 0x6c, 0x78, 0x24, 0xc7, 0xb8,
	0xe2, 0x91, 0x1c, 0xe3, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7,
	0xf8, 0xe2, 0x91, 0x1c, 0xc3, 0x87, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x5c, 0x78, 0x2c,
	0xc7, 0x70, 0xe3, 0xb1, 0x1c, 0x43, 0x14, 0x3f, 0x9a, 0xcd, 0x49, 0x6c, 0x60, 0x2b, 0x8d, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x8e, 0x13, 0xa6, 0xac, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigManagerServiceClient is the client API for ConfigManagerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigManagerServiceClient interface {
}

type configManagerServiceClient struct {
	cc *grpc.ClientConn
}

func NewConfigManagerServiceClient(cc *grpc.ClientConn) ConfigManagerServiceClient {
	return &configManagerServiceClient{cc}
}

// ConfigManagerServiceServer is the server API for ConfigManagerService service.
type ConfigManagerServiceServer interface {
}

// UnimplementedConfigManagerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedConfigManagerServiceServer struct {
}

func RegisterConfigManagerServiceServer(s *grpc.Server, srv ConfigManagerServiceServer) {
	s.RegisterService(&_ConfigManagerService_serviceDesc, srv)
}

var _ConfigManagerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "px.services.ConfigManagerService",
	HandlerType: (*ConfigManagerServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "src/cloud/config_manager/configmanagerpb/service.proto",
}
