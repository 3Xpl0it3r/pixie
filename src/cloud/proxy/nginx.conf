# File borrowed from openresty config.

# Environment variable need to be specified here (and below).
env PL_AUTH0_DOMAIN;
env PL_AUTH0_CLIENT_ID;
env PL_DOMAIN_NAME;
env PL_API_SERVICE_HTTP;
env PL_DOCS_SERVICE_HTTP;
env PL_SEGMENT_UI_WRITE_KEY;

worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;

    resolver kube-dns.kube-system.svc.cluster.local valid=5s;

    gzip  on;
    # Compress proxied traffic.
    gzip_proxied any;
    gzip_vary on;

    # Tune nginx keepalives to work with the GCP HTTP(S) Load Balancer:
    keepalive_timeout 650;
    keepalive_requests 10000;

    # This is the default fallback server if none of the subdomains match.
    # It is only used to serve up the main page and API.
    server {
        listen [::]:56000 ssl http2 default_server;
        listen 56000 ssl http2;
        server_name _;

        ssl_certificate /certs/tls.crt;
        ssl_certificate_key /certs/tls.key;

        include /usr/local/openresty/nginx/conf/pixie_vars.conf;
        include /usr/local/openresty/nginx/conf/pixie_server_defaults.conf;
        include /usr/local/openresty/nginx/conf/pixie_health_check.conf;
        include /usr/local/openresty/nginx/conf/pixie_api.conf;

        if ($http_x_forwarded_proto = "http") {
            return 307 https://$host$request_uri;
        }

        location /install.sh {
          root /installer;
          try_files "/install.sh" =404;
        }

        location / {
          return 307 https://work.$domain_name;
        }
    }

    # This is the server that we use for all the locations that don't have a subdomain.
    # This just serves the minimal pages necessary to authenticate and get into a subdomain specfic site.
    server {
        listen [::]:56000 ssl http2;
        listen 56000 ssl http2;
        server_name work.withpixie.ai
                    work.dev.withpixie.dev
                    work.testing.withpixie.dev
                    work.staging.withpixie.dev
                    work.nightly.withpixie.dev;

        error_page 404 = @error404;

        include /usr/local/openresty/nginx/conf/pixie_vars.conf;
        include /usr/local/openresty/nginx/conf/pixie_server_defaults.conf;
        include /usr/local/openresty/nginx/conf/pixie_health_check.conf;
        include /usr/local/openresty/nginx/conf/pixie_api.conf;

        if ($http_x_forwarded_proto = "http") {
            return 307 https://$host$request_uri;
        }

        location /install.sh {
          root /installer;
          try_files "/install.sh" =404;
        }

        location / {
            root   /assets;
            include /usr/local/openresty/nginx/conf/pixie_cache.conf;
            include /usr/local/openresty/nginx/conf/pixie_filter.conf;
            try_files $uri "/index.html";
        }

        location /auth-complete {
            root   /assets;
            include /usr/local/openresty/nginx/conf/pixie_cache.conf;
            include /usr/local/openresty/nginx/conf/pixie_filter.conf;
            try_files $uri "/index.html";
        }

        location ~ ^/docs/? {
            auth_request /api/authorized;
            proxy_pass https://$docs_service/docs/$1;
        }

        location @error404 {
          return 307 https://$domain_name?not_found=$uri;
        }
    }
}
