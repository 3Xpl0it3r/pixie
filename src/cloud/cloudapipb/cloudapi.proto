syntax = "proto3";

/**********************************************************************
 * NOTICE: INTERNAL
 * This file is meant as the external protobuf interface for the cloud.
 * Please do not include dependencies that are outside of /src/common
 **********************************************************************/

package pl.cloudapi;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "src/common/uuid/proto/uuid.proto";

option go_package = "pixielabs.ai/pixielabs/src/cloud/cloudapipb;cloudapipb";

service AuthService {
  // Get a refresh token.
  rpc Login(LoginRequest) returns (LoginReply) {}
}


message LoginRequest {
  // The auth0 access token.
  string access_token = 1;
  // The name of the site to log into.
  // Internal: TODO(zasgar): This will be deprecated after we allow users to own multiple sites.
  string site_name = 3;
}

message LoginReply {
  // The opaque access token generated by our system. This is a JWT claim
  // that is used to identify the user. This token can be treated as the refresh token
  // and should not be sent to insecure clients.
  string token = 1;
  // When this login expires.
  int64 expires_at      = 2;
}

// VizierImageAuthorization is the service responsible for giving authorization to fetch vizier image.
service VizierImageAuthorization {
  rpc GetImageCredentials(GetImageCredentialsRequest) returns (GetImageCredentialsResponse) {}
}

message GetImageCredentialsRequest {}

// GetImageCredentialsResponse returns the docker credentials.
message GetImageCredentialsResponse {
  string creds = 1;
}
