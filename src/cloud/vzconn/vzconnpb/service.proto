syntax = "proto3";

package pl.services;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "src/common/uuid/proto/uuid.proto";
import "google/protobuf/any.proto";

option go_package = "pixielabs.ai/pixielabs/src/cloud/vzconn/vzconnpb;vzconnpb";

service VZConnService {
  rpc CloudConnect(stream CloudConnectRequest) returns (stream CloudConnectResponse) {}
}

// CloudConnectRequest is an envelope message that carries between Vizier and the cloud.
message CloudConnectRequest {
    // The topic that this message is publishing to.
    string topic = 1;
    // THe contents of the message.
    google.protobuf.Any msg = 2;
}

// CloudConnectResponse is an envelope message that carries information between the cloud and Vizier.
message CloudConnectResponse {
    // The topic this message is in response to.
    string topic = 1;
    // The contents of the message.
    google.protobuf.Any msg = 2;
}

message LogMessage {
    string pod = 1;
    string svc = 2;
    string log = 3;
}

message TransferLogRequest {
    repeated LogMessage batched_logs = 1;
}
