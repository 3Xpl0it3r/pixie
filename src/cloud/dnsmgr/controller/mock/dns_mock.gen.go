// Code generated by MockGen. DO NOT EDIT.
// Source: dns.go

// Package mock_controller is a generated GoMock package.
package mock_controller

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDNSService is a mock of DNSService interface
type MockDNSService struct {
	ctrl     *gomock.Controller
	recorder *MockDNSServiceMockRecorder
}

// MockDNSServiceMockRecorder is the mock recorder for MockDNSService
type MockDNSServiceMockRecorder struct {
	mock *MockDNSService
}

// NewMockDNSService creates a new mock instance
func NewMockDNSService(ctrl *gomock.Controller) *MockDNSService {
	mock := &MockDNSService{ctrl: ctrl}
	mock.recorder = &MockDNSServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDNSService) EXPECT() *MockDNSServiceMockRecorder {
	return m.recorder
}

// CreateResourceRecord mocks base method
func (m *MockDNSService) CreateResourceRecord(name, data string, ttl int64) error {
	ret := m.ctrl.Call(m, "CreateResourceRecord", name, data, ttl)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateResourceRecord indicates an expected call of CreateResourceRecord
func (mr *MockDNSServiceMockRecorder) CreateResourceRecord(name, data, ttl interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateResourceRecord", reflect.TypeOf((*MockDNSService)(nil).CreateResourceRecord), name, data, ttl)
}
