syntax = "proto3";

package pl.services;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "src/common/uuid/proto/uuid.proto";


option go_package = "pixielabs.ai/pixielabs/src/cloud/profile/proto;profile";

// Profile service tracks the user and organization profile information.
service ProfileService {
    rpc CreateUser(CreateUserRequest) returns (pl.uuidpb.UUID) {}
    rpc GetUser(pl.uuidpb.UUID) returns (UserInfo) {}
    rpc GetUserByEmail(GetUserByEmailRequest) returns (UserInfo) {}

    // Creates the initial organization with the specified user as the owner.
    rpc CreateOrgAndUser(CreateOrgAndUserRequest) returns (CreateOrgAndUserResponse) {}
    rpc GetOrg(pl.uuidpb.UUID) returns (OrgInfo) {}
    rpc GetOrgByDomain(GetOrgByDomainRequest) returns (OrgInfo) {}
    rpc UpdateUser(UpdateUserRequest) returns (UserInfo) {}
}


// UserInfo has information about a single end user in our system.
message UserInfo {
    // The ID of the user.
    pl.uuidpb.UUID id = 1 [
                          (gogoproto.customname) = "ID"
                          ];
    // The ID of the organization that they belong to.
    pl.uuidpb.UUID org_id = 2 [
                              (gogoproto.customname) = "OrgID"
                              ];
    string username = 3;
    string first_name = 4;
    string last_name = 5;
    string email = 6;
    string profile_picture = 7;
}

message GetUserByEmailRequest {
    string email = 1;
}

// OrgInfo contains information about a company in our system.
message OrgInfo {
    // The ID of the organization.
    pl.uuidpb.UUID id = 1 [
                              (gogoproto.customname) = "ID"
                              ];
    // The name of the organization (this is currently the same as the domain_name below and is the
    // last part of the email).
    string org_name = 2;
    // The last part of their email.
    string domain_name = 3;
}

message CreateUserRequest {
    pl.uuidpb.UUID org_id = 1 [
                              (gogoproto.customname) = "OrgID"
                              ];
    string username = 2;
    string first_name = 3;
    string last_name = 4;
    string email = 5;
}

message CreateOrgAndUserRequest {
    message Org {
        string org_name = 1;
        string domain_name = 2;
    }

    message User {
        string username = 1;
        string first_name = 2;
        string last_name = 3;
        string email = 4;
    }

    Org org = 1;
    User user = 2;
}

message CreateOrgAndUserResponse {
    pl.uuidpb.UUID org_id = 1 [
                              (gogoproto.customname) = "OrgID"
                              ];
    pl.uuidpb.UUID user_id = 2 [
                              (gogoproto.customname) = "UserID"
                              ];
}

message GetOrgByDomainRequest {
    string domain_name = 1;
}

message UpdateUserRequest {
  // The ID of the user.
  pl.uuidpb.UUID id = 1 [
                        (gogoproto.customname) = "ID"
                        ];
  string profile_picture = 2;
}
