# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

''' Outbound Connections

This script lists connections made to services that are not within the k8s cluster.
'''
import px


def outbound_conns(start_time: str, ip_filter: str):
    df = px.DataFrame(table='conn_stats', start_time=start_time)

    df.namespace = df.ctx['namespace']
    df.pod = df.ctx['pod']

    # Trace-role of 1 means client-side tracing.
    # Pixie only traces on the client side when traffic is leaving the cluster.
    df = df[df.trace_role == 1]

    # Filter out any client-side tracing to known pods.
    df.remote_pod_id = px.ip_to_pod_id(df.remote_addr)
    df.remote_service_id = px.ip_to_service_id(df.remote_addr)
    df = df[df.remote_pod_id == '' and df.remote_service_id == '']

    # Filter out localhost.
    df = df[not df.remote_addr == '127.0.0.1']
    df = df[not df.remote_addr == '0.0.0.0']

    # Apply user supplied filter.
    df = df[px.contains(df.remote_addr, ip_filter)]

    df = df.groupby(['pod', 'remote_addr', 'remote_port']).agg(
        conn_open=('conn_open', px.max),
        bytes_sent=('bytes_sent', px.max),
        byts_recv=('bytes_recv', px.max),
    )

    return df
