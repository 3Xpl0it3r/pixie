// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: src/common/codes/error_codes.proto

package codepb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import strconv "strconv"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Code int32

const (
	OK                Code = 0
	CANCELLED         Code = 1
	UNKNOWN           Code = 2
	INVALID_ARGUMENT  Code = 3
	DEADLINE_EXCEEDED Code = 4
	NOT_FOUND         Code = 5
	ALREADY_EXISTS    Code = 6
	PERMISSION_DENIED Code = 7
	UNAUTHENTICATED   Code = 8
	INTERNAL          Code = 9
	UNIMPLEMENTED     Code = 10
	DO_NOT_USE_       Code = 100
)

var Code_name = map[int32]string{
	0:   "OK",
	1:   "CANCELLED",
	2:   "UNKNOWN",
	3:   "INVALID_ARGUMENT",
	4:   "DEADLINE_EXCEEDED",
	5:   "NOT_FOUND",
	6:   "ALREADY_EXISTS",
	7:   "PERMISSION_DENIED",
	8:   "UNAUTHENTICATED",
	9:   "INTERNAL",
	10:  "UNIMPLEMENTED",
	100: "DO_NOT_USE_",
}
var Code_value = map[string]int32{
	"OK":                0,
	"CANCELLED":         1,
	"UNKNOWN":           2,
	"INVALID_ARGUMENT":  3,
	"DEADLINE_EXCEEDED": 4,
	"NOT_FOUND":         5,
	"ALREADY_EXISTS":    6,
	"PERMISSION_DENIED": 7,
	"UNAUTHENTICATED":   8,
	"INTERNAL":          9,
	"UNIMPLEMENTED":     10,
	"DO_NOT_USE_":       100,
}

func (Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_error_codes_8623779b0a677edf, []int{0}
}

func init() {
	proto.RegisterEnum("pl.error.Code", Code_name, Code_value)
}
func (x Code) String() string {
	s, ok := Code_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

func init() {
	proto.RegisterFile("src/common/codes/error_codes.proto", fileDescriptor_error_codes_8623779b0a677edf)
}

var fileDescriptor_error_codes_8623779b0a677edf = []byte{
	// 315 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x1c, 0x90, 0xbd, 0x52, 0x32, 0x31,
	0x18, 0x85, 0x37, 0x7c, 0x7c, 0x0b, 0x04, 0x91, 0x10, 0xb5, 0x4d, 0x61, 0x69, 0x01, 0x85, 0xad,
	0x4d, 0xdc, 0xbc, 0x6a, 0x86, 0xe5, 0x5d, 0x66, 0x37, 0x51, 0xb4, 0xc9, 0x0c, 0x3f, 0x9d, 0x18,
	0x66, 0xf1, 0x02, 0xbc, 0x04, 0x2f, 0xc3, 0x4b, 0xb1, 0xa4, 0xa4, 0x94, 0xd0, 0x58, 0x72, 0x09,
	0xce, 0xd2, 0x9d, 0x39, 0x33, 0xe7, 0x67, 0x1e, 0x7a, 0xb9, 0x2e, 0x67, 0x83, 0x99, 0x5f, 0x2e,
	0xfd, 0xdb, 0x60, 0xe6, 0xe7, 0x8b, 0xf5, 0x60, 0x51, 0x96, 0xbe, 0x74, 0x47, 0xdd, 0x5f, 0x95,
	0xfe, 0xdd, 0xf3, 0xe6, 0xea, 0xb5, 0x7f, 0x74, 0xaf, 0xb6, 0x84, 0xd6, 0x13, 0x3f, 0x5f, 0xf0,
	0x98, 0xd6, 0xb2, 0x21, 0x8b, 0x78, 0x87, 0xb6, 0x12, 0x89, 0x09, 0xa4, 0x29, 0x28, 0x46, 0x78,
	0x9b, 0x36, 0x2c, 0x0e, 0x31, 0x7b, 0x42, 0x56, 0xe3, 0xe7, 0x94, 0x69, 0x7c, 0x94, 0xa9, 0x56,
	0x4e, 0xe6, 0xf7, 0x76, 0x04, 0x68, 0xd8, 0x3f, 0x7e, 0x41, 0x7b, 0x0a, 0xa4, 0x4a, 0x35, 0x82,
	0x83, 0x49, 0x02, 0xa0, 0x40, 0xb1, 0x7a, 0x55, 0x84, 0x99, 0x71, 0x77, 0x99, 0x45, 0xc5, 0xfe,
	0x73, 0x4e, 0x4f, 0x65, 0x9a, 0x83, 0x54, 0xcf, 0x0e, 0x26, 0xba, 0x30, 0x05, 0x8b, 0xab, 0xe4,
	0x18, 0xf2, 0x91, 0x2e, 0x0a, 0x9d, 0xa1, 0x53, 0x80, 0x1a, 0x14, 0x6b, 0xf0, 0x33, 0xda, 0xb5,
	0x28, 0xad, 0x79, 0x00, 0x34, 0x3a, 0x91, 0x06, 0x14, 0x6b, 0xf2, 0x13, 0xda, 0xd4, 0x68, 0x20,
	0x47, 0x99, 0xb2, 0x16, 0xef, 0xd1, 0x8e, 0x45, 0x3d, 0x1a, 0xa7, 0x50, 0x9d, 0x00, 0xc5, 0x28,
	0xef, 0xd2, 0xb6, 0xca, 0x5c, 0x35, 0x69, 0x0b, 0x70, 0x6c, 0x7e, 0x7b, 0xb3, 0xd9, 0x89, 0x68,
	0xbb, 0x13, 0xd1, 0x61, 0x27, 0xc8, 0x47, 0x10, 0xe4, 0x2b, 0x08, 0xf2, 0x1d, 0x04, 0xd9, 0x04,
	0x41, 0x7e, 0x82, 0x20, 0xbf, 0x41, 0x44, 0x87, 0x20, 0xc8, 0xe7, 0x5e, 0x44, 0x9b, 0xbd, 0x88,
	0xb6, 0x7b, 0x11, 0xbd, 0xc4, 0x15, 0xa7, 0xd5, 0x74, 0x1a, 0x1f, 0x49, 0x5d, 0xff, 0x05, 0x00,
	0x00, 0xff, 0xff, 0x05, 0x40, 0x2a, 0xfd, 0x4f, 0x01, 0x00, 0x00,
}
