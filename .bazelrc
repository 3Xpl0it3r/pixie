# Global bazelrc file, see https://docs.bazel.build/versions/master/guide.html#bazelrc.

# This is a compatibility for bazel 0.27.
# TODO(zasgar): None of these should exists
fetch --incompatible_depset_is_not_iterable=false
fetch --incompatible_string_join_requires_strings=false
fetch --incompatible_disable_deprecated_attr_params=false

query --incompatible_string_join_requires_strings=false

build --incompatible_depset_is_not_iterable=false
build --incompatible_depset_union=false
build --incompatible_disable_deprecated_attr_params=false
build --incompatible_disable_legacy_cc_provider=false
build --incompatible_string_join_requires_strings=false
build --incompatible_require_ctx_in_configure_features=false
build --host_force_python=PY2

# Get version information into the build.
build --workspace_status_command=bazel/get_workspace_status

# Limit memory for JVM to reduce runaway usage.
startup --host_jvm_args=-Xmx1g

# For all builds, by default, exclude tests that require root or BPF privileges.
# To run a test that was filtered out:
# bazel test //path/to:test --test_tag_filter=
# Which reset the filter to empty.
build --test_tag_filters=-requires_root,-requires_bpf

# Default build opts:
build --linkopt -fuse-ld=lld

# bazel build --config asan ...
build:asan --define PL_CONFIG_ASAN=1
build:asan --copt -D__SANITIZE_ADDRESS__
build:asan --copt -fsanitize=address,undefined
build:asan --linkopt -fsanitize=address,undefined
build:asan --copt -fno-sanitize=vptr
build:asan --linkopt -fno-sanitize=vptr
build:asan --copt -fno-sanitize-recover=all
build:asan --linkopt -ldl
build:asan --define tcmalloc=disabled
build:asan --build_tag_filters=-no_asan,-manual
build:asan --test_tag_filters=-no_asan,-requires_root,-requires_bpf
build:asan --define signal_trace=disabled
build:asan --copt -DADDRESS_SANITIZER=1
build:asan --test_env=ASAN_SYMBOLIZER_PATH
build:asan --test_env=ASAN_OPTIONS=handle_abort=1:allow_addr2line=true
build:asan --linkopt -fuse-ld=lld
build:asan --cxxopt -std=c++17
build:asan --define tcmalloc=disabled

# bazel build --config msan
build:msan --define PL_CONFIG_MSAN=1
build:msan --copt -fsanitize=memory
build:msan --linkopt -fsanitize=memory
build:msan --define tcmalloc=disabled
build:asan --build_tag_filters=-no_msan,-manual
build:msan --test_tag_filters=-no_msan,-requires_root,-requires_bpf
build:msan --copt -fsanitize-memory-track-origins=2
build:msan --linkopt -fuse-ld=lld
build:msan --cxxopt -std=c++17
build:msan --define tcmalloc=disabled

# bazel build --config tsan
build:tsan --define PL_CONFIG_TSAN=1
build:tsan --copt -fsanitize=thread
build:tsan --linkopt -fsanitize=thread
build:tsan --define tcmalloc=disabled
build:asan --build_tag_filters=-no_tsan,-manual
build:tsan --test_tag_filters=-no_tsan,-requires_root,-requires_bpf
build:tsan --linkopt -fuse-ld=lld
build:tsan --cxxopt -std=c++17
build:tsan --define tcmalloc=disabled

# bazel build --config bpf
build:bpf --build_tag_filters=requires_bpf
test:bpf --test_tag_filters=requires_bpf

# We need this to ensure that external projects are built with
# C++17 support. This is needed in some libraries like absl which
# have different behavior with C++17.
build --cxxopt -std=c++17

coverage --cxxopt -fprofile-arcs
coverage --cxxopt -ftest-coverage
coverage --instrument_test_targets

# Use stable GIT build tag by default.
build --define BUNDLE_VERSION={STABLE_BUILD_TAG}

# Import other bazelrc files
try-import %workspace%/jenkins.bazelrc
try-import %workspace%/user.bazelrc
