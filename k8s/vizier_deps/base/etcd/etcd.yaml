---
apiVersion: v1
kind: Service
metadata:
  name: etcd
spec:
  clusterIP: None
  ports:
  - port: 2379
    name: client
  - port: 2380
    name: peer
  selector:
    vizier-dep: etcd
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: etcd
  labels:
    vizier-dep: etcd
spec:
  serviceName: etcd
  replicas: 1
  template:
    metadata:
      name: etcd
      labels:
        app: etcd
        vizier-dep: etcd
    spec:
      containers:
      - name: etcd
        image: quay.io/coreos/etcd:v3.4.8
        ports:
        - containerPort: 2379
          name: client
        - containerPort: 2380
          name: peer
        volumeMounts:
        - name: data
          mountPath: /var/run/etcd
        - mountPath: /peercerts
          name: peer-certs
        - mountPath: /servercerts
          name: server-certs
        - mountPath: /clientcerts
          name: client-certs
        command:
        - /bin/sh
        - -c
        - |
            PEERS="etcd-0=http://etcd-0.etcd:2380"
            exec etcd --name ${HOSTNAME} \
            --listen-peer-urls http://0.0.0.0:2380 \
            --listen-client-urls https://0.0.0.0:2379 \
            --advertise-client-urls https://${HOSTNAME}.etcd:2379 \
            --initial-advertise-peer-urls http://${HOSTNAME}:2380 \
            --initial-cluster-token etcd-cluster-1 \
            --initial-cluster ${PEERS} \
            --initial-cluster-state new \
            --data-dir /var/run/etcd/default.etcd \
            --cert-file /servercerts/server.crt \
            --key-file /servercerts/server.key \
            --trusted-ca-file /servercerts/server-ca.crt \
            --client-cert-auth \
            --max-wals 2 \
            --max-snapshots 2
      volumes:
      - name: client-certs
        secret:
          secretName: etcd-client-tls-certs
      - name: server-certs
        secret:
          secretName: etcd-server-tls-certs
      - name: peer-certs
        secret:
          secretName: etcd-peer-tls-certs
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
