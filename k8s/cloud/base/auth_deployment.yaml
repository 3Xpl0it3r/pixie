---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-server
  labels:
    db: pgsql
spec:
  selector:
    matchLabels:
      name: auth-server
  template:
    metadata:
      labels:
        name: auth-server
    spec:
      containers:
      - name: auth-server
        image: gcr.io/pl-dev-infra/cloud/auth_server_image
        ports:
        - containerPort: 50100
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 50100
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 50100
        envFrom:
        - configMapRef:
            name: pl-tls-config
        - configMapRef:
            name: pl-db-config
        env:
        - name: PL_JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              name: cloud-auth-secrets
              key: jwt-signing-key
        - name: PL_AUTH0_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: cloud-auth0-secrets
              key: auth0-client-id
        - name: PL_AUTH0_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: cloud-auth0-secrets
              key: auth0-client-secret
        - name: PL_PROFILE_SERVICE
          valueFrom:
            configMapKeyRef:
              name: pl-service-config
              key: PL_PROFILE_SERVICE
        - name: PL_PROJECT_MANAGER_SERVICE
          valueFrom:
            configMapKeyRef:
              name: pl-service-config
              key: PL_PROJECT_MANAGER_SERVICE
        - name: PL_DATABASE_KEY
          valueFrom:
            secretKeyRef:
              name: pl-db-secrets
              key: database-key
        - name: PL_POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: pl-db-secrets
              key: PL_POSTGRES_USERNAME
        - name: PL_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pl-db-secrets
              key: PL_POSTGRES_PASSWORD
        volumeMounts:
        - name: certs
          mountPath: /certs
      volumes:
      - name: certs
        secret:
          secretName: service-tls-certs
