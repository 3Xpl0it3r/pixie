syntax = "proto3";

package pl.services;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "services/common/proto/jwt.proto";

option go_package = "pixielabs.ai/pixielabs/services/auth/proto;auth";


service AuthService {
  // Performs a login based on auth0 credentials and returns an opaque JWT identifier for the user.
  rpc Login(LoginRequest) returns (LoginReply) {}

  // Takes an opaque identifier (from above) and produces a token with user details.
  rpc GetAugmentedToken(GetAugmentedAuthTokenRequest) returns (GetAugmentedAuthTokenResponse) {}
}

message LoginRequest {
  // The auth0 access token.
  string access_token = 1;
}

message LoginReply {
  // The opaque access token generated by our system. This is a JWT claim
  // that is used to identify the user.
  string token = 1;
  // When this login expires.
  int64 expires_at      = 2;
}

message GetAugmentedAuthTokenRequest {
  // The signed token identifying the user.
  string token = 1;
}

message GetAugmentedAuthTokenResponse {
  // The signed token augmented with user information. This can contain additional information about
  // the user such as permissions, etc. This allows us to keep the initial token small.
  string token = 1;
  // The JWT claims for this user.
  pl.common.JWTClaims claims = 2;
}
